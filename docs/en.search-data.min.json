[{"id":0,"href":"/examples/default/","title":"Default","parent":"Examples","content":"   Getting started     Home WiFi     Kubernetes APIserver     Multi file     No alerts     Raw SLI     SLI plugin     "},{"id":1,"href":"/introduction/","title":"Getting started","parent":"","content":"Get sloth and execute with one of the examples:\nsloth generate -i ./examples/getting-started.yml  From the spec, you will obtain the rules for Prometheus with the generated SLO recording rules and alert rules.\nSLO spec  version:\u0026#34;prometheus/v1\u0026#34;service:\u0026#34;myservice\u0026#34;labels:owner:\u0026#34;myteam\u0026#34;repo:\u0026#34;myorg/myservice\u0026#34;tier:\u0026#34;2\u0026#34;slos:# We allow failing (5xx and 429) 1 request every 1000 requests (99.9%).- name:\u0026#34;requests-availability\u0026#34;objective:99.9description:\u0026#34;Common SLO based on availability for HTTP request responses.\u0026#34;sli:events:error_query:sum(rate(http_request_duration_seconds_count{job=\u0026#34;myservice\u0026#34;,code=~\u0026#34;(5..|429)\u0026#34;}[{{.window}}]))total_query:sum(rate(http_request_duration_seconds_count{job=\u0026#34;myservice\u0026#34;}[{{.window}}]))alerting:name:MyServiceHighErrorRatelabels:category:\u0026#34;availability\u0026#34;annotations:# Overwrite default Sloth SLO alert summmary on ticket and page alerts.summary:\u0026#34;High error rate on \u0026#39;myservice\u0026#39; requests responses\u0026#34;page_alert:labels:severity:pageteamrouting_key:myteamticket_alert:labels:severity:\u0026#34;slack\u0026#34;slack_channel:\u0026#34;#alerts-myteam\u0026#34;  Generated  ---# Code generated by Sloth (dev): https://github.com/slok/sloth.# DO NOT EDIT.groups:- name:sloth-slo-sli-recordings-myservice-requests-availabilityrules:- record:slo:sli_error:ratio_rate5mexpr:|(sum(rate(http_request_duration_seconds_count{job=\u0026#34;myservice\u0026#34;,code=~\u0026#34;(5..|429)\u0026#34;}[5m]))) / (sum(rate(http_request_duration_seconds_count{job=\u0026#34;myservice\u0026#34;}[5m])))labels:cmd:examplesgen.showner:myteamrepo:myorg/myservicesloth_id:myservice-requests-availabilitysloth_service:myservicesloth_slo:requests-availabilitysloth_window:5mtier:\u0026#34;2\u0026#34;- record:slo:sli_error:ratio_rate30mexpr:|(sum(rate(http_request_duration_seconds_count{job=\u0026#34;myservice\u0026#34;,code=~\u0026#34;(5..|429)\u0026#34;}[30m]))) / (sum(rate(http_request_duration_seconds_count{job=\u0026#34;myservice\u0026#34;}[30m])))labels:cmd:examplesgen.showner:myteamrepo:myorg/myservicesloth_id:myservice-requests-availabilitysloth_service:myservicesloth_slo:requests-availabilitysloth_window:30mtier:\u0026#34;2\u0026#34;- record:slo:sli_error:ratio_rate1hexpr:|(sum(rate(http_request_duration_seconds_count{job=\u0026#34;myservice\u0026#34;,code=~\u0026#34;(5..|429)\u0026#34;}[1h]))) / (sum(rate(http_request_duration_seconds_count{job=\u0026#34;myservice\u0026#34;}[1h])))labels:cmd:examplesgen.showner:myteamrepo:myorg/myservicesloth_id:myservice-requests-availabilitysloth_service:myservicesloth_slo:requests-availabilitysloth_window:1htier:\u0026#34;2\u0026#34;- record:slo:sli_error:ratio_rate2hexpr:|(sum(rate(http_request_duration_seconds_count{job=\u0026#34;myservice\u0026#34;,code=~\u0026#34;(5..|429)\u0026#34;}[2h]))) / (sum(rate(http_request_duration_seconds_count{job=\u0026#34;myservice\u0026#34;}[2h])))labels:cmd:examplesgen.showner:myteamrepo:myorg/myservicesloth_id:myservice-requests-availabilitysloth_service:myservicesloth_slo:requests-availabilitysloth_window:2htier:\u0026#34;2\u0026#34;- record:slo:sli_error:ratio_rate6hexpr:|(sum(rate(http_request_duration_seconds_count{job=\u0026#34;myservice\u0026#34;,code=~\u0026#34;(5..|429)\u0026#34;}[6h]))) / (sum(rate(http_request_duration_seconds_count{job=\u0026#34;myservice\u0026#34;}[6h])))labels:cmd:examplesgen.showner:myteamrepo:myorg/myservicesloth_id:myservice-requests-availabilitysloth_service:myservicesloth_slo:requests-availabilitysloth_window:6htier:\u0026#34;2\u0026#34;- record:slo:sli_error:ratio_rate1dexpr:|(sum(rate(http_request_duration_seconds_count{job=\u0026#34;myservice\u0026#34;,code=~\u0026#34;(5..|429)\u0026#34;}[1d]))) / (sum(rate(http_request_duration_seconds_count{job=\u0026#34;myservice\u0026#34;}[1d])))labels:cmd:examplesgen.showner:myteamrepo:myorg/myservicesloth_id:myservice-requests-availabilitysloth_service:myservicesloth_slo:requests-availabilitysloth_window:1dtier:\u0026#34;2\u0026#34;- record:slo:sli_error:ratio_rate3dexpr:|(sum(rate(http_request_duration_seconds_count{job=\u0026#34;myservice\u0026#34;,code=~\u0026#34;(5..|429)\u0026#34;}[3d]))) / (sum(rate(http_request_duration_seconds_count{job=\u0026#34;myservice\u0026#34;}[3d])))labels:cmd:examplesgen.showner:myteamrepo:myorg/myservicesloth_id:myservice-requests-availabilitysloth_service:myservicesloth_slo:requests-availabilitysloth_window:3dtier:\u0026#34;2\u0026#34;- record:slo:sli_error:ratio_rate30dexpr:|sum_over_time(slo:sli_error:ratio_rate5m{sloth_id=\u0026#34;myservice-requests-availability\u0026#34;, sloth_service=\u0026#34;myservice\u0026#34;, sloth_slo=\u0026#34;requests-availability\u0026#34;}[30d]) / ignoring (sloth_window) count_over_time(slo:sli_error:ratio_rate5m{sloth_id=\u0026#34;myservice-requests-availability\u0026#34;, sloth_service=\u0026#34;myservice\u0026#34;, sloth_slo=\u0026#34;requests-availability\u0026#34;}[30d])labels:sloth_window:30d- name:sloth-slo-meta-recordings-myservice-requests-availabilityrules:- record:slo:objective:ratioexpr:vector(0.9990000000000001)labels:cmd:examplesgen.showner:myteamrepo:myorg/myservicesloth_id:myservice-requests-availabilitysloth_service:myservicesloth_slo:requests-availabilitytier:\u0026#34;2\u0026#34;- record:slo:error_budget:ratioexpr:vector(1-0.9990000000000001)labels:cmd:examplesgen.showner:myteamrepo:myorg/myservicesloth_id:myservice-requests-availabilitysloth_service:myservicesloth_slo:requests-availabilitytier:\u0026#34;2\u0026#34;- record:slo:time_period:daysexpr:vector(30)labels:cmd:examplesgen.showner:myteamrepo:myorg/myservicesloth_id:myservice-requests-availabilitysloth_service:myservicesloth_slo:requests-availabilitytier:\u0026#34;2\u0026#34;- record:slo:current_burn_rate:ratioexpr:|slo:sli_error:ratio_rate5m{sloth_id=\u0026#34;myservice-requests-availability\u0026#34;, sloth_service=\u0026#34;myservice\u0026#34;, sloth_slo=\u0026#34;requests-availability\u0026#34;} / on(sloth_id, sloth_slo, sloth_service) group_left slo:error_budget:ratio{sloth_id=\u0026#34;myservice-requests-availability\u0026#34;, sloth_service=\u0026#34;myservice\u0026#34;, sloth_slo=\u0026#34;requests-availability\u0026#34;}labels:cmd:examplesgen.showner:myteamrepo:myorg/myservicesloth_id:myservice-requests-availabilitysloth_service:myservicesloth_slo:requests-availabilitytier:\u0026#34;2\u0026#34;- record:slo:period_burn_rate:ratioexpr:|slo:sli_error:ratio_rate30d{sloth_id=\u0026#34;myservice-requests-availability\u0026#34;, sloth_service=\u0026#34;myservice\u0026#34;, sloth_slo=\u0026#34;requests-availability\u0026#34;} / on(sloth_id, sloth_slo, sloth_service) group_left slo:error_budget:ratio{sloth_id=\u0026#34;myservice-requests-availability\u0026#34;, sloth_service=\u0026#34;myservice\u0026#34;, sloth_slo=\u0026#34;requests-availability\u0026#34;}labels:cmd:examplesgen.showner:myteamrepo:myorg/myservicesloth_id:myservice-requests-availabilitysloth_service:myservicesloth_slo:requests-availabilitytier:\u0026#34;2\u0026#34;- record:slo:period_error_budget_remaining:ratioexpr:1- slo:period_burn_rate:ratio{sloth_id=\u0026#34;myservice-requests-availability\u0026#34;,sloth_service=\u0026#34;myservice\u0026#34;, sloth_slo=\u0026#34;requests-availability\u0026#34;}labels:cmd:examplesgen.showner:myteamrepo:myorg/myservicesloth_id:myservice-requests-availabilitysloth_service:myservicesloth_slo:requests-availabilitytier:\u0026#34;2\u0026#34;- record:sloth_slo_infoexpr:vector(1)labels:cmd:examplesgen.showner:myteamrepo:myorg/myservicesloth_id:myservice-requests-availabilitysloth_mode:cli-gen-promsloth_objective:\u0026#34;99.9\u0026#34;sloth_service:myservicesloth_slo:requests-availabilitysloth_spec:prometheus/v1sloth_version:devtier:\u0026#34;2\u0026#34;- name:sloth-slo-alerts-myservice-requests-availabilityrules:- alert:MyServiceHighErrorRateexpr:|( (slo:sli_error:ratio_rate5m{sloth_id=\u0026#34;myservice-requests-availability\u0026#34;, sloth_service=\u0026#34;myservice\u0026#34;, sloth_slo=\u0026#34;requests-availability\u0026#34;} \u0026gt; (14.4 * 0.0009999999999999432)) and ignoring (sloth_window) (slo:sli_error:ratio_rate1h{sloth_id=\u0026#34;myservice-requests-availability\u0026#34;, sloth_service=\u0026#34;myservice\u0026#34;, sloth_slo=\u0026#34;requests-availability\u0026#34;} \u0026gt; (14.4 * 0.0009999999999999432)) ) or ignoring (sloth_window) ( (slo:sli_error:ratio_rate30m{sloth_id=\u0026#34;myservice-requests-availability\u0026#34;, sloth_service=\u0026#34;myservice\u0026#34;, sloth_slo=\u0026#34;requests-availability\u0026#34;} \u0026gt; (6 * 0.0009999999999999432)) and ignoring (sloth_window) (slo:sli_error:ratio_rate6h{sloth_id=\u0026#34;myservice-requests-availability\u0026#34;, sloth_service=\u0026#34;myservice\u0026#34;, sloth_slo=\u0026#34;requests-availability\u0026#34;} \u0026gt; (6 * 0.0009999999999999432)) )labels:category:availabilityrouting_key:myteamseverity:pageteamsloth_severity:pageannotations:summary:High error rate on \u0026#39;myservice\u0026#39; requests responsestitle:(page) {{$labels.sloth_service}} {{$labels.sloth_slo}} SLO error budgetburn rate is too fast.- alert:MyServiceHighErrorRateexpr:|( (slo:sli_error:ratio_rate2h{sloth_id=\u0026#34;myservice-requests-availability\u0026#34;, sloth_service=\u0026#34;myservice\u0026#34;, sloth_slo=\u0026#34;requests-availability\u0026#34;} \u0026gt; (3 * 0.0009999999999999432)) and ignoring (sloth_window) (slo:sli_error:ratio_rate1d{sloth_id=\u0026#34;myservice-requests-availability\u0026#34;, sloth_service=\u0026#34;myservice\u0026#34;, sloth_slo=\u0026#34;requests-availability\u0026#34;} \u0026gt; (3 * 0.0009999999999999432)) ) or ignoring (sloth_window) ( (slo:sli_error:ratio_rate6h{sloth_id=\u0026#34;myservice-requests-availability\u0026#34;, sloth_service=\u0026#34;myservice\u0026#34;, sloth_slo=\u0026#34;requests-availability\u0026#34;} \u0026gt; (1 * 0.0009999999999999432)) and ignoring (sloth_window) (slo:sli_error:ratio_rate3d{sloth_id=\u0026#34;myservice-requests-availability\u0026#34;, sloth_service=\u0026#34;myservice\u0026#34;, sloth_slo=\u0026#34;requests-availability\u0026#34;} \u0026gt; (1 * 0.0009999999999999432)) )labels:category:availabilityseverity:slackslack_channel:\u0026#39;#alerts-myteam\u0026#39;sloth_severity:ticketannotations:summary:High error rate on \u0026#39;myservice\u0026#39; requests responsestitle:(ticket) {{$labels.sloth_service}} {{$labels.sloth_slo}} SLO error budgetburn rate is too fast.   "},{"id":2,"href":"/examples/kubernetes/","title":"Kubernetes","parent":"Examples","content":"   Getting started     Home WiFi     Multi file     SLI plugin     "},{"id":3,"href":"/examples/openslo/","title":"OpenSLO","parent":"Examples","content":"   Getting started     Kubernetes APIserver     "},{"id":4,"href":"/usage/cli/","title":"CLI generate","parent":"Usage","content":"generate will generate Prometheus rules in different formats based on the specs.\nThis mode only needs the CLI so its very useful for GitOps, CI, scripts or as a CLI on your toolbox.\ngenerate command supports multiple spec types and will detect the input spec type based on the spec, accordingly it will generate the output in different formats depending on the loaded spec:\n Default spec generates vanilla Prometheus rules. Kubernetes spec generates Prometheus operator based CRD Prometheus rules.  Kubernetes without prometheus-operator\nIn this case, you will need default spec to get vanilla prometheus rules and deploy as you deploy other Prometheus rules in the Kubernetes cluster (e.g. Using configmaps).  CLI mode don\u0026rsquo;t need CRDs\nSloth CRD is NOT required in the cluster because the generation happens offline as a CLI. For controller/operator K8s flow, check Kubernetes controller section  28 days time windows\nBy default Sloth uses 30 day time windows. Use --window-days=28 flag to set a 28 day (4 weeks) time window.  Kubernetes specs need prometheus-operator CRDs\nKubernetes specs generate Prometheus operator Rules CRs, this means that the [CRD][prom-op-rules-crd] is required to be registered in the cluster.  Example    $ sloth generate -i ./examples/home-wifi.yml -o /tmp/home-wifi.yml INFO[0000] Generating from Prometheus spec version=v0.1.0-43-g5715af5 INFO[0000] Multiwindow-multiburn alerts generated slo=home-wifi-good-wifi-client-satisfaction svc=generate.prometheus.Service version=v0.1.0-43-g5715af5 INFO[0000] SLI recording rules generated rules=8 slo=home-wifi-good-wifi-client-satisfaction svc=generate.prometheus.Service version=v0.1.0-43-g5715af5 INFO[0000] Metadata recording rules generated rules=7 slo=home-wifi-good-wifi-client-satisfaction svc=generate.prometheus.Service version=v0.1.0-43-g5715af5 INFO[0000] SLO alert rules generated rules=2 slo=home-wifi-good-wifi-client-satisfaction svc=generate.prometheus.Service version=v0.1.0-43-g5715af5 INFO[0000] Multiwindow-multiburn alerts generated slo=home-wifi-risk-wifi-client-satisfaction svc=generate.prometheus.Service version=v0.1.0-43-g5715af5 INFO[0000] SLI recording rules generated rules=8 slo=home-wifi-risk-wifi-client-satisfaction svc=generate.prometheus.Service version=v0.1.0-43-g5715af5 INFO[0000] Metadata recording rules generated rules=7 slo=home-wifi-risk-wifi-client-satisfaction svc=generate.prometheus.Service version=v0.1.0-43-g5715af5 INFO[0000] SLO alert rules generated rules=2 slo=home-wifi-risk-wifi-client-satisfaction svc=generate.prometheus.Service version=v0.1.0-43-g5715af5 INFO[0000] Prometheus rules written format=yaml groups=6 out=/tmp/home-wifi.yml svc=storage.IOWriter version=v0.1.0-43-g5715af5  "},{"id":5,"href":"/specs/default/","title":"Default (prometheus/v1)","parent":"SLO API \u0026 Specs","content":"Only CLI, Not Kubernetes compatible\nThis spec can\u0026rsquo;t be used with Kubernetes CRDs, use Kubernetes spec instead.  This is the default format for Sloth, doesn\u0026rsquo;t depend on Kubernetes CRDs or anything.\nNormally this format is used when the integration you want is a vanilla Prometheus integration with raw Prometheus rules, so, this will generate the prometheus recording and alerting rules in Standard Prometheus YAML format.\n Spec Examples  CLI Example:\n$ sloth generate -i ./examples/home-wifi.yml -o /tmp/home-wifi.yml INFO[0000] Generating from Prometheus spec version=v0.1.0-43-g5715af5 INFO[0000] Multiwindow-multiburn alerts generated slo=home-wifi-good-wifi-client-satisfaction svc=generate.prometheus.Service version=v0.1.0-43-g5715af5 INFO[0000] SLI recording rules generated rules=8 slo=home-wifi-good-wifi-client-satisfaction svc=generate.prometheus.Service version=v0.1.0-43-g5715af5 INFO[0000] Metadata recording rules generated rules=7 slo=home-wifi-good-wifi-client-satisfaction svc=generate.prometheus.Service version=v0.1.0-43-g5715af5 INFO[0000] SLO alert rules generated rules=2 slo=home-wifi-good-wifi-client-satisfaction svc=generate.prometheus.Service version=v0.1.0-43-g5715af5 INFO[0000] Multiwindow-multiburn alerts generated slo=home-wifi-risk-wifi-client-satisfaction svc=generate.prometheus.Service version=v0.1.0-43-g5715af5 INFO[0000] SLI recording rules generated rules=8 slo=home-wifi-risk-wifi-client-satisfaction svc=generate.prometheus.Service version=v0.1.0-43-g5715af5 INFO[0000] Metadata recording rules generated rules=7 slo=home-wifi-risk-wifi-client-satisfaction svc=generate.prometheus.Service version=v0.1.0-43-g5715af5 INFO[0000] SLO alert rules generated rules=2 slo=home-wifi-risk-wifi-client-satisfaction svc=generate.prometheus.Service version=v0.1.0-43-g5715af5 INFO[0000] Prometheus rules written format=yaml groups=6 out=/tmp/home-wifi.yml svc=storage.IOWriter version=v0.1.0-43-g5715af5  "},{"id":6,"href":"/introduction/features/","title":"Features","parent":"Getting started","content":" Simple, maintainable and understandable SLO spec. Reliable SLO metrics and alerts. Based on Google SLO implementation and multi window multi burn alerts framework. Autogenerates Prometheus SLI recording rules in different time windows. Autogenerates Prometheus SLO metadata rules. Autogenerates Prometheus SLO multi window multi burn alert rules (Page and warning). SLO spec validation (including validate command for Gitops and CI). Customization of labels, disabling different type of alerts\u0026hellip; A single way (uniform) of creating SLOs across all different services and teams. Automatic Grafana dashboard to see all your SLOs state. Single binary and easy to use CLI. Kubernetes (Prometheus-operator) support. Kubernetes Controller/operator mode with CRDs. Support different SLI types. Support for SLI plugins A library with common SLI plugins. OpenSLO support.  "},{"id":7,"href":"/specs/kubernetes/","title":"Kubernetes (CRD)","parent":"SLO API \u0026 Specs","content":"CLI compatible\nThis spec can be used in the same way the default spec is used with the CLI.  Kubernetes compatible\nThis spec can be used as a Kubernetes resource using CR (needs CRD registered on Kubernetes APIserver).  Kubernetes format means that the SLOs use a Kubernetes style spec. Is very similar to the default one, except that this format can be used in two ways, the regular CLI mode, and in Kubernetes controller mode using CRs.\nCheck related resources:\n Spec. Examples K8s client. CRD manifest.  Will generate from a Sloth CRD spec into [Prometheus-operator][crd rules][prom-op-rules]. This generates the prometheus operator CRDs based on the Sloth CRD template.\nCLI Example:\n$ sloth generate -i ./examples/k8s-home-wifi.yml -o /tmp/k8s-home-wifi.yml INFO[0000] Generating from Kubernetes Prometheus spec version=v0.1.0-43-g5715af5 INFO[0000] Multiwindow-multiburn alerts generated slo=home-wifi-good-wifi-client-satisfaction svc=generate.prometheus.Service version=v0.1.0-43-g5715af5 INFO[0000] SLI recording rules generated rules=8 slo=home-wifi-good-wifi-client-satisfaction svc=generate.prometheus.Service version=v0.1.0-43-g5715af5 INFO[0000] Metadata recording rules generated rules=7 slo=home-wifi-good-wifi-client-satisfaction svc=generate.prometheus.Service version=v0.1.0-43-g5715af5 INFO[0000] SLO alert rules generated rules=2 slo=home-wifi-good-wifi-client-satisfaction svc=generate.prometheus.Service version=v0.1.0-43-g5715af5 INFO[0000] Multiwindow-multiburn alerts generated slo=home-wifi-risk-wifi-client-satisfaction svc=generate.prometheus.Service version=v0.1.0-43-g5715af5 INFO[0000] SLI recording rules generated rules=8 slo=home-wifi-risk-wifi-client-satisfaction svc=generate.prometheus.Service version=v0.1.0-43-g5715af5 INFO[0000] Metadata recording rules generated rules=7 slo=home-wifi-risk-wifi-client-satisfaction svc=generate.prometheus.Service version=v0.1.0-43-g5715af5 INFO[0000] SLO alert rules generated rules=2 slo=home-wifi-risk-wifi-client-satisfaction svc=generate.prometheus.Service version=v0.1.0-43-g5715af5  "},{"id":8,"href":"/usage/kubernetes/","title":"Kubernetes controller","parent":"Usage","content":"kubernetes-controller command runs Sloth as a controller/operator that will react on sloth.slok.dev/v1/PrometheusServiceLevel CRD.\nIn the controller mode, Sloth will be running listneing to Kubernetes Sloth SLO CR events and generate the required prometheus-operator CR rules\nIn the end, the controller mode makes the same work as the CLI however integrates better with a native Kubernetes flow.\nSloth CRD is required\nExample:\n$ kubectl apply -f ./pkg/kubernetes/gen/crd/sloth.slok.dev_prometheusservicelevels.yaml   Prometheus Operator Rules CRD is required\nExample:\n$ kubectl apply -f ./test/integration/crd/prometheus-operator-crd.yaml   28 days time windows\nBy default Sloth uses 30 day time windows. Use --window-days=28 flag to set a 28 day (4 weeks) time window.  Deploying in Kubernetes    Check Kubernetes installing section\nExample    # Run sloth controller. $ kubectl create ns monitoring $ kubectl apply -f ./deploy/kubernetes/raw/sloth.yaml # Deploy some SLOs. $ kubectl apply -f ./examples/k8s-getting-started.yml # Get CRs. $ kubectl -n monitoring get slos NAME SERVICE DESIRED SLOS READY SLOS GEN OK GEN AGE AGE sloth-slo-my-service myservice 1 1 true 27s 27s $ kubectl -n monitoring get prometheusrules NAME AGE sloth-slo-my-service 38s  "},{"id":9,"href":"/usage/plugins/","title":"SLI plugins","parent":"Usage","content":"SLI plugins are small Go plugins (using Yaegi) that can be loaded on Sloth start.\nThese plugins can be referenced as an SLI on the SLO specs and will return a raw SLI type.\nCommon plugins    Sloth maintains a library with common SLI plugins that can be used on your SLOs or used as examples to develop your own ones.\n Check plugins source code here. Check the documentation here.  Developing plugins    prometheus/v1    Developing a prometheus/v1 SLI plugin is very easy, however you need to meet some requirements:\n The plugin version used as a global called SLIPluginVersion. A plugin ID global called SLIPluginID. A Plugin logic function called SLIPlugin. The plugin must be in a single file named plugin.go. Plugins only can use the Go standard library (reflect and unsafe packages can\u0026rsquo;t be used). Plugin received options are a map[string]string to avoid interface{} problems on dynamic execution code, the conversion to specific types are responsibility of the plugin. Plugins don\u0026rsquo;t depend on go modules, GOPATH or similar (thanks to the previous requirements).  Sloth knows how to autodiscover plugins giving a path (--sli-plugins-path), and will load all the discovered ones.\nA very simple example:\nfrom plugins/x/y/plugin.go\npackage testplugin import \u0026quot;context\u0026quot; const ( SLIPluginVersion = \u0026quot;prometheus/v1\u0026quot; SLIPluginID = \u0026quot;test_plugin\u0026quot; ) func SLIPlugin(ctx context.Context, meta, labels, options map[string]string) (string, error) { return \u0026quot;rate(my_raw_error_ratio_query{}[{{.window}}])\u0026quot;, nil }  Used in SLO spec:\nversion: \u0026quot;prometheus/v1\u0026quot; service: \u0026quot;myservice\u0026quot; slos: - name: \u0026quot;some-slo\u0026quot; objective: 99.9 sli: plugin: id: \u0026quot;test_plugin\u0026quot; options: opt1: \u0026quot;something\u0026quot; opt2: \u0026quot;something\u0026quot; alerting: #...  On spec load, Sloth will execute the referenced plugins with the options and use the result as a Raw SLI type, the one that returns the error ratio query.\nWhy should I use plugins?    By default you shouldn\u0026rsquo;t unless you have scenarios where they can simplify, add security or improve the SLO adoption on the team/company. Some examples:\n SLI custom validation (parameters, queries\u0026hellip;). Company wide precreated SLIs for common used libraries. Complex Prometheus query SLIs. Precreated SLIs for the team or company that normally everyones uses on the SLOs. OSS SLI plugins that come with the apps, frameworks or libraries (e.g Kubernetes apiserver, http framework X\u0026hellip;). The company or the team could have a repository with all the shared plugins and everyone could use them and contribute with new ones. Automation power when templates are not enough.  "},{"id":10,"href":"/specs/","title":"SLO API \u0026 Specs","parent":"","content":""},{"id":11,"href":"/usage/slo-validation/","title":"SLO validation","parent":"Usage","content":"Sloth validates the spec on generation, however, on specific steps of the SLO generation process, we only want to validate a group of SLOs.\nFor this purpose Sloth comes with a helpful command called validate. It will discover all the specs recursively and apply the same generation process as generate (including plugins, options\u0026hellip;) but discarding the result.\nExample that validates all SLOs in a directory (including subdirectories) and excludes all in spec files that match _gen in the spec path.\n$ sloth validate --input ./examples --sli-plugins-path ./examples/plugins --fs-exclude _gen INFO[0000] SLI plugins loaded plugins=1 version=dev INFO[0000] Validation succeeded slo-specs=13 version=dev  This command is very helpful on Gitops and CI pipelines to have a fast feedback loop, independently of the process you are using for generating the SLOs (Kubernetes controller or CLI).\n"},{"id":12,"href":"/introduction/install/","title":"Installing Sloth","parent":"Getting started","content":"Releases    Get binary releases from https://github.com/slok/sloth/releases\nDocker images    Official multi arch docker images in dockerhub.\ndocker pull slok/sloth  Building from source code    Clone the repository and build:\ngit clone git@github.com:slok/sloth.git \u0026amp;\u0026amp; \\ cd ./sloth \u0026amp;\u0026amp; \\ make build \u0026amp;\u0026amp; \\ ls -la ./bin  Kubernetes     Helm chart Raw Kubernetes manifests without common SLI plugins Raw Kubernetes manifests with common SLI plugins Kustomize  "},{"id":13,"href":"/specs/openslo/","title":"OpenSLO","parent":"SLO API \u0026 Specs","content":"Only CLI, Not Kubernetes compatible\nThis spec can\u0026rsquo;t be used with Kubernetes CRDs, use Kubernetes spec instead.  Sloth supports OpenSLO v1alpha spec, however we need to take into account that it has some restrictions:\n OpenSLO time window restricted to 30 days. Only Objective ratio metrics are supported. Only Prometheus and PromQL query types are supported. Configuration fields not required by Sloth will be ignored.  Regarding Sloth features, OpenSLO spec doesn\u0026rsquo;t support all of the sloth features:\n No Prometheus labels support. No alerting support. No SLI plugins support. No Kubernetes support (at least until official OpenSLO CRDs are released).  Check Examples\nCLI example:\nsloth generate -i ./examples/openslo-getting-started.yml -o /tmp/openslo-getting-started.yml INFO[0000] SLI plugins loaded plugins=0 svc=storage.FileSLIPlugin version=v0.6.0-8-ga8f37a2 INFO[0000] Generating from OpenSLO spec version=v0.6.0-8-ga8f37a2 INFO[0000] Multiwindow-multiburn alerts generated out=/tmp/openslo-getting-started.yml slo=my-service-sloth-slo-my-service-0 svc=generate.prometheus.Service version=v0.6.0-8-ga8f37a2 INFO[0000] SLI recording rules generated out=/tmp/openslo-getting-started.yml rules=8 slo=my-service-sloth-slo-my-service-0 svc=generate.prometheus.Service version=v0.6.0-8-ga8f37a2 INFO[0000] Metadata recording rules generated out=/tmp/openslo-getting-started.yml rules=7 slo=my-service-sloth-slo-my-service-0 svc=generate.prometheus.Service version=v0.6.0-8-ga8f37a2 INFO[0000] SLO alert rules generated out=/tmp/openslo-getting-started.yml rules=0 slo=my-service-sloth-slo-my-service-0 svc=generate.prometheus.Service version=v0.6.0-8-ga8f37a2 INFO[0000] Prometheus rules written format=yaml groups=2 out=/tmp/openslo-getting-started.yml svc=storage.IOWriter version=v0.6.0-8-ga8f37a2  "},{"id":14,"href":"/architecture/","title":"Architecture","parent":"","content":"How does it work    Sloth uses Prometheus rules to generate SLOs. Based on the generated recording and alert rules it creates a reliable and uniform SLO implementation:\n  stateDiagram-v2 direction LR input: 1 Sloth spec sloth: Sloth output: N prometheus rules input -- sloth sloth -- output state sloth { direction LR load: Load SLO Spec metadata: Gen Metadata rules slis: Gen SLI rules alerts: Gen Alert rules save: Out format load -- metadata load -- slis load -- alerts metadata -- save slis -- save alerts -- save }  The Prometheus rules that Sloth generates, fall in 3 categories:\n SLIs: These rules are the base, they use the queries provided by the user to get a value used to show what is the error service level (availability). It creates multiple rules for different time windows, these different results will be used for the alerts. Metadata: These are used as informative metrics, like the remaining error budget, the SLO objective percent\u0026hellip; These are very handy for SLO visualization, e.g Grafana dashboard. Alerts: These are the multiwindow-multiburn alerts that are based on the SLI rules.  Sloth will take the service level spec and for each SLO in the spec will create 3 rule groups with the above categories.\nMetrics    The Sloth generated rules will share the same metric name across SLOs. However the labels are the key to identify the different services, SLO\u0026hellip; This is how we obtain a uniform way of describing all the SLOs across different teams and services.\nTo get all the available metric names created by Sloth, use this query:\ncount({sloth_id!=\u0026quot;\u0026quot;}) by (__name__)  Alerts    Sloth SLO alerts use multiwindow-multiburn method. It will generate 2 types of alerts:\n Critical/page: Pay attention right now. Warning/ticket: Take into account, however is not urgent.  Using 4 different alerts across different time window periods:\n Critical/Page in short time window: Very very high rate of burning budget. Critical/Page in medium time window: High rate rate of burning budget. Warning/Ticket in medium time window: Constant normal rate of burning budget. Warning/Ticket in long time window: Constant low rate of burning budget.  Sloth doesn\u0026rsquo;t trigger/generate the alerts itself, Prometheus will by using Sloth generated alerting rules. Normally something connected with Prometheus (like alertmanager) will trigger these alerts notifications (e.g Slack, Pagerduty\u0026hellip;).\n"},{"id":15,"href":"/dashboards/","title":"Dashboards","parent":"","content":"Sloth comes with Grafana ready dashboards to be imported and used.\nDetailed SLOs    Get it here\nThis dashboards features detailed view of each of the SLOs.\nEvery SLO will show:\n SLI. SLO metadata details (name, objective\u0026hellip;). SLO Burn rate. Remaining error budget for the current month (Since 1st). Remaining error budget for the last 30 days. In case of enabled alerts, show the state of the current alerts. Error budget month burndown chart. Burn rate magnitude.  Apart from this, the dashboards has a general view of the current exceeded SLO list and graph.\nHigh level overview    Get it here\nThis dashboards shows a high level overview of all the SLOs in the system managed by sloth. Normally this dashboards will be used to check correlation between SLO error budget burns.\nThis dashboards comes with:\n Information of SLOs (quantity, average burn rate of all, triggering alerts\u0026hellip;). Graph and tables of the SLOs currently burning budget at high rates. Timeline with all SLOS error budget burns.  "},{"id":16,"href":"/usage/","title":"Usage","parent":"","content":""},{"id":17,"href":"/examples/","title":"Examples","parent":"","content":""},{"id":18,"href":"/sli-plugins/","title":"SLI plugins","parent":"","content":"   Coredns Availability     Coredns Latency     Fake     Kubernetes Apiserver Availability     Kubernetes Apiserver Latency     Kubernetes Kooper Availability     Kubernetes Kooper Latency     Kubernetes Kooper Queuecongestion     Noop     Prometheus Rules Evalavailability     Prometheus Targets Availability     Slok Go HTTP Metrics Availability     Slok Go HTTP Metrics Latency     Traefik V1 Availability     Traefik V1 Latency     "},{"id":19,"href":"/faq/","title":"F.A.Q","parent":"","content":"   Why Sloth SLI? SLO? Error budget? Burn rate? SLO based alerting? What are ticket and page alerts? Can I disable alerts? Grafana dashboard? CLI VS K8s controller? SLI types on manifests Custom SLO time windows?     Why Sloth    Creating Prometheus rules for SLI/SLO framework is hard, error prone and is pure toil.\nSloth abstracts this task, and we also gain:\n Read friendlyness: Easy to read and declare SLI/SLOs. Gitops: Easy to integrate with CI flows like validation, checks\u0026hellip; Reliability and testing: Generated prometheus rules are already known that work, no need the creation of tests. Centralize features and error fixes: An update in Sloth would be applied to all the SLOs managed/generated with it. Standardize the metrics: Same conventions, automatic dashboards\u0026hellip; Rollout future features for free with the same specs: e.g automatic report creation.  SLI?    Service level indicator. Is a way of quantify how your service should be responding to user.\nTL;DR: What is good/bad service for your users. E.g:\n Requests \u0026gt;=500 considered errors. Requests \u0026gt;200ms considered errors. Process executions with exit code \u0026gt;0 considered errors.  Normally is measured using events: good/bad-events / total-events.\nSLO?    Service level objective. A percent that will tell how many SLI errors your service can have in a specific period of time.\nError budget?    An error budget is the ammount of errors (driven by the SLI) you can have in a specific period of time, this is driven by the SLO.\nLets see an example:\n SLI Error: Requests status code \u0026gt;= 500 Period: 30 days SLO: 99.9% Error budget: 0.0999 (100-99.9) Total requests in 30 days: 10000 Available error requests: 9.99 (10000 * 0.0999 / 100)  If we have more than 9.99 request response with \u0026gt;=500 status code, we would be burning more error budget than the available, if we have less errors, we would end without spending all the error budget.\nBurn rate?    The speed you are consuming your error budget. This is key for SLO based alerting (Sloth will create all these alerts), because depending on the speed you are consuming your error budget, it will trigger your alerts.\nSpeed/rate examples:\n 1: You are consuming 100% of the error budget in the expected period (e.g if 30d period, then 30 days). 2: You are consuming 200% of the error budget in the expected period (e.g if 30d period, then 15 days). 60: You are consuming 6000% of the error budget in the expected period (e.g if 30d period, then 12h hour). 1080: You are consuming 108000% of the error budget in the expected period (e.g if 30d period, then 40 minute).  SLO based alerting?    With SLO based alerting you will get better alerting to a regular alerting system, because:\n Alerts on symptoms (SLIs), not causes. Trigger at different levels (warning/ticket and critical/page). Takes into account time and quantity, this is: speed of errors and number of errors on specific time.  The result of these is:\n Correct time to trigger alerts (important == fast, not so important == slow). Reduce alert fatigue. Reduce false positives and negatives.  What are ticket and page alerts?    MWMB type alerting is based on two kinds of alerts, ticket and page:\n page: Are critical alerts that normally are used to wake up, notify on important channels, trigger oncall\u0026hellip; ticket: The warning alerts that normally open tickets, post messages on non-important Slack channels\u0026hellip;  These are triggered in different ways, page alerts are triggered faster but require faster error budget burn rate, on the other side, ticket alerts are triggered slower and require a lower and constant error budget burn rate.\nCan I disable alerts?    Yes, use disable: true on page and ticket.\nGrafana dashboard?    Check grafana-dashboard, this dashboard will load the SLOs automatically.\nCLI VS K8s controller?    If you don\u0026rsquo;t have Kubernetes and you need raw prometheus rules, its easy, the CLI (generate) mode is the only one that supports raw prometheus rules.\nOn the other side if you have Kubernetes (and most likely prometheus-operator). Using sloth.slok.dev/v1/PrometheusServiceLevel CRD will output the same result used as a CLI or used as a Kubernetes controller.\nThe only difference between bot modes is how Sloth application loads the SLOs manifest. On both modes the output will be a Prometheus Operator Rules CRD.\nBoth have pros and cons:\n The CLI in an advanced gitops flow gives you faster feedback loops because of the generation on the CI. Using as a controller the CRD integrates better in helm charts and similar because it removes that generation extra step. Having the SLO as CRs in K8s, improves the discovery as you can always do kubectl get slos --all-namespaces. The CLI doesn\u0026rsquo;t require an app running, Sloth CRDs registered\u0026hellip; the SLO generation process is simpler, so you have less PoFs.  In a few words, theres no right or wrong answer, pick your own flavour based on your use case: teams size, engineers in the company or development flow\u0026hellip;\nSLI types on manifests    prometheus/v1 (regular) and sloth.slok.dev/v1/PrometheusServiceLevel (Kubernetes CRD), support 3 ways of setting SLIs:\n Events: This are based on 2 queries, the one that returns the total/valid number of events and the one that returns the bad events. Sloht will make a query dividing them to get the final error ratio (0-1). Raw: This is a single raw prometheus query that when executed will return the error ratio (0-1). Plugins: Check plugins for more information. It reference plugins that will be preloaded and already developed. Sloth will execute them on generation and it will return a raw query. This is the best way to abstract queries from users or having SLOs at scale.  Custom SLO time windows?    Sloth tries simplifying SLO generation and maintainability, thats why uses safe defaults and removes a lot of knobs/settings. By default it will use a common used and well-known 30 day time window for the SLO full time windows.\nHowever, some companies/teams use a 28 day (4 weeks) time windows. Sloth can set the time window to 28 day when it runs using --window-days flag. This way all the generated SLOs will use a 28 day time window instead of 30 day.\n"},{"id":20,"href":"/","title":"","parent":"","content":"Stop using complex specs and processes to create Prometheus based SLOs.\nFast, easy and reliable Prometheus SLO generator.\nGet started   Simple  Lightweight, simple CLI, focused on UX, maintainable SLO specs and a single way of doing things.  Standards  Based on Google\u0026rsquo;s SRE book framework, SLOs and SLO alerting.  Plugins  Abstracts and extends SLIs using plugins. Removing the need to copy-paste or write complex Prometheus queries.  One way  Standardizes the SLO implementation across companies and teams by creating a single way of doing SLOs.   Adaptive  Accepts multiple YAML SLO spec/manifest types declarations, like OpenSLO or Kubernetes CRDs.  Prometheus  Delegates and relies on Prometheus stable technology for the metrics and alerts.  Kubernetes  Designed to work with the latest shipping standards and technologies like Gitops and Kubernetes.  Dashboards  Plug and play Grafana dashboards to observe all the services SLOs status.   "},{"id":21,"href":"/sli-plugins/coredns-availability/","title":"Coredns Availability","parent":"SLI plugins","content":"CoreDNS availability    Availability plugin for CoreDNS.\nUses the coreDNS dns response metrics and error rcodes to get the correct and invalid availability.\nBy default the plugin will measure as errors the SERVFAIL rcodes, however this can be overwrite with a regex using custom_rcode_regex option.\nOptions     filter: (Optional) A prometheus filter string using concatenated labels (e.g: exported_service=\u0026quot;alertmanager-api\u0026quot;,service=\u0026quot;alertgram\u0026quot;) custom_rcode_regex: (Optional) Custom regex to match error rcodes (e.g: (NXDOMAIN|SERVFAIL|FORMERR)). More codes here. If not set it will be used SERVFAIL by default.  Metric requirements     coredns_dns_responses_total: From coreDNS.  Usage examples    Without filter nor custom rcode regex    sli: plugin: id: \u0026quot;sloth-common/coredns/availability\u0026quot;  Default rcode and custom filter    sli: plugin: id: \u0026quot;sloth-common/coredns/availability\u0026quot; options: filter: job=\u0026quot;kube-dns\u0026quot;,server=\u0026quot;dns://:53\u0026quot;,service=\u0026quot;kube-dns\u0026quot;, zone=\u0026quot;.\u0026quot;  Custom rcode without filters    sli: plugin: id: \u0026quot;sloth-common/coredns/availability\u0026quot; options: custom_rcode_regex: (NXDOMAIN|SERVFAIL|FORMERR)  Custom rcode with filters    sli: plugin: id: \u0026quot;sloth-common/coredns/availability\u0026quot; options: filter: job=\u0026quot;kube-dns\u0026quot;,server=\u0026quot;dns://:53\u0026quot;,service=\u0026quot;kube-dns\u0026quot;, zone=\u0026quot;.\u0026quot; custom_rcode_regex: (NXDOMAIN|SERVFAIL|FORMERR)  "},{"id":22,"href":"/sli-plugins/coredns-latency/","title":"Coredns Latency","parent":"SLI plugins","content":"CoreDNS latency    Request/response latency plugin for CoreDNS.\nOptions     bucket: (Required) The max latency allowed histogram bucket. filter: (Optional) A prometheus filter string using concatenated labels (e.g: exported_service=\u0026quot;alertmanager-api\u0026quot;,service=\u0026quot;alertgram\u0026quot;)  Metric requirements     coredns_dns_request_duration_seconds_bucket: From coreDNS. coredns_dns_request_duration_seconds_count: From coreDNS.  Usage examples    Without filter    sli: plugin: id: \u0026quot;sloth-common/coredns/latency\u0026quot; options: bucket: \u0026quot;0.25\u0026quot;  With filter    sli: plugin: id: \u0026quot;sloth-common/coredns/latency\u0026quot; options: bucket: \u0026quot;0.032\u0026quot; filter: job=\u0026quot;kube-dns\u0026quot;,server=\u0026quot;dns://:53\u0026quot;,service=\u0026quot;kube-dns\u0026quot;, zone=\u0026quot;.\u0026quot;  "},{"id":23,"href":"/sli-plugins/fake/","title":"Fake","parent":"SLI plugins","content":"Fake    A plugin that can fake a burning rate based on speed/rate factor options. A good plugin for exploring/learning how SLOs, SLIs, error budget and SLO alerting works.\nYou can get more information on the SRE workbook Alert on burn rate section.\nOptions     burn_rate: (Required) A number that tells the burn rate factor (e.g: 1, 2, 10\u0026hellip;). jitter_percent: (Optional) A percent number that will add/remove jitter on the burned rate.  Metric requirements    Doesn\u0026rsquo;t have any metric requirements.\nUsage examples    0.5x speed 30d window, consumed in 60d    sli: plugin: id: \u0026quot;sloth-common/fake\u0026quot; options: burn_rate: \u0026quot;0.5\u0026quot;  1x speed 30d window, consumed in 30d    sli: plugin: id: \u0026quot;sloth-common/fake\u0026quot; options: burn_rate: \u0026quot;1\u0026quot;  2x speed 30d window, consumed in 15d    sli: plugin: id: \u0026quot;sloth-common/fake\u0026quot; options: burn_rate: \u0026quot;2\u0026quot;  10x speed 30d window, consumed in 3d    sli: plugin: id: \u0026quot;sloth-common/fake\u0026quot; options: burn_rate: \u0026quot;10\u0026quot;  10x speed 30d window, consumed in 43m    sli: plugin: id: \u0026quot;sloth-common/fake\u0026quot; options: burn_rate: \u0026quot;1000\u0026quot;  1x speed 30d window, consumed in 30d using jitter    sli: plugin: id: \u0026quot;sloth-common/fake\u0026quot; options: burn_rate: \u0026quot;1\u0026quot; jitter_percent: \u0026quot;10\u0026quot;  "},{"id":24,"href":"/sli-plugins/kubernetes-apiserver-availability/","title":"Kubernetes Apiserver Availability","parent":"SLI plugins","content":"Kubernetes apiserver availability    Availability plugin for the Kubernetes apiserver.\nUses the API HTTP response status codes to measure the events as good or bad. It counts an error event when HTTP response status code is \u0026gt;=500 or 429.\nIn other words, it counts as good events the \u0026lt;500 and !429 HTTP response status codes.\nOptions     filter: (Optional) A prometheus filter string using concatenated labels (e.g: job=\u0026quot;k8sapiserver\u0026quot;,env=\u0026quot;production\u0026quot;,cluster=\u0026quot;k8s-42\u0026quot;)  Metric requirements     apiserver_request_total.  Usage examples    Without filter    sli: plugin: id: \u0026quot;sloth-common/kubernetes/apiserver/availability\u0026quot;  With custom filter    sli: plugin: id: \u0026quot;sloth-common/kubernetes/apiserver/availability\u0026quot; options: filter: job=\u0026quot;k8sapiserver\u0026quot;,env=\u0026quot;production\u0026quot;,cluster=\u0026quot;k8s-42\u0026quot;  "},{"id":25,"href":"/sli-plugins/kubernetes-apiserver-latency/","title":"Kubernetes Apiserver Latency","parent":"SLI plugins","content":"Kubernetes apiserver latency    Latency plugin for the Kubernetes apiserver.\nUses the API HTTP response histogram to measure the events as good or bad. It counts as error events that don\u0026rsquo;t fall in the provided bucket.\nFor example if the bucket is 0.2, We will measure as an error, the requests that fall in the buckets greater than 0.2, in other words, that took longer than 200ms .\nOptions     bucket: (Required) The max latency allowed hitogram bucket. filter: (Optional) A prometheus filter string using concatenated labels (e.g: job=\u0026quot;k8sapiserver\u0026quot;,env=\u0026quot;production\u0026quot;,cluster=\u0026quot;k8s-42\u0026quot;)  Metric requirements     apiserver_request_duration_seconds_count. apiserver_request_duration_seconds_bucket.  Usage examples    Don\u0026rsquo;t allow requests \u0026gt;50ms    sli: plugin: id: \u0026quot;sloth-common/kubernetes/apiserver/latency\u0026quot; options: bucket: \u0026quot;0.05\u0026quot;  Don\u0026rsquo;t allow requests \u0026gt;200ms    sli: plugin: id: \u0026quot;sloth-common/kubernetes/apiserver/latency\u0026quot; options: bucket: \u0026quot;0.2\u0026quot;  Don\u0026rsquo;t allow requests \u0026gt;1s    sli: plugin: id: \u0026quot;sloth-common/kubernetes/apiserver/latency\u0026quot; options: bucket: \u0026quot;1\u0026quot;  With custom filter    sli: plugin: id: \u0026quot;sloth-common/kubernetes/apiserver/latency\u0026quot; options: bucket: \u0026quot;0.2\u0026quot; filter: job=\u0026quot;k8sapiserver\u0026quot;,env=\u0026quot;production\u0026quot;,cluster=\u0026quot;k8s-42\u0026quot;  "},{"id":26,"href":"/sli-plugins/kubernetes-kooper-availability/","title":"Kubernetes Kooper Availability","parent":"SLI plugins","content":"Kubernetes Kooper availability    Availability plugin for the Kubernetes Kooper controller/operator library.\nKooper library tracks the retries. These retries will be subtracted from the total events, so the number of retries doesn\u0026rsquo;t affect the error ratio.\nKooper retries are processed as a correct metrics.\nOptions     controller: (Required) The controller being measured. filter: (Optional) Prometheus extra label filter.  Metric requirements     kooper_controller_processed_event_duration_seconds_count. kooper_controller_queued_events_total.  Usage examples    Without filter    sli: plugin: id: \u0026quot;sloth-common/kubernetes/kooper/availability\u0026quot; options: controller: \u0026quot;sloth\u0026quot;  With filter    sli: plugin: id: \u0026quot;sloth-common/kubernetes/kooper/availability\u0026quot; options: controller: \u0026quot;sloth\u0026quot; filter: job=\u0026quot;svc1\u0026quot;,env=\u0026quot;prod\u0026quot;  "},{"id":27,"href":"/sli-plugins/kubernetes-kooper-latency/","title":"Kubernetes Kooper Latency","parent":"SLI plugins","content":"Kubernetes Kooper latency    Latency plugin for the Kubernetes Kooper controller/operator library.\nThis SLI will measure the latency of handling events/k8s objects on the Kooper controller handlers.\nOptions     controller: (Required) The controller being measured. bucket: (Required) The max latency allowed histogram bucket. filter: (Optional) Prometheus extra label filter.  Metric requirements     kooper_controller_processed_event_duration_seconds_bucket. kooper_controller_processed_event_duration_seconds_count.  Usage examples    Without filter    sli: plugin: id: \u0026quot;sloth-common/kubernetes/kooper/latency\u0026quot; options: controller: \u0026quot;sloth\u0026quot; bucket: \u0026quot;0.25\u0026quot;  With filter    sli: plugin: id: \u0026quot;sloth-common/kubernetes/kooper/latency\u0026quot; options: controller: \u0026quot;sloth\u0026quot; bucket: \u0026quot;0.25\u0026quot; filter: job=\u0026quot;svc1\u0026quot;,env=\u0026quot;prod\u0026quot;  "},{"id":28,"href":"/sli-plugins/kubernetes-kooper-queuecongestion/","title":"Kubernetes Kooper Queuecongestion","parent":"SLI plugins","content":"Kubernetes Kooper Queue congestion    Queue congestion plugin for the Kubernetes Kooper controller/operator library.\nThis SLI will measure if there is a congestion on the event queue based on the duration an event is hold in the queue before being processed.\nOptions     controller: (Required) The controller being measured. bucket: (Required) The max latency allowed hitogram bucket. filter: (Optional) Prometheus extra label filter.  Metric requirements     kooper_controller_event_in_queue_duration_seconds_count. kooper_controller_event_in_queue_duration_seconds_bucket.  Usage examples    Without filter    sli: plugin: id: \u0026quot;sloth-common/kubernetes/kooper/queue-congestion\u0026quot; options: controller: \u0026quot;sloth\u0026quot; bucket: \u0026quot;0.25\u0026quot;  With filter    sli: plugin: id: \u0026quot;sloth-common/kubernetes/kooper/queue-congestion\u0026quot; options: controller: \u0026quot;sloth\u0026quot; bucket: \u0026quot;0.25\u0026quot; filter: job=\u0026quot;svc1\u0026quot;,env=\u0026quot;prod\u0026quot;  "},{"id":29,"href":"/sli-plugins/noop/","title":"Noop","parent":"SLI plugins","content":"Noop    A plugin that always returns a queyr that will return 0. the aim of this plugin is to use as a placeholder and example to create other plugins.\nOptions    Doesn\u0026rsquo;t have any options.\nMetric requirements    Doesn\u0026rsquo;t have any metric requirements.\nUsage examples    #... sli: plugin: id: \u0026quot;sloth-common/noop\u0026quot;  "},{"id":30,"href":"/sli-plugins/prometheus-rules-evalavailability/","title":"Prometheus Rules Evalavailability","parent":"SLI plugins","content":"Prometheus rules evaluation availability    Availability plugin for the Prometheus rules evaluation.\nOptions     filter: (Optional) Prometheus extra label filter.  Metric requirements     prometheus_rule_evaluation_failures_total. prometheus_rule_evaluations_total  Usage examples    Without filter    sli: plugin: id: \u0026quot;sloth-common/prometheus/rules/eval-availability\u0026quot;  With filter    sli: plugin: id: \u0026quot;sloth-common/prometheus/rules/eval-availability\u0026quot; options: filter: job=\u0026quot;svc1\u0026quot;,env=\u0026quot;prod\u0026quot;  "},{"id":31,"href":"/sli-plugins/prometheus-targets-availability/","title":"Prometheus Targets Availability","parent":"SLI plugins","content":"Prometheus Target availability    Availability plugin for the Prometheus targets.\nA target will be counted as an error when is not up to be scraped by Prometheus.\nOptions     filter: (Optional) Prometheus extra label filter.  Metric requirements     up.  Usage examples    Without filter    sli: plugin: id: \u0026quot;sloth-common/prometheus/targets/availability\u0026quot;  With filter    sli: plugin: id: \u0026quot;sloth-common/prometheus/targets/availability\u0026quot; options: filter: job=\u0026quot;svc1\u0026quot;,env=\u0026quot;prod\u0026quot;  "},{"id":32,"href":"/sli-plugins/slok-go-http-metrics-availability/","title":"Slok Go HTTP Metrics Availability","parent":"SLI plugins","content":"slok/go-http-metrics availability    Availability plugin for slok/go-http-metrics.\nUses the API HTTP response status codes to measure the events as good or bad. It counts an error event when HTTP response status code is \u0026gt;=500 or 429.\nIn other words, it counts as good events the \u0026lt;500 and !429 HTTP response status codes.\nOptions     filter: (Required) A prometheus filter string using concatenated labels (e.g: exported_service=\u0026quot;alertmanager-api\u0026quot;,service=\u0026quot;alertgram\u0026quot;)  Metric requirements     http_request_duration_seconds_count: From slok/go-http-metrics.  Usage examples    sli: plugin: id: \u0026quot;sloth-common/slok-go-http-metrics/availability\u0026quot; options: filter: exported_service=\u0026quot;alertmanager-api\u0026quot;,service=\u0026quot;alertgram\u0026quot;  "},{"id":33,"href":"/sli-plugins/slok-go-http-metrics-latency/","title":"Slok Go HTTP Metrics Latency","parent":"SLI plugins","content":"slok/go-http-metrics latency    Latency plugin for slok/go-http-metrics.\nUses the HTTP response histogram to measure the events as good or bad. It counts as error events that don\u0026rsquo;t fall in the provided bucket.\nFor example if the bucket is 0.25, We will measure as an error, the requests that fall in the buckets greater than 0.25, in other words, that took longer than 250ms .\nOptions     bucket: (Required) The max latency allowed histogram bucket. filter: (Required) A prometheus filter string using concatenated labels (e.g: exported_service=\u0026quot;alertmanager-api\u0026quot;,service=\u0026quot;alertgram\u0026quot;) exclude_errors: (Optional) Boolean that will exclude errored requests from valid events when measuring latency requests.  Metric requirements     http_request_duration_seconds_bucket: From slok/go-http-metrics. http_request_duration_seconds_count: From slok/go-http-metrics.  Usage examples    Default    sli: plugin: id: \u0026quot;sloth-common/slok-go-http-metrics/latency\u0026quot; options: filter: exported_service=\u0026quot;alertmanager-api\u0026quot;,service=\u0026quot;alertgram\u0026quot; bucket: \u0026quot;1\u0026quot;  Excluding errors (5xx)    sli: plugin: id: \u0026quot;sloth-common/slok-go-http-metrics/latency\u0026quot; options: filter: exported_service=\u0026quot;alertmanager-api\u0026quot;,service=\u0026quot;alertgram\u0026quot; bucket: \u0026quot;0.25\u0026quot; exclude_errors: \u0026quot;true\u0026quot;  "},{"id":34,"href":"/sli-plugins/traefik-v1-availability/","title":"Traefik V1 Availability","parent":"SLI plugins","content":"Traefik V1 availability    Availability plugin for Traefik V1 backends.\nUses Traefik v1 backend metrics to get the correct and invalid availability on the serving backends.\nOptions     filter: (Optional) A prometheus filter string using concatenated labels backend_regex: (required) Regex to match the traefik backends.  Metric requirements     traefik_backend_requests_total: From traefik.  Usage examples    Without filter    sli: plugin: id: \u0026quot;sloth-common/traefik/v1/availability\u0026quot; options: backend_regex: \u0026quot;^github.com/slok/sloth/?$\u0026quot;  With filters    sli: plugin: id: \u0026quot;sloth-common/coredns/availability\u0026quot; options: backend_regex: \u0026quot;^github.com/slok/sloth/?$\u0026quot; filter: method=\u0026quot;GET\u0026quot;  "},{"id":35,"href":"/sli-plugins/traefik-v1-latency/","title":"Traefik V1 Latency","parent":"SLI plugins","content":"Traefik V1 latency    Latency plugin for Traefik V1 backends.\nUses Traefik v1 backend metrics to get the latency on the serving backends.\nOptions     bucket: (Required) The max latency allowed histogram bucket. backend_regex: (required) Regex to match the traefik backends. filter: (Optional) A prometheus filter string using concatenated labels exclude_errors: (Optional) Boolean that will exclude errored requests from valid events when measuring latency requests.  Metric requirements     traefik_backend_request_duration_seconds_bucket: From traefik. traefik_backend_request_duration_seconds_count: From traefik.  Usage examples    Without filter    sli: plugin: id: \u0026quot;sloth-common/traefik/v1/latency\u0026quot; options: backend_regex: \u0026quot;^github.com/slok/sloth/?$\u0026quot; bucket: \u0026quot;0.3\u0026quot;  With filters    sli: plugin: id: \u0026quot;sloth-common/traefik/v1/latency\u0026quot; options: backend_regex: \u0026quot;^github.com/slok/sloth/?$\u0026quot; bucket: \u0026quot;0.3\u0026quot; filter: method=\u0026quot;GET\u0026quot;  Excluding errors (5xx)    sli: plugin: id: \u0026quot;sloth-common/traefik/v1/latency\u0026quot; options: backend_regex: \u0026quot;^github.com/slok/sloth/?$\u0026quot; bucket: \u0026quot;0.3\u0026quot; filter: method=\u0026quot;GET\u0026quot; exclude_errors: \u0026quot;true\u0026quot;  "},{"id":36,"href":"/examples/default/getting-started/","title":"Getting started","parent":"Default","content":" SLO spec  version:\u0026#34;prometheus/v1\u0026#34;service:\u0026#34;myservice\u0026#34;labels:owner:\u0026#34;myteam\u0026#34;repo:\u0026#34;myorg/myservice\u0026#34;tier:\u0026#34;2\u0026#34;slos:# We allow failing (5xx and 429) 1 request every 1000 requests (99.9%).- name:\u0026#34;requests-availability\u0026#34;objective:99.9description:\u0026#34;Common SLO based on availability for HTTP request responses.\u0026#34;sli:events:error_query:sum(rate(http_request_duration_seconds_count{job=\u0026#34;myservice\u0026#34;,code=~\u0026#34;(5..|429)\u0026#34;}[{{.window}}]))total_query:sum(rate(http_request_duration_seconds_count{job=\u0026#34;myservice\u0026#34;}[{{.window}}]))alerting:name:MyServiceHighErrorRatelabels:category:\u0026#34;availability\u0026#34;annotations:# Overwrite default Sloth SLO alert summmary on ticket and page alerts.summary:\u0026#34;High error rate on \u0026#39;myservice\u0026#39; requests responses\u0026#34;page_alert:labels:severity:pageteamrouting_key:myteamticket_alert:labels:severity:\u0026#34;slack\u0026#34;slack_channel:\u0026#34;#alerts-myteam\u0026#34;  Generated  ---# Code generated by Sloth (dev): https://github.com/slok/sloth.# DO NOT EDIT.groups:- name:sloth-slo-sli-recordings-myservice-requests-availabilityrules:- record:slo:sli_error:ratio_rate5mexpr:|(sum(rate(http_request_duration_seconds_count{job=\u0026#34;myservice\u0026#34;,code=~\u0026#34;(5..|429)\u0026#34;}[5m]))) / (sum(rate(http_request_duration_seconds_count{job=\u0026#34;myservice\u0026#34;}[5m])))labels:cmd:examplesgen.showner:myteamrepo:myorg/myservicesloth_id:myservice-requests-availabilitysloth_service:myservicesloth_slo:requests-availabilitysloth_window:5mtier:\u0026#34;2\u0026#34;- record:slo:sli_error:ratio_rate30mexpr:|(sum(rate(http_request_duration_seconds_count{job=\u0026#34;myservice\u0026#34;,code=~\u0026#34;(5..|429)\u0026#34;}[30m]))) / (sum(rate(http_request_duration_seconds_count{job=\u0026#34;myservice\u0026#34;}[30m])))labels:cmd:examplesgen.showner:myteamrepo:myorg/myservicesloth_id:myservice-requests-availabilitysloth_service:myservicesloth_slo:requests-availabilitysloth_window:30mtier:\u0026#34;2\u0026#34;- record:slo:sli_error:ratio_rate1hexpr:|(sum(rate(http_request_duration_seconds_count{job=\u0026#34;myservice\u0026#34;,code=~\u0026#34;(5..|429)\u0026#34;}[1h]))) / (sum(rate(http_request_duration_seconds_count{job=\u0026#34;myservice\u0026#34;}[1h])))labels:cmd:examplesgen.showner:myteamrepo:myorg/myservicesloth_id:myservice-requests-availabilitysloth_service:myservicesloth_slo:requests-availabilitysloth_window:1htier:\u0026#34;2\u0026#34;- record:slo:sli_error:ratio_rate2hexpr:|(sum(rate(http_request_duration_seconds_count{job=\u0026#34;myservice\u0026#34;,code=~\u0026#34;(5..|429)\u0026#34;}[2h]))) / (sum(rate(http_request_duration_seconds_count{job=\u0026#34;myservice\u0026#34;}[2h])))labels:cmd:examplesgen.showner:myteamrepo:myorg/myservicesloth_id:myservice-requests-availabilitysloth_service:myservicesloth_slo:requests-availabilitysloth_window:2htier:\u0026#34;2\u0026#34;- record:slo:sli_error:ratio_rate6hexpr:|(sum(rate(http_request_duration_seconds_count{job=\u0026#34;myservice\u0026#34;,code=~\u0026#34;(5..|429)\u0026#34;}[6h]))) / (sum(rate(http_request_duration_seconds_count{job=\u0026#34;myservice\u0026#34;}[6h])))labels:cmd:examplesgen.showner:myteamrepo:myorg/myservicesloth_id:myservice-requests-availabilitysloth_service:myservicesloth_slo:requests-availabilitysloth_window:6htier:\u0026#34;2\u0026#34;- record:slo:sli_error:ratio_rate1dexpr:|(sum(rate(http_request_duration_seconds_count{job=\u0026#34;myservice\u0026#34;,code=~\u0026#34;(5..|429)\u0026#34;}[1d]))) / (sum(rate(http_request_duration_seconds_count{job=\u0026#34;myservice\u0026#34;}[1d])))labels:cmd:examplesgen.showner:myteamrepo:myorg/myservicesloth_id:myservice-requests-availabilitysloth_service:myservicesloth_slo:requests-availabilitysloth_window:1dtier:\u0026#34;2\u0026#34;- record:slo:sli_error:ratio_rate3dexpr:|(sum(rate(http_request_duration_seconds_count{job=\u0026#34;myservice\u0026#34;,code=~\u0026#34;(5..|429)\u0026#34;}[3d]))) / (sum(rate(http_request_duration_seconds_count{job=\u0026#34;myservice\u0026#34;}[3d])))labels:cmd:examplesgen.showner:myteamrepo:myorg/myservicesloth_id:myservice-requests-availabilitysloth_service:myservicesloth_slo:requests-availabilitysloth_window:3dtier:\u0026#34;2\u0026#34;- record:slo:sli_error:ratio_rate30dexpr:|sum_over_time(slo:sli_error:ratio_rate5m{sloth_id=\u0026#34;myservice-requests-availability\u0026#34;, sloth_service=\u0026#34;myservice\u0026#34;, sloth_slo=\u0026#34;requests-availability\u0026#34;}[30d]) / ignoring (sloth_window) count_over_time(slo:sli_error:ratio_rate5m{sloth_id=\u0026#34;myservice-requests-availability\u0026#34;, sloth_service=\u0026#34;myservice\u0026#34;, sloth_slo=\u0026#34;requests-availability\u0026#34;}[30d])labels:sloth_window:30d- name:sloth-slo-meta-recordings-myservice-requests-availabilityrules:- record:slo:objective:ratioexpr:vector(0.9990000000000001)labels:cmd:examplesgen.showner:myteamrepo:myorg/myservicesloth_id:myservice-requests-availabilitysloth_service:myservicesloth_slo:requests-availabilitytier:\u0026#34;2\u0026#34;- record:slo:error_budget:ratioexpr:vector(1-0.9990000000000001)labels:cmd:examplesgen.showner:myteamrepo:myorg/myservicesloth_id:myservice-requests-availabilitysloth_service:myservicesloth_slo:requests-availabilitytier:\u0026#34;2\u0026#34;- record:slo:time_period:daysexpr:vector(30)labels:cmd:examplesgen.showner:myteamrepo:myorg/myservicesloth_id:myservice-requests-availabilitysloth_service:myservicesloth_slo:requests-availabilitytier:\u0026#34;2\u0026#34;- record:slo:current_burn_rate:ratioexpr:|slo:sli_error:ratio_rate5m{sloth_id=\u0026#34;myservice-requests-availability\u0026#34;, sloth_service=\u0026#34;myservice\u0026#34;, sloth_slo=\u0026#34;requests-availability\u0026#34;} / on(sloth_id, sloth_slo, sloth_service) group_left slo:error_budget:ratio{sloth_id=\u0026#34;myservice-requests-availability\u0026#34;, sloth_service=\u0026#34;myservice\u0026#34;, sloth_slo=\u0026#34;requests-availability\u0026#34;}labels:cmd:examplesgen.showner:myteamrepo:myorg/myservicesloth_id:myservice-requests-availabilitysloth_service:myservicesloth_slo:requests-availabilitytier:\u0026#34;2\u0026#34;- record:slo:period_burn_rate:ratioexpr:|slo:sli_error:ratio_rate30d{sloth_id=\u0026#34;myservice-requests-availability\u0026#34;, sloth_service=\u0026#34;myservice\u0026#34;, sloth_slo=\u0026#34;requests-availability\u0026#34;} / on(sloth_id, sloth_slo, sloth_service) group_left slo:error_budget:ratio{sloth_id=\u0026#34;myservice-requests-availability\u0026#34;, sloth_service=\u0026#34;myservice\u0026#34;, sloth_slo=\u0026#34;requests-availability\u0026#34;}labels:cmd:examplesgen.showner:myteamrepo:myorg/myservicesloth_id:myservice-requests-availabilitysloth_service:myservicesloth_slo:requests-availabilitytier:\u0026#34;2\u0026#34;- record:slo:period_error_budget_remaining:ratioexpr:1- slo:period_burn_rate:ratio{sloth_id=\u0026#34;myservice-requests-availability\u0026#34;,sloth_service=\u0026#34;myservice\u0026#34;, sloth_slo=\u0026#34;requests-availability\u0026#34;}labels:cmd:examplesgen.showner:myteamrepo:myorg/myservicesloth_id:myservice-requests-availabilitysloth_service:myservicesloth_slo:requests-availabilitytier:\u0026#34;2\u0026#34;- record:sloth_slo_infoexpr:vector(1)labels:cmd:examplesgen.showner:myteamrepo:myorg/myservicesloth_id:myservice-requests-availabilitysloth_mode:cli-gen-promsloth_objective:\u0026#34;99.9\u0026#34;sloth_service:myservicesloth_slo:requests-availabilitysloth_spec:prometheus/v1sloth_version:devtier:\u0026#34;2\u0026#34;- name:sloth-slo-alerts-myservice-requests-availabilityrules:- alert:MyServiceHighErrorRateexpr:|( (slo:sli_error:ratio_rate5m{sloth_id=\u0026#34;myservice-requests-availability\u0026#34;, sloth_service=\u0026#34;myservice\u0026#34;, sloth_slo=\u0026#34;requests-availability\u0026#34;} \u0026gt; (14.4 * 0.0009999999999999432)) and ignoring (sloth_window) (slo:sli_error:ratio_rate1h{sloth_id=\u0026#34;myservice-requests-availability\u0026#34;, sloth_service=\u0026#34;myservice\u0026#34;, sloth_slo=\u0026#34;requests-availability\u0026#34;} \u0026gt; (14.4 * 0.0009999999999999432)) ) or ignoring (sloth_window) ( (slo:sli_error:ratio_rate30m{sloth_id=\u0026#34;myservice-requests-availability\u0026#34;, sloth_service=\u0026#34;myservice\u0026#34;, sloth_slo=\u0026#34;requests-availability\u0026#34;} \u0026gt; (6 * 0.0009999999999999432)) and ignoring (sloth_window) (slo:sli_error:ratio_rate6h{sloth_id=\u0026#34;myservice-requests-availability\u0026#34;, sloth_service=\u0026#34;myservice\u0026#34;, sloth_slo=\u0026#34;requests-availability\u0026#34;} \u0026gt; (6 * 0.0009999999999999432)) )labels:category:availabilityrouting_key:myteamseverity:pageteamsloth_severity:pageannotations:summary:High error rate on \u0026#39;myservice\u0026#39; requests responsestitle:(page) {{$labels.sloth_service}} {{$labels.sloth_slo}} SLO error budgetburn rate is too fast.- alert:MyServiceHighErrorRateexpr:|( (slo:sli_error:ratio_rate2h{sloth_id=\u0026#34;myservice-requests-availability\u0026#34;, sloth_service=\u0026#34;myservice\u0026#34;, sloth_slo=\u0026#34;requests-availability\u0026#34;} \u0026gt; (3 * 0.0009999999999999432)) and ignoring (sloth_window) (slo:sli_error:ratio_rate1d{sloth_id=\u0026#34;myservice-requests-availability\u0026#34;, sloth_service=\u0026#34;myservice\u0026#34;, sloth_slo=\u0026#34;requests-availability\u0026#34;} \u0026gt; (3 * 0.0009999999999999432)) ) or ignoring (sloth_window) ( (slo:sli_error:ratio_rate6h{sloth_id=\u0026#34;myservice-requests-availability\u0026#34;, sloth_service=\u0026#34;myservice\u0026#34;, sloth_slo=\u0026#34;requests-availability\u0026#34;} \u0026gt; (1 * 0.0009999999999999432)) and ignoring (sloth_window) (slo:sli_error:ratio_rate3d{sloth_id=\u0026#34;myservice-requests-availability\u0026#34;, sloth_service=\u0026#34;myservice\u0026#34;, sloth_slo=\u0026#34;requests-availability\u0026#34;} \u0026gt; (1 * 0.0009999999999999432)) )labels:category:availabilityseverity:slackslack_channel:\u0026#39;#alerts-myteam\u0026#39;sloth_severity:ticketannotations:summary:High error rate on \u0026#39;myservice\u0026#39; requests responsestitle:(ticket) {{$labels.sloth_service}} {{$labels.sloth_slo}} SLO error budgetburn rate is too fast.   "},{"id":37,"href":"/examples/kubernetes/getting-started/","title":"Getting started","parent":"Kubernetes","content":" SLO spec  # This example shows the same example as getting-started.yml but using Sloth Kubernetes CRD.# It will generate the Prometheus rules in a Kubernetes prometheus-operator PrometheusRules CRD.## `sloth generate -i ./examples/k8s-getting-started.yml`#apiVersion:sloth.slok.dev/v1kind:PrometheusServiceLevelmetadata:name:sloth-slo-my-servicenamespace:monitoringspec:service:\u0026#34;myservice\u0026#34;labels:owner:\u0026#34;myteam\u0026#34;repo:\u0026#34;myorg/myservice\u0026#34;tier:\u0026#34;2\u0026#34;slos:- name:\u0026#34;requests-availability\u0026#34;objective:99.9description:\u0026#34;Common SLO based on availability for HTTP request responses.\u0026#34;sli:events:errorQuery:sum(rate(http_request_duration_seconds_count{job=\u0026#34;myservice\u0026#34;,code=~\u0026#34;(5..|429)\u0026#34;}[{{.window}}]))totalQuery:sum(rate(http_request_duration_seconds_count{job=\u0026#34;myservice\u0026#34;}[{{.window}}]))alerting:name:MyServiceHighErrorRatelabels:category:\u0026#34;availability\u0026#34;annotations:summary:\u0026#34;High error rate on \u0026#39;myservice\u0026#39; requests responses\u0026#34;pageAlert:labels:severity:pageteamrouting_key:myteamticketAlert:labels:severity:\u0026#34;slack\u0026#34;slack_channel:\u0026#34;#alerts-myteam\u0026#34;  Generated  ---# Code generated by Sloth (dev): https://github.com/slok/sloth.# DO NOT EDIT.apiVersion:monitoring.coreos.com/v1kind:PrometheusRulemetadata:creationTimestamp:nulllabels:app.kubernetes.io/component:SLOapp.kubernetes.io/managed-by:slothname:sloth-slo-my-servicenamespace:monitoringspec:groups:- name:sloth-slo-sli-recordings-myservice-requests-availabilityrules:- expr:|(sum(rate(http_request_duration_seconds_count{job=\u0026#34;myservice\u0026#34;,code=~\u0026#34;(5..|429)\u0026#34;}[5m]))) / (sum(rate(http_request_duration_seconds_count{job=\u0026#34;myservice\u0026#34;}[5m])))labels:cmd:examplesgen.showner:myteamrepo:myorg/myservicesloth_id:myservice-requests-availabilitysloth_service:myservicesloth_slo:requests-availabilitysloth_window:5mtier:\u0026#34;2\u0026#34;record:slo:sli_error:ratio_rate5m- expr:|(sum(rate(http_request_duration_seconds_count{job=\u0026#34;myservice\u0026#34;,code=~\u0026#34;(5..|429)\u0026#34;}[30m]))) / (sum(rate(http_request_duration_seconds_count{job=\u0026#34;myservice\u0026#34;}[30m])))labels:cmd:examplesgen.showner:myteamrepo:myorg/myservicesloth_id:myservice-requests-availabilitysloth_service:myservicesloth_slo:requests-availabilitysloth_window:30mtier:\u0026#34;2\u0026#34;record:slo:sli_error:ratio_rate30m- expr:|(sum(rate(http_request_duration_seconds_count{job=\u0026#34;myservice\u0026#34;,code=~\u0026#34;(5..|429)\u0026#34;}[1h]))) / (sum(rate(http_request_duration_seconds_count{job=\u0026#34;myservice\u0026#34;}[1h])))labels:cmd:examplesgen.showner:myteamrepo:myorg/myservicesloth_id:myservice-requests-availabilitysloth_service:myservicesloth_slo:requests-availabilitysloth_window:1htier:\u0026#34;2\u0026#34;record:slo:sli_error:ratio_rate1h- expr:|(sum(rate(http_request_duration_seconds_count{job=\u0026#34;myservice\u0026#34;,code=~\u0026#34;(5..|429)\u0026#34;}[2h]))) / (sum(rate(http_request_duration_seconds_count{job=\u0026#34;myservice\u0026#34;}[2h])))labels:cmd:examplesgen.showner:myteamrepo:myorg/myservicesloth_id:myservice-requests-availabilitysloth_service:myservicesloth_slo:requests-availabilitysloth_window:2htier:\u0026#34;2\u0026#34;record:slo:sli_error:ratio_rate2h- expr:|(sum(rate(http_request_duration_seconds_count{job=\u0026#34;myservice\u0026#34;,code=~\u0026#34;(5..|429)\u0026#34;}[6h]))) / (sum(rate(http_request_duration_seconds_count{job=\u0026#34;myservice\u0026#34;}[6h])))labels:cmd:examplesgen.showner:myteamrepo:myorg/myservicesloth_id:myservice-requests-availabilitysloth_service:myservicesloth_slo:requests-availabilitysloth_window:6htier:\u0026#34;2\u0026#34;record:slo:sli_error:ratio_rate6h- expr:|(sum(rate(http_request_duration_seconds_count{job=\u0026#34;myservice\u0026#34;,code=~\u0026#34;(5..|429)\u0026#34;}[1d]))) / (sum(rate(http_request_duration_seconds_count{job=\u0026#34;myservice\u0026#34;}[1d])))labels:cmd:examplesgen.showner:myteamrepo:myorg/myservicesloth_id:myservice-requests-availabilitysloth_service:myservicesloth_slo:requests-availabilitysloth_window:1dtier:\u0026#34;2\u0026#34;record:slo:sli_error:ratio_rate1d- expr:|(sum(rate(http_request_duration_seconds_count{job=\u0026#34;myservice\u0026#34;,code=~\u0026#34;(5..|429)\u0026#34;}[3d]))) / (sum(rate(http_request_duration_seconds_count{job=\u0026#34;myservice\u0026#34;}[3d])))labels:cmd:examplesgen.showner:myteamrepo:myorg/myservicesloth_id:myservice-requests-availabilitysloth_service:myservicesloth_slo:requests-availabilitysloth_window:3dtier:\u0026#34;2\u0026#34;record:slo:sli_error:ratio_rate3d- expr:|sum_over_time(slo:sli_error:ratio_rate5m{sloth_id=\u0026#34;myservice-requests-availability\u0026#34;, sloth_service=\u0026#34;myservice\u0026#34;, sloth_slo=\u0026#34;requests-availability\u0026#34;}[30d]) / ignoring (sloth_window) count_over_time(slo:sli_error:ratio_rate5m{sloth_id=\u0026#34;myservice-requests-availability\u0026#34;, sloth_service=\u0026#34;myservice\u0026#34;, sloth_slo=\u0026#34;requests-availability\u0026#34;}[30d])labels:sloth_window:30drecord:slo:sli_error:ratio_rate30d- name:sloth-slo-meta-recordings-myservice-requests-availabilityrules:- expr:vector(0.9990000000000001)labels:cmd:examplesgen.showner:myteamrepo:myorg/myservicesloth_id:myservice-requests-availabilitysloth_service:myservicesloth_slo:requests-availabilitytier:\u0026#34;2\u0026#34;record:slo:objective:ratio- expr:vector(1-0.9990000000000001)labels:cmd:examplesgen.showner:myteamrepo:myorg/myservicesloth_id:myservice-requests-availabilitysloth_service:myservicesloth_slo:requests-availabilitytier:\u0026#34;2\u0026#34;record:slo:error_budget:ratio- expr:vector(30)labels:cmd:examplesgen.showner:myteamrepo:myorg/myservicesloth_id:myservice-requests-availabilitysloth_service:myservicesloth_slo:requests-availabilitytier:\u0026#34;2\u0026#34;record:slo:time_period:days- expr:|slo:sli_error:ratio_rate5m{sloth_id=\u0026#34;myservice-requests-availability\u0026#34;, sloth_service=\u0026#34;myservice\u0026#34;, sloth_slo=\u0026#34;requests-availability\u0026#34;} / on(sloth_id, sloth_slo, sloth_service) group_left slo:error_budget:ratio{sloth_id=\u0026#34;myservice-requests-availability\u0026#34;, sloth_service=\u0026#34;myservice\u0026#34;, sloth_slo=\u0026#34;requests-availability\u0026#34;}labels:cmd:examplesgen.showner:myteamrepo:myorg/myservicesloth_id:myservice-requests-availabilitysloth_service:myservicesloth_slo:requests-availabilitytier:\u0026#34;2\u0026#34;record:slo:current_burn_rate:ratio- expr:|slo:sli_error:ratio_rate30d{sloth_id=\u0026#34;myservice-requests-availability\u0026#34;, sloth_service=\u0026#34;myservice\u0026#34;, sloth_slo=\u0026#34;requests-availability\u0026#34;} / on(sloth_id, sloth_slo, sloth_service) group_left slo:error_budget:ratio{sloth_id=\u0026#34;myservice-requests-availability\u0026#34;, sloth_service=\u0026#34;myservice\u0026#34;, sloth_slo=\u0026#34;requests-availability\u0026#34;}labels:cmd:examplesgen.showner:myteamrepo:myorg/myservicesloth_id:myservice-requests-availabilitysloth_service:myservicesloth_slo:requests-availabilitytier:\u0026#34;2\u0026#34;record:slo:period_burn_rate:ratio- expr:1- slo:period_burn_rate:ratio{sloth_id=\u0026#34;myservice-requests-availability\u0026#34;,sloth_service=\u0026#34;myservice\u0026#34;, sloth_slo=\u0026#34;requests-availability\u0026#34;}labels:cmd:examplesgen.showner:myteamrepo:myorg/myservicesloth_id:myservice-requests-availabilitysloth_service:myservicesloth_slo:requests-availabilitytier:\u0026#34;2\u0026#34;record:slo:period_error_budget_remaining:ratio- expr:vector(1)labels:cmd:examplesgen.showner:myteamrepo:myorg/myservicesloth_id:myservice-requests-availabilitysloth_mode:cli-gen-k8ssloth_objective:\u0026#34;99.9\u0026#34;sloth_service:myservicesloth_slo:requests-availabilitysloth_spec:sloth.slok.dev/v1sloth_version:devtier:\u0026#34;2\u0026#34;record:sloth_slo_info- name:sloth-slo-alerts-myservice-requests-availabilityrules:- alert:MyServiceHighErrorRateannotations:summary:High error rate on \u0026#39;myservice\u0026#39; requests responsestitle:(page) {{$labels.sloth_service}} {{$labels.sloth_slo}} SLO error budgetburn rate is too fast.expr:|( (slo:sli_error:ratio_rate5m{sloth_id=\u0026#34;myservice-requests-availability\u0026#34;, sloth_service=\u0026#34;myservice\u0026#34;, sloth_slo=\u0026#34;requests-availability\u0026#34;} \u0026gt; (14.4 * 0.0009999999999999432)) and ignoring (sloth_window) (slo:sli_error:ratio_rate1h{sloth_id=\u0026#34;myservice-requests-availability\u0026#34;, sloth_service=\u0026#34;myservice\u0026#34;, sloth_slo=\u0026#34;requests-availability\u0026#34;} \u0026gt; (14.4 * 0.0009999999999999432)) ) or ignoring (sloth_window) ( (slo:sli_error:ratio_rate30m{sloth_id=\u0026#34;myservice-requests-availability\u0026#34;, sloth_service=\u0026#34;myservice\u0026#34;, sloth_slo=\u0026#34;requests-availability\u0026#34;} \u0026gt; (6 * 0.0009999999999999432)) and ignoring (sloth_window) (slo:sli_error:ratio_rate6h{sloth_id=\u0026#34;myservice-requests-availability\u0026#34;, sloth_service=\u0026#34;myservice\u0026#34;, sloth_slo=\u0026#34;requests-availability\u0026#34;} \u0026gt; (6 * 0.0009999999999999432)) )labels:category:availabilityrouting_key:myteamseverity:pageteamsloth_severity:page- alert:MyServiceHighErrorRateannotations:summary:High error rate on \u0026#39;myservice\u0026#39; requests responsestitle:(ticket) {{$labels.sloth_service}} {{$labels.sloth_slo}} SLO errorbudget burn rate is too fast.expr:|( (slo:sli_error:ratio_rate2h{sloth_id=\u0026#34;myservice-requests-availability\u0026#34;, sloth_service=\u0026#34;myservice\u0026#34;, sloth_slo=\u0026#34;requests-availability\u0026#34;} \u0026gt; (3 * 0.0009999999999999432)) and ignoring (sloth_window) (slo:sli_error:ratio_rate1d{sloth_id=\u0026#34;myservice-requests-availability\u0026#34;, sloth_service=\u0026#34;myservice\u0026#34;, sloth_slo=\u0026#34;requests-availability\u0026#34;} \u0026gt; (3 * 0.0009999999999999432)) ) or ignoring (sloth_window) ( (slo:sli_error:ratio_rate6h{sloth_id=\u0026#34;myservice-requests-availability\u0026#34;, sloth_service=\u0026#34;myservice\u0026#34;, sloth_slo=\u0026#34;requests-availability\u0026#34;} \u0026gt; (1 * 0.0009999999999999432)) and ignoring (sloth_window) (slo:sli_error:ratio_rate3d{sloth_id=\u0026#34;myservice-requests-availability\u0026#34;, sloth_service=\u0026#34;myservice\u0026#34;, sloth_slo=\u0026#34;requests-availability\u0026#34;} \u0026gt; (1 * 0.0009999999999999432)) )labels:category:availabilityseverity:slackslack_channel:\u0026#39;#alerts-myteam\u0026#39;sloth_severity:ticket   "},{"id":38,"href":"/examples/openslo/getting-started/","title":"Getting started","parent":"OpenSLO","content":" SLO spec  # This example shows the same example as getting-started.yml but using OpenSLO spec.# It will generate the Prometheus rules in a Prometheus rules format.## `sloth generate -i ./examples/openslo-getting-started.yml`#apiVersion:openslo/v1alphakind:SLOmetadata:name:sloth-slo-my-servicedisplayName:Requests Availabilityspec:service:my-servicedescription:\u0026#34;Common SLO based on availability for HTTP request responses.\u0026#34;budgetingMethod:Occurrencesobjectives:- ratioMetrics:good:source:prometheusqueryType:promqlquery:sum(rate(http_request_duration_seconds_count{job=\u0026#34;myservice\u0026#34;,code!~\u0026#34;(5..|429)\u0026#34;}[{{.window}}]))total:source:prometheusqueryType:promqlquery:sum(rate(http_request_duration_seconds_count{job=\u0026#34;myservice\u0026#34;}[{{.window}}]))target:0.999timeWindows:- count:30unit:Day  Generated  ---# Code generated by Sloth (dev): https://github.com/slok/sloth.# DO NOT EDIT.groups:- name:sloth-slo-sli-recordings-my-service-sloth-slo-my-service-0rules:- record:slo:sli_error:ratio_rate5mexpr:|-( 1 - ( ( sum(rate(http_request_duration_seconds_count{job=\u0026#34;myservice\u0026#34;,code!~\u0026#34;(5..|429)\u0026#34;}[5m])) ) / ( sum(rate(http_request_duration_seconds_count{job=\u0026#34;myservice\u0026#34;}[5m])) ) ) )labels:cmd:examplesgen.shsloth_id:my-service-sloth-slo-my-service-0sloth_service:my-servicesloth_slo:sloth-slo-my-service-0sloth_window:5m- record:slo:sli_error:ratio_rate30mexpr:|-( 1 - ( ( sum(rate(http_request_duration_seconds_count{job=\u0026#34;myservice\u0026#34;,code!~\u0026#34;(5..|429)\u0026#34;}[30m])) ) / ( sum(rate(http_request_duration_seconds_count{job=\u0026#34;myservice\u0026#34;}[30m])) ) ) )labels:cmd:examplesgen.shsloth_id:my-service-sloth-slo-my-service-0sloth_service:my-servicesloth_slo:sloth-slo-my-service-0sloth_window:30m- record:slo:sli_error:ratio_rate1hexpr:|-( 1 - ( ( sum(rate(http_request_duration_seconds_count{job=\u0026#34;myservice\u0026#34;,code!~\u0026#34;(5..|429)\u0026#34;}[1h])) ) / ( sum(rate(http_request_duration_seconds_count{job=\u0026#34;myservice\u0026#34;}[1h])) ) ) )labels:cmd:examplesgen.shsloth_id:my-service-sloth-slo-my-service-0sloth_service:my-servicesloth_slo:sloth-slo-my-service-0sloth_window:1h- record:slo:sli_error:ratio_rate2hexpr:|-( 1 - ( ( sum(rate(http_request_duration_seconds_count{job=\u0026#34;myservice\u0026#34;,code!~\u0026#34;(5..|429)\u0026#34;}[2h])) ) / ( sum(rate(http_request_duration_seconds_count{job=\u0026#34;myservice\u0026#34;}[2h])) ) ) )labels:cmd:examplesgen.shsloth_id:my-service-sloth-slo-my-service-0sloth_service:my-servicesloth_slo:sloth-slo-my-service-0sloth_window:2h- record:slo:sli_error:ratio_rate6hexpr:|-( 1 - ( ( sum(rate(http_request_duration_seconds_count{job=\u0026#34;myservice\u0026#34;,code!~\u0026#34;(5..|429)\u0026#34;}[6h])) ) / ( sum(rate(http_request_duration_seconds_count{job=\u0026#34;myservice\u0026#34;}[6h])) ) ) )labels:cmd:examplesgen.shsloth_id:my-service-sloth-slo-my-service-0sloth_service:my-servicesloth_slo:sloth-slo-my-service-0sloth_window:6h- record:slo:sli_error:ratio_rate1dexpr:|-( 1 - ( ( sum(rate(http_request_duration_seconds_count{job=\u0026#34;myservice\u0026#34;,code!~\u0026#34;(5..|429)\u0026#34;}[1d])) ) / ( sum(rate(http_request_duration_seconds_count{job=\u0026#34;myservice\u0026#34;}[1d])) ) ) )labels:cmd:examplesgen.shsloth_id:my-service-sloth-slo-my-service-0sloth_service:my-servicesloth_slo:sloth-slo-my-service-0sloth_window:1d- record:slo:sli_error:ratio_rate3dexpr:|-( 1 - ( ( sum(rate(http_request_duration_seconds_count{job=\u0026#34;myservice\u0026#34;,code!~\u0026#34;(5..|429)\u0026#34;}[3d])) ) / ( sum(rate(http_request_duration_seconds_count{job=\u0026#34;myservice\u0026#34;}[3d])) ) ) )labels:cmd:examplesgen.shsloth_id:my-service-sloth-slo-my-service-0sloth_service:my-servicesloth_slo:sloth-slo-my-service-0sloth_window:3d- record:slo:sli_error:ratio_rate30dexpr:|sum_over_time(slo:sli_error:ratio_rate5m{sloth_id=\u0026#34;my-service-sloth-slo-my-service-0\u0026#34;, sloth_service=\u0026#34;my-service\u0026#34;, sloth_slo=\u0026#34;sloth-slo-my-service-0\u0026#34;}[30d]) / ignoring (sloth_window) count_over_time(slo:sli_error:ratio_rate5m{sloth_id=\u0026#34;my-service-sloth-slo-my-service-0\u0026#34;, sloth_service=\u0026#34;my-service\u0026#34;, sloth_slo=\u0026#34;sloth-slo-my-service-0\u0026#34;}[30d])labels:sloth_window:30d- name:sloth-slo-meta-recordings-my-service-sloth-slo-my-service-0rules:- record:slo:objective:ratioexpr:vector(0.9990000000000001)labels:cmd:examplesgen.shsloth_id:my-service-sloth-slo-my-service-0sloth_service:my-servicesloth_slo:sloth-slo-my-service-0- record:slo:error_budget:ratioexpr:vector(1-0.9990000000000001)labels:cmd:examplesgen.shsloth_id:my-service-sloth-slo-my-service-0sloth_service:my-servicesloth_slo:sloth-slo-my-service-0- record:slo:time_period:daysexpr:vector(30)labels:cmd:examplesgen.shsloth_id:my-service-sloth-slo-my-service-0sloth_service:my-servicesloth_slo:sloth-slo-my-service-0- record:slo:current_burn_rate:ratioexpr:|slo:sli_error:ratio_rate5m{sloth_id=\u0026#34;my-service-sloth-slo-my-service-0\u0026#34;, sloth_service=\u0026#34;my-service\u0026#34;, sloth_slo=\u0026#34;sloth-slo-my-service-0\u0026#34;} / on(sloth_id, sloth_slo, sloth_service) group_left slo:error_budget:ratio{sloth_id=\u0026#34;my-service-sloth-slo-my-service-0\u0026#34;, sloth_service=\u0026#34;my-service\u0026#34;, sloth_slo=\u0026#34;sloth-slo-my-service-0\u0026#34;}labels:cmd:examplesgen.shsloth_id:my-service-sloth-slo-my-service-0sloth_service:my-servicesloth_slo:sloth-slo-my-service-0- record:slo:period_burn_rate:ratioexpr:|slo:sli_error:ratio_rate30d{sloth_id=\u0026#34;my-service-sloth-slo-my-service-0\u0026#34;, sloth_service=\u0026#34;my-service\u0026#34;, sloth_slo=\u0026#34;sloth-slo-my-service-0\u0026#34;} / on(sloth_id, sloth_slo, sloth_service) group_left slo:error_budget:ratio{sloth_id=\u0026#34;my-service-sloth-slo-my-service-0\u0026#34;, sloth_service=\u0026#34;my-service\u0026#34;, sloth_slo=\u0026#34;sloth-slo-my-service-0\u0026#34;}labels:cmd:examplesgen.shsloth_id:my-service-sloth-slo-my-service-0sloth_service:my-servicesloth_slo:sloth-slo-my-service-0- record:slo:period_error_budget_remaining:ratioexpr:1- slo:period_burn_rate:ratio{sloth_id=\u0026#34;my-service-sloth-slo-my-service-0\u0026#34;,sloth_service=\u0026#34;my-service\u0026#34;, sloth_slo=\u0026#34;sloth-slo-my-service-0\u0026#34;}labels:cmd:examplesgen.shsloth_id:my-service-sloth-slo-my-service-0sloth_service:my-servicesloth_slo:sloth-slo-my-service-0- record:sloth_slo_infoexpr:vector(1)labels:cmd:examplesgen.shsloth_id:my-service-sloth-slo-my-service-0sloth_mode:cli-gen-openslosloth_objective:\u0026#34;99.9\u0026#34;sloth_service:my-servicesloth_slo:sloth-slo-my-service-0sloth_spec:openslo/v1alphasloth_version:dev   "},{"id":39,"href":"/examples/default/home-wifi/","title":"Home WiFi","parent":"Default","content":" SLO spec  # This example shows a real service level used in my home to have SLOs on my wifi signal.# The metrics are extracted using unifi-poller (https://github.com/unifi-poller/unifi-poller)# that gets the information from an Ubiquiti Wifi installation.# https://community.ui.com/questions/satisfaction-percentage-in-client-properties-overview/8c940637-63d0-41de-a67b-8166cdd0ed32## The service level has 2 SLOs based on `client_satisfaction_ratio`, this is a ratio calculated# by ubiquiti that is based on wifi drop packages, wifi signal...# We conside an SLI event the client satisfactions that currently exist, lets review the SLOs## - `good-wifi-client-satisfaction`# - This SLO warn us that we don\u0026#39;t have a good wifi at home.# - SLI error: We consider a bad client satisfaction (event) below 75% (0.75)# - SLO objective (95%): We are not so restrictive and we allow that that 5 of every 100 clients be below 75%## - `risk-wifi-client-satisfaction`# - This SLO warn us that we something very bad is happenning with our home wifi.# - SLI error: We consider a bad client satisfaction (event) below 50% (0.5)# - SLO objective(99.9%): We are very restrictive and we allow that that 1 of every 1000 clients be below 50%## `sloth generate -i ./examples/home-wifi.yml`#version:\u0026#34;prometheus/v1\u0026#34;service:\u0026#34;home-wifi\u0026#34;labels:cluster:\u0026#34;valhalla\u0026#34;component:\u0026#34;ubiquiti\u0026#34;context:\u0026#34;home\u0026#34;slos:- name:\u0026#34;good-wifi-client-satisfaction\u0026#34;objective:95description:\u0026#34;Will warn us that we don\u0026#39;t have a good wifi at home.\u0026#34;sli:events:error_query:sum_over_time((count(unifipoller_client_satisfaction_ratio \u0026lt; 0.75))[{{.window}}:]) OR on() vector(0)total_query:sum_over_time((count(unifipoller_client_satisfaction_ratio))[{{.window}}:])alerting:name:GoodWifiClientSatisfactionpage_alert:labels:severity:hometicket_alert:labels:severity:warning- name:\u0026#34;risk-wifi-client-satisfaction\u0026#34;objective:99.9description:\u0026#34;Will warn us that we something very bad is happenning with our home wifi.\u0026#34;sli:events:error_query:sum_over_time((count(unifipoller_client_satisfaction_ratio \u0026lt; 0.5))[{{.window}}:]) OR on() vector(0)total_query:sum_over_time((count(unifipoller_client_satisfaction_ratio))[{{.window}}:])alerting:name:RiskWifiClientSatisfactionpage_alert:labels:severity:hometicket_alert:labels:severity:warning  Generated  ---# Code generated by Sloth (dev): https://github.com/slok/sloth.# DO NOT EDIT.groups:- name:sloth-slo-sli-recordings-home-wifi-good-wifi-client-satisfactionrules:- record:slo:sli_error:ratio_rate5mexpr:|(sum_over_time((count(unifipoller_client_satisfaction_ratio \u0026lt; 0.75))[5m:]) OR on() vector(0)) / (sum_over_time((count(unifipoller_client_satisfaction_ratio))[5m:]))labels:cluster:valhallacmd:examplesgen.shcomponent:ubiquiticontext:homesloth_id:home-wifi-good-wifi-client-satisfactionsloth_service:home-wifisloth_slo:good-wifi-client-satisfactionsloth_window:5m- record:slo:sli_error:ratio_rate30mexpr:|(sum_over_time((count(unifipoller_client_satisfaction_ratio \u0026lt; 0.75))[30m:]) OR on() vector(0)) / (sum_over_time((count(unifipoller_client_satisfaction_ratio))[30m:]))labels:cluster:valhallacmd:examplesgen.shcomponent:ubiquiticontext:homesloth_id:home-wifi-good-wifi-client-satisfactionsloth_service:home-wifisloth_slo:good-wifi-client-satisfactionsloth_window:30m- record:slo:sli_error:ratio_rate1hexpr:|(sum_over_time((count(unifipoller_client_satisfaction_ratio \u0026lt; 0.75))[1h:]) OR on() vector(0)) / (sum_over_time((count(unifipoller_client_satisfaction_ratio))[1h:]))labels:cluster:valhallacmd:examplesgen.shcomponent:ubiquiticontext:homesloth_id:home-wifi-good-wifi-client-satisfactionsloth_service:home-wifisloth_slo:good-wifi-client-satisfactionsloth_window:1h- record:slo:sli_error:ratio_rate2hexpr:|(sum_over_time((count(unifipoller_client_satisfaction_ratio \u0026lt; 0.75))[2h:]) OR on() vector(0)) / (sum_over_time((count(unifipoller_client_satisfaction_ratio))[2h:]))labels:cluster:valhallacmd:examplesgen.shcomponent:ubiquiticontext:homesloth_id:home-wifi-good-wifi-client-satisfactionsloth_service:home-wifisloth_slo:good-wifi-client-satisfactionsloth_window:2h- record:slo:sli_error:ratio_rate6hexpr:|(sum_over_time((count(unifipoller_client_satisfaction_ratio \u0026lt; 0.75))[6h:]) OR on() vector(0)) / (sum_over_time((count(unifipoller_client_satisfaction_ratio))[6h:]))labels:cluster:valhallacmd:examplesgen.shcomponent:ubiquiticontext:homesloth_id:home-wifi-good-wifi-client-satisfactionsloth_service:home-wifisloth_slo:good-wifi-client-satisfactionsloth_window:6h- record:slo:sli_error:ratio_rate1dexpr:|(sum_over_time((count(unifipoller_client_satisfaction_ratio \u0026lt; 0.75))[1d:]) OR on() vector(0)) / (sum_over_time((count(unifipoller_client_satisfaction_ratio))[1d:]))labels:cluster:valhallacmd:examplesgen.shcomponent:ubiquiticontext:homesloth_id:home-wifi-good-wifi-client-satisfactionsloth_service:home-wifisloth_slo:good-wifi-client-satisfactionsloth_window:1d- record:slo:sli_error:ratio_rate3dexpr:|(sum_over_time((count(unifipoller_client_satisfaction_ratio \u0026lt; 0.75))[3d:]) OR on() vector(0)) / (sum_over_time((count(unifipoller_client_satisfaction_ratio))[3d:]))labels:cluster:valhallacmd:examplesgen.shcomponent:ubiquiticontext:homesloth_id:home-wifi-good-wifi-client-satisfactionsloth_service:home-wifisloth_slo:good-wifi-client-satisfactionsloth_window:3d- record:slo:sli_error:ratio_rate30dexpr:|sum_over_time(slo:sli_error:ratio_rate5m{sloth_id=\u0026#34;home-wifi-good-wifi-client-satisfaction\u0026#34;, sloth_service=\u0026#34;home-wifi\u0026#34;, sloth_slo=\u0026#34;good-wifi-client-satisfaction\u0026#34;}[30d]) / ignoring (sloth_window) count_over_time(slo:sli_error:ratio_rate5m{sloth_id=\u0026#34;home-wifi-good-wifi-client-satisfaction\u0026#34;, sloth_service=\u0026#34;home-wifi\u0026#34;, sloth_slo=\u0026#34;good-wifi-client-satisfaction\u0026#34;}[30d])labels:sloth_window:30d- name:sloth-slo-meta-recordings-home-wifi-good-wifi-client-satisfactionrules:- record:slo:objective:ratioexpr:vector(0.95)labels:cluster:valhallacmd:examplesgen.shcomponent:ubiquiticontext:homesloth_id:home-wifi-good-wifi-client-satisfactionsloth_service:home-wifisloth_slo:good-wifi-client-satisfaction- record:slo:error_budget:ratioexpr:vector(1-0.95)labels:cluster:valhallacmd:examplesgen.shcomponent:ubiquiticontext:homesloth_id:home-wifi-good-wifi-client-satisfactionsloth_service:home-wifisloth_slo:good-wifi-client-satisfaction- record:slo:time_period:daysexpr:vector(30)labels:cluster:valhallacmd:examplesgen.shcomponent:ubiquiticontext:homesloth_id:home-wifi-good-wifi-client-satisfactionsloth_service:home-wifisloth_slo:good-wifi-client-satisfaction- record:slo:current_burn_rate:ratioexpr:|slo:sli_error:ratio_rate5m{sloth_id=\u0026#34;home-wifi-good-wifi-client-satisfaction\u0026#34;, sloth_service=\u0026#34;home-wifi\u0026#34;, sloth_slo=\u0026#34;good-wifi-client-satisfaction\u0026#34;} / on(sloth_id, sloth_slo, sloth_service) group_left slo:error_budget:ratio{sloth_id=\u0026#34;home-wifi-good-wifi-client-satisfaction\u0026#34;, sloth_service=\u0026#34;home-wifi\u0026#34;, sloth_slo=\u0026#34;good-wifi-client-satisfaction\u0026#34;}labels:cluster:valhallacmd:examplesgen.shcomponent:ubiquiticontext:homesloth_id:home-wifi-good-wifi-client-satisfactionsloth_service:home-wifisloth_slo:good-wifi-client-satisfaction- record:slo:period_burn_rate:ratioexpr:|slo:sli_error:ratio_rate30d{sloth_id=\u0026#34;home-wifi-good-wifi-client-satisfaction\u0026#34;, sloth_service=\u0026#34;home-wifi\u0026#34;, sloth_slo=\u0026#34;good-wifi-client-satisfaction\u0026#34;} / on(sloth_id, sloth_slo, sloth_service) group_left slo:error_budget:ratio{sloth_id=\u0026#34;home-wifi-good-wifi-client-satisfaction\u0026#34;, sloth_service=\u0026#34;home-wifi\u0026#34;, sloth_slo=\u0026#34;good-wifi-client-satisfaction\u0026#34;}labels:cluster:valhallacmd:examplesgen.shcomponent:ubiquiticontext:homesloth_id:home-wifi-good-wifi-client-satisfactionsloth_service:home-wifisloth_slo:good-wifi-client-satisfaction- record:slo:period_error_budget_remaining:ratioexpr:1- slo:period_burn_rate:ratio{sloth_id=\u0026#34;home-wifi-good-wifi-client-satisfaction\u0026#34;,sloth_service=\u0026#34;home-wifi\u0026#34;, sloth_slo=\u0026#34;good-wifi-client-satisfaction\u0026#34;}labels:cluster:valhallacmd:examplesgen.shcomponent:ubiquiticontext:homesloth_id:home-wifi-good-wifi-client-satisfactionsloth_service:home-wifisloth_slo:good-wifi-client-satisfaction- record:sloth_slo_infoexpr:vector(1)labels:cluster:valhallacmd:examplesgen.shcomponent:ubiquiticontext:homesloth_id:home-wifi-good-wifi-client-satisfactionsloth_mode:cli-gen-promsloth_objective:\u0026#34;95\u0026#34;sloth_service:home-wifisloth_slo:good-wifi-client-satisfactionsloth_spec:prometheus/v1sloth_version:dev- name:sloth-slo-alerts-home-wifi-good-wifi-client-satisfactionrules:- alert:GoodWifiClientSatisfactionexpr:|( (slo:sli_error:ratio_rate5m{sloth_id=\u0026#34;home-wifi-good-wifi-client-satisfaction\u0026#34;, sloth_service=\u0026#34;home-wifi\u0026#34;, sloth_slo=\u0026#34;good-wifi-client-satisfaction\u0026#34;} \u0026gt; (14.4 * 0.05)) and ignoring (sloth_window) (slo:sli_error:ratio_rate1h{sloth_id=\u0026#34;home-wifi-good-wifi-client-satisfaction\u0026#34;, sloth_service=\u0026#34;home-wifi\u0026#34;, sloth_slo=\u0026#34;good-wifi-client-satisfaction\u0026#34;} \u0026gt; (14.4 * 0.05)) ) or ignoring (sloth_window) ( (slo:sli_error:ratio_rate30m{sloth_id=\u0026#34;home-wifi-good-wifi-client-satisfaction\u0026#34;, sloth_service=\u0026#34;home-wifi\u0026#34;, sloth_slo=\u0026#34;good-wifi-client-satisfaction\u0026#34;} \u0026gt; (6 * 0.05)) and ignoring (sloth_window) (slo:sli_error:ratio_rate6h{sloth_id=\u0026#34;home-wifi-good-wifi-client-satisfaction\u0026#34;, sloth_service=\u0026#34;home-wifi\u0026#34;, sloth_slo=\u0026#34;good-wifi-client-satisfaction\u0026#34;} \u0026gt; (6 * 0.05)) )labels:severity:homesloth_severity:pageannotations:summary:\u0026#39;{{$labels.sloth_service}} {{$labels.sloth_slo}} SLO error budget burn rate is over expected.\u0026#39;title:(page) {{$labels.sloth_service}} {{$labels.sloth_slo}} SLO error budgetburn rate is too fast.- alert:GoodWifiClientSatisfactionexpr:|( (slo:sli_error:ratio_rate2h{sloth_id=\u0026#34;home-wifi-good-wifi-client-satisfaction\u0026#34;, sloth_service=\u0026#34;home-wifi\u0026#34;, sloth_slo=\u0026#34;good-wifi-client-satisfaction\u0026#34;} \u0026gt; (3 * 0.05)) and ignoring (sloth_window) (slo:sli_error:ratio_rate1d{sloth_id=\u0026#34;home-wifi-good-wifi-client-satisfaction\u0026#34;, sloth_service=\u0026#34;home-wifi\u0026#34;, sloth_slo=\u0026#34;good-wifi-client-satisfaction\u0026#34;} \u0026gt; (3 * 0.05)) ) or ignoring (sloth_window) ( (slo:sli_error:ratio_rate6h{sloth_id=\u0026#34;home-wifi-good-wifi-client-satisfaction\u0026#34;, sloth_service=\u0026#34;home-wifi\u0026#34;, sloth_slo=\u0026#34;good-wifi-client-satisfaction\u0026#34;} \u0026gt; (1 * 0.05)) and ignoring (sloth_window) (slo:sli_error:ratio_rate3d{sloth_id=\u0026#34;home-wifi-good-wifi-client-satisfaction\u0026#34;, sloth_service=\u0026#34;home-wifi\u0026#34;, sloth_slo=\u0026#34;good-wifi-client-satisfaction\u0026#34;} \u0026gt; (1 * 0.05)) )labels:severity:warningsloth_severity:ticketannotations:summary:\u0026#39;{{$labels.sloth_service}} {{$labels.sloth_slo}} SLO error budget burn rate is over expected.\u0026#39;title:(ticket) {{$labels.sloth_service}} {{$labels.sloth_slo}} SLO error budgetburn rate is too fast.- name:sloth-slo-sli-recordings-home-wifi-risk-wifi-client-satisfactionrules:- record:slo:sli_error:ratio_rate5mexpr:|(sum_over_time((count(unifipoller_client_satisfaction_ratio \u0026lt; 0.5))[5m:]) OR on() vector(0)) / (sum_over_time((count(unifipoller_client_satisfaction_ratio))[5m:]))labels:cluster:valhallacmd:examplesgen.shcomponent:ubiquiticontext:homesloth_id:home-wifi-risk-wifi-client-satisfactionsloth_service:home-wifisloth_slo:risk-wifi-client-satisfactionsloth_window:5m- record:slo:sli_error:ratio_rate30mexpr:|(sum_over_time((count(unifipoller_client_satisfaction_ratio \u0026lt; 0.5))[30m:]) OR on() vector(0)) / (sum_over_time((count(unifipoller_client_satisfaction_ratio))[30m:]))labels:cluster:valhallacmd:examplesgen.shcomponent:ubiquiticontext:homesloth_id:home-wifi-risk-wifi-client-satisfactionsloth_service:home-wifisloth_slo:risk-wifi-client-satisfactionsloth_window:30m- record:slo:sli_error:ratio_rate1hexpr:|(sum_over_time((count(unifipoller_client_satisfaction_ratio \u0026lt; 0.5))[1h:]) OR on() vector(0)) / (sum_over_time((count(unifipoller_client_satisfaction_ratio))[1h:]))labels:cluster:valhallacmd:examplesgen.shcomponent:ubiquiticontext:homesloth_id:home-wifi-risk-wifi-client-satisfactionsloth_service:home-wifisloth_slo:risk-wifi-client-satisfactionsloth_window:1h- record:slo:sli_error:ratio_rate2hexpr:|(sum_over_time((count(unifipoller_client_satisfaction_ratio \u0026lt; 0.5))[2h:]) OR on() vector(0)) / (sum_over_time((count(unifipoller_client_satisfaction_ratio))[2h:]))labels:cluster:valhallacmd:examplesgen.shcomponent:ubiquiticontext:homesloth_id:home-wifi-risk-wifi-client-satisfactionsloth_service:home-wifisloth_slo:risk-wifi-client-satisfactionsloth_window:2h- record:slo:sli_error:ratio_rate6hexpr:|(sum_over_time((count(unifipoller_client_satisfaction_ratio \u0026lt; 0.5))[6h:]) OR on() vector(0)) / (sum_over_time((count(unifipoller_client_satisfaction_ratio))[6h:]))labels:cluster:valhallacmd:examplesgen.shcomponent:ubiquiticontext:homesloth_id:home-wifi-risk-wifi-client-satisfactionsloth_service:home-wifisloth_slo:risk-wifi-client-satisfactionsloth_window:6h- record:slo:sli_error:ratio_rate1dexpr:|(sum_over_time((count(unifipoller_client_satisfaction_ratio \u0026lt; 0.5))[1d:]) OR on() vector(0)) / (sum_over_time((count(unifipoller_client_satisfaction_ratio))[1d:]))labels:cluster:valhallacmd:examplesgen.shcomponent:ubiquiticontext:homesloth_id:home-wifi-risk-wifi-client-satisfactionsloth_service:home-wifisloth_slo:risk-wifi-client-satisfactionsloth_window:1d- record:slo:sli_error:ratio_rate3dexpr:|(sum_over_time((count(unifipoller_client_satisfaction_ratio \u0026lt; 0.5))[3d:]) OR on() vector(0)) / (sum_over_time((count(unifipoller_client_satisfaction_ratio))[3d:]))labels:cluster:valhallacmd:examplesgen.shcomponent:ubiquiticontext:homesloth_id:home-wifi-risk-wifi-client-satisfactionsloth_service:home-wifisloth_slo:risk-wifi-client-satisfactionsloth_window:3d- record:slo:sli_error:ratio_rate30dexpr:|sum_over_time(slo:sli_error:ratio_rate5m{sloth_id=\u0026#34;home-wifi-risk-wifi-client-satisfaction\u0026#34;, sloth_service=\u0026#34;home-wifi\u0026#34;, sloth_slo=\u0026#34;risk-wifi-client-satisfaction\u0026#34;}[30d]) / ignoring (sloth_window) count_over_time(slo:sli_error:ratio_rate5m{sloth_id=\u0026#34;home-wifi-risk-wifi-client-satisfaction\u0026#34;, sloth_service=\u0026#34;home-wifi\u0026#34;, sloth_slo=\u0026#34;risk-wifi-client-satisfaction\u0026#34;}[30d])labels:sloth_window:30d- name:sloth-slo-meta-recordings-home-wifi-risk-wifi-client-satisfactionrules:- record:slo:objective:ratioexpr:vector(0.9990000000000001)labels:cluster:valhallacmd:examplesgen.shcomponent:ubiquiticontext:homesloth_id:home-wifi-risk-wifi-client-satisfactionsloth_service:home-wifisloth_slo:risk-wifi-client-satisfaction- record:slo:error_budget:ratioexpr:vector(1-0.9990000000000001)labels:cluster:valhallacmd:examplesgen.shcomponent:ubiquiticontext:homesloth_id:home-wifi-risk-wifi-client-satisfactionsloth_service:home-wifisloth_slo:risk-wifi-client-satisfaction- record:slo:time_period:daysexpr:vector(30)labels:cluster:valhallacmd:examplesgen.shcomponent:ubiquiticontext:homesloth_id:home-wifi-risk-wifi-client-satisfactionsloth_service:home-wifisloth_slo:risk-wifi-client-satisfaction- record:slo:current_burn_rate:ratioexpr:|slo:sli_error:ratio_rate5m{sloth_id=\u0026#34;home-wifi-risk-wifi-client-satisfaction\u0026#34;, sloth_service=\u0026#34;home-wifi\u0026#34;, sloth_slo=\u0026#34;risk-wifi-client-satisfaction\u0026#34;} / on(sloth_id, sloth_slo, sloth_service) group_left slo:error_budget:ratio{sloth_id=\u0026#34;home-wifi-risk-wifi-client-satisfaction\u0026#34;, sloth_service=\u0026#34;home-wifi\u0026#34;, sloth_slo=\u0026#34;risk-wifi-client-satisfaction\u0026#34;}labels:cluster:valhallacmd:examplesgen.shcomponent:ubiquiticontext:homesloth_id:home-wifi-risk-wifi-client-satisfactionsloth_service:home-wifisloth_slo:risk-wifi-client-satisfaction- record:slo:period_burn_rate:ratioexpr:|slo:sli_error:ratio_rate30d{sloth_id=\u0026#34;home-wifi-risk-wifi-client-satisfaction\u0026#34;, sloth_service=\u0026#34;home-wifi\u0026#34;, sloth_slo=\u0026#34;risk-wifi-client-satisfaction\u0026#34;} / on(sloth_id, sloth_slo, sloth_service) group_left slo:error_budget:ratio{sloth_id=\u0026#34;home-wifi-risk-wifi-client-satisfaction\u0026#34;, sloth_service=\u0026#34;home-wifi\u0026#34;, sloth_slo=\u0026#34;risk-wifi-client-satisfaction\u0026#34;}labels:cluster:valhallacmd:examplesgen.shcomponent:ubiquiticontext:homesloth_id:home-wifi-risk-wifi-client-satisfactionsloth_service:home-wifisloth_slo:risk-wifi-client-satisfaction- record:slo:period_error_budget_remaining:ratioexpr:1- slo:period_burn_rate:ratio{sloth_id=\u0026#34;home-wifi-risk-wifi-client-satisfaction\u0026#34;,sloth_service=\u0026#34;home-wifi\u0026#34;, sloth_slo=\u0026#34;risk-wifi-client-satisfaction\u0026#34;}labels:cluster:valhallacmd:examplesgen.shcomponent:ubiquiticontext:homesloth_id:home-wifi-risk-wifi-client-satisfactionsloth_service:home-wifisloth_slo:risk-wifi-client-satisfaction- record:sloth_slo_infoexpr:vector(1)labels:cluster:valhallacmd:examplesgen.shcomponent:ubiquiticontext:homesloth_id:home-wifi-risk-wifi-client-satisfactionsloth_mode:cli-gen-promsloth_objective:\u0026#34;99.9\u0026#34;sloth_service:home-wifisloth_slo:risk-wifi-client-satisfactionsloth_spec:prometheus/v1sloth_version:dev- name:sloth-slo-alerts-home-wifi-risk-wifi-client-satisfactionrules:- alert:RiskWifiClientSatisfactionexpr:|( (slo:sli_error:ratio_rate5m{sloth_id=\u0026#34;home-wifi-risk-wifi-client-satisfaction\u0026#34;, sloth_service=\u0026#34;home-wifi\u0026#34;, sloth_slo=\u0026#34;risk-wifi-client-satisfaction\u0026#34;} \u0026gt; (14.4 * 0.0009999999999999432)) and ignoring (sloth_window) (slo:sli_error:ratio_rate1h{sloth_id=\u0026#34;home-wifi-risk-wifi-client-satisfaction\u0026#34;, sloth_service=\u0026#34;home-wifi\u0026#34;, sloth_slo=\u0026#34;risk-wifi-client-satisfaction\u0026#34;} \u0026gt; (14.4 * 0.0009999999999999432)) ) or ignoring (sloth_window) ( (slo:sli_error:ratio_rate30m{sloth_id=\u0026#34;home-wifi-risk-wifi-client-satisfaction\u0026#34;, sloth_service=\u0026#34;home-wifi\u0026#34;, sloth_slo=\u0026#34;risk-wifi-client-satisfaction\u0026#34;} \u0026gt; (6 * 0.0009999999999999432)) and ignoring (sloth_window) (slo:sli_error:ratio_rate6h{sloth_id=\u0026#34;home-wifi-risk-wifi-client-satisfaction\u0026#34;, sloth_service=\u0026#34;home-wifi\u0026#34;, sloth_slo=\u0026#34;risk-wifi-client-satisfaction\u0026#34;} \u0026gt; (6 * 0.0009999999999999432)) )labels:severity:homesloth_severity:pageannotations:summary:\u0026#39;{{$labels.sloth_service}} {{$labels.sloth_slo}} SLO error budget burn rate is over expected.\u0026#39;title:(page) {{$labels.sloth_service}} {{$labels.sloth_slo}} SLO error budgetburn rate is too fast.- alert:RiskWifiClientSatisfactionexpr:|( (slo:sli_error:ratio_rate2h{sloth_id=\u0026#34;home-wifi-risk-wifi-client-satisfaction\u0026#34;, sloth_service=\u0026#34;home-wifi\u0026#34;, sloth_slo=\u0026#34;risk-wifi-client-satisfaction\u0026#34;} \u0026gt; (3 * 0.0009999999999999432)) and ignoring (sloth_window) (slo:sli_error:ratio_rate1d{sloth_id=\u0026#34;home-wifi-risk-wifi-client-satisfaction\u0026#34;, sloth_service=\u0026#34;home-wifi\u0026#34;, sloth_slo=\u0026#34;risk-wifi-client-satisfaction\u0026#34;} \u0026gt; (3 * 0.0009999999999999432)) ) or ignoring (sloth_window) ( (slo:sli_error:ratio_rate6h{sloth_id=\u0026#34;home-wifi-risk-wifi-client-satisfaction\u0026#34;, sloth_service=\u0026#34;home-wifi\u0026#34;, sloth_slo=\u0026#34;risk-wifi-client-satisfaction\u0026#34;} \u0026gt; (1 * 0.0009999999999999432)) and ignoring (sloth_window) (slo:sli_error:ratio_rate3d{sloth_id=\u0026#34;home-wifi-risk-wifi-client-satisfaction\u0026#34;, sloth_service=\u0026#34;home-wifi\u0026#34;, sloth_slo=\u0026#34;risk-wifi-client-satisfaction\u0026#34;} \u0026gt; (1 * 0.0009999999999999432)) )labels:severity:warningsloth_severity:ticketannotations:summary:\u0026#39;{{$labels.sloth_service}} {{$labels.sloth_slo}} SLO error budget burn rate is over expected.\u0026#39;title:(ticket) {{$labels.sloth_service}} {{$labels.sloth_slo}} SLO error budgetburn rate is too fast.   "},{"id":40,"href":"/examples/kubernetes/home-wifi/","title":"Home WiFi","parent":"Kubernetes","content":" SLO spec  # This example shows the same example as home-wifi.yml but using Sloth Kubernetes CRD.# It will generate the Prometheus rules in a Kubernetes prometheus-operator PrometheusRules CRD.## `sloth generate -i ./examples/k8s-home-wifi.yml`#apiVersion:sloth.slok.dev/v1kind:PrometheusServiceLevelmetadata:name:sloth-slo-home-wifinamespace:monitoringlabels:prometheus:prometheusrole:alert-rulesapp:slothspec:service:\u0026#34;home-wifi\u0026#34;labels:cluster:\u0026#34;valhalla\u0026#34;component:\u0026#34;ubiquiti\u0026#34;context:\u0026#34;home\u0026#34;slos:- name:\u0026#34;good-wifi-client-satisfaction\u0026#34;objective:95description:\u0026#34;Will warn us that we don\u0026#39;t have a good wifi at home.\u0026#34;sli:events:errorQuery:sum_over_time((count(unifipoller_client_satisfaction_ratio \u0026lt; 0.75))[{{.window}}:]) OR on() vector(0)totalQuery:sum_over_time((count(unifipoller_client_satisfaction_ratio))[{{.window}}:])alerting:name:GoodWifiClientSatisfactionpageAlert:labels:severity:hometicketAlert:labels:severity:warning- name:\u0026#34;risk-wifi-client-satisfaction\u0026#34;objective:99.9description:\u0026#34;Will warn us that we something very bad is happenning with our home wifi.\u0026#34;sli:events:errorQuery:sum_over_time((count(unifipoller_client_satisfaction_ratio \u0026lt; 0.5))[{{.window}}:]) OR on() vector(0)totalQuery:sum_over_time((count(unifipoller_client_satisfaction_ratio))[{{.window}}:])alerting:name:RiskWifiClientSatisfactionpageAlert:labels:severity:hometicketAlert:labels:severity:warning  Generated  ---# Code generated by Sloth (dev): https://github.com/slok/sloth.# DO NOT EDIT.apiVersion:monitoring.coreos.com/v1kind:PrometheusRulemetadata:creationTimestamp:nulllabels:app:slothapp.kubernetes.io/component:SLOapp.kubernetes.io/managed-by:slothprometheus:prometheusrole:alert-rulesname:sloth-slo-home-wifinamespace:monitoringspec:groups:- name:sloth-slo-sli-recordings-home-wifi-good-wifi-client-satisfactionrules:- expr:|(sum_over_time((count(unifipoller_client_satisfaction_ratio \u0026lt; 0.75))[5m:]) OR on() vector(0)) / (sum_over_time((count(unifipoller_client_satisfaction_ratio))[5m:]))labels:cluster:valhallacmd:examplesgen.shcomponent:ubiquiticontext:homesloth_id:home-wifi-good-wifi-client-satisfactionsloth_service:home-wifisloth_slo:good-wifi-client-satisfactionsloth_window:5mrecord:slo:sli_error:ratio_rate5m- expr:|(sum_over_time((count(unifipoller_client_satisfaction_ratio \u0026lt; 0.75))[30m:]) OR on() vector(0)) / (sum_over_time((count(unifipoller_client_satisfaction_ratio))[30m:]))labels:cluster:valhallacmd:examplesgen.shcomponent:ubiquiticontext:homesloth_id:home-wifi-good-wifi-client-satisfactionsloth_service:home-wifisloth_slo:good-wifi-client-satisfactionsloth_window:30mrecord:slo:sli_error:ratio_rate30m- expr:|(sum_over_time((count(unifipoller_client_satisfaction_ratio \u0026lt; 0.75))[1h:]) OR on() vector(0)) / (sum_over_time((count(unifipoller_client_satisfaction_ratio))[1h:]))labels:cluster:valhallacmd:examplesgen.shcomponent:ubiquiticontext:homesloth_id:home-wifi-good-wifi-client-satisfactionsloth_service:home-wifisloth_slo:good-wifi-client-satisfactionsloth_window:1hrecord:slo:sli_error:ratio_rate1h- expr:|(sum_over_time((count(unifipoller_client_satisfaction_ratio \u0026lt; 0.75))[2h:]) OR on() vector(0)) / (sum_over_time((count(unifipoller_client_satisfaction_ratio))[2h:]))labels:cluster:valhallacmd:examplesgen.shcomponent:ubiquiticontext:homesloth_id:home-wifi-good-wifi-client-satisfactionsloth_service:home-wifisloth_slo:good-wifi-client-satisfactionsloth_window:2hrecord:slo:sli_error:ratio_rate2h- expr:|(sum_over_time((count(unifipoller_client_satisfaction_ratio \u0026lt; 0.75))[6h:]) OR on() vector(0)) / (sum_over_time((count(unifipoller_client_satisfaction_ratio))[6h:]))labels:cluster:valhallacmd:examplesgen.shcomponent:ubiquiticontext:homesloth_id:home-wifi-good-wifi-client-satisfactionsloth_service:home-wifisloth_slo:good-wifi-client-satisfactionsloth_window:6hrecord:slo:sli_error:ratio_rate6h- expr:|(sum_over_time((count(unifipoller_client_satisfaction_ratio \u0026lt; 0.75))[1d:]) OR on() vector(0)) / (sum_over_time((count(unifipoller_client_satisfaction_ratio))[1d:]))labels:cluster:valhallacmd:examplesgen.shcomponent:ubiquiticontext:homesloth_id:home-wifi-good-wifi-client-satisfactionsloth_service:home-wifisloth_slo:good-wifi-client-satisfactionsloth_window:1drecord:slo:sli_error:ratio_rate1d- expr:|(sum_over_time((count(unifipoller_client_satisfaction_ratio \u0026lt; 0.75))[3d:]) OR on() vector(0)) / (sum_over_time((count(unifipoller_client_satisfaction_ratio))[3d:]))labels:cluster:valhallacmd:examplesgen.shcomponent:ubiquiticontext:homesloth_id:home-wifi-good-wifi-client-satisfactionsloth_service:home-wifisloth_slo:good-wifi-client-satisfactionsloth_window:3drecord:slo:sli_error:ratio_rate3d- expr:|sum_over_time(slo:sli_error:ratio_rate5m{sloth_id=\u0026#34;home-wifi-good-wifi-client-satisfaction\u0026#34;, sloth_service=\u0026#34;home-wifi\u0026#34;, sloth_slo=\u0026#34;good-wifi-client-satisfaction\u0026#34;}[30d]) / ignoring (sloth_window) count_over_time(slo:sli_error:ratio_rate5m{sloth_id=\u0026#34;home-wifi-good-wifi-client-satisfaction\u0026#34;, sloth_service=\u0026#34;home-wifi\u0026#34;, sloth_slo=\u0026#34;good-wifi-client-satisfaction\u0026#34;}[30d])labels:sloth_window:30drecord:slo:sli_error:ratio_rate30d- name:sloth-slo-meta-recordings-home-wifi-good-wifi-client-satisfactionrules:- expr:vector(0.95)labels:cluster:valhallacmd:examplesgen.shcomponent:ubiquiticontext:homesloth_id:home-wifi-good-wifi-client-satisfactionsloth_service:home-wifisloth_slo:good-wifi-client-satisfactionrecord:slo:objective:ratio- expr:vector(1-0.95)labels:cluster:valhallacmd:examplesgen.shcomponent:ubiquiticontext:homesloth_id:home-wifi-good-wifi-client-satisfactionsloth_service:home-wifisloth_slo:good-wifi-client-satisfactionrecord:slo:error_budget:ratio- expr:vector(30)labels:cluster:valhallacmd:examplesgen.shcomponent:ubiquiticontext:homesloth_id:home-wifi-good-wifi-client-satisfactionsloth_service:home-wifisloth_slo:good-wifi-client-satisfactionrecord:slo:time_period:days- expr:|slo:sli_error:ratio_rate5m{sloth_id=\u0026#34;home-wifi-good-wifi-client-satisfaction\u0026#34;, sloth_service=\u0026#34;home-wifi\u0026#34;, sloth_slo=\u0026#34;good-wifi-client-satisfaction\u0026#34;} / on(sloth_id, sloth_slo, sloth_service) group_left slo:error_budget:ratio{sloth_id=\u0026#34;home-wifi-good-wifi-client-satisfaction\u0026#34;, sloth_service=\u0026#34;home-wifi\u0026#34;, sloth_slo=\u0026#34;good-wifi-client-satisfaction\u0026#34;}labels:cluster:valhallacmd:examplesgen.shcomponent:ubiquiticontext:homesloth_id:home-wifi-good-wifi-client-satisfactionsloth_service:home-wifisloth_slo:good-wifi-client-satisfactionrecord:slo:current_burn_rate:ratio- expr:|slo:sli_error:ratio_rate30d{sloth_id=\u0026#34;home-wifi-good-wifi-client-satisfaction\u0026#34;, sloth_service=\u0026#34;home-wifi\u0026#34;, sloth_slo=\u0026#34;good-wifi-client-satisfaction\u0026#34;} / on(sloth_id, sloth_slo, sloth_service) group_left slo:error_budget:ratio{sloth_id=\u0026#34;home-wifi-good-wifi-client-satisfaction\u0026#34;, sloth_service=\u0026#34;home-wifi\u0026#34;, sloth_slo=\u0026#34;good-wifi-client-satisfaction\u0026#34;}labels:cluster:valhallacmd:examplesgen.shcomponent:ubiquiticontext:homesloth_id:home-wifi-good-wifi-client-satisfactionsloth_service:home-wifisloth_slo:good-wifi-client-satisfactionrecord:slo:period_burn_rate:ratio- expr:1- slo:period_burn_rate:ratio{sloth_id=\u0026#34;home-wifi-good-wifi-client-satisfaction\u0026#34;,sloth_service=\u0026#34;home-wifi\u0026#34;, sloth_slo=\u0026#34;good-wifi-client-satisfaction\u0026#34;}labels:cluster:valhallacmd:examplesgen.shcomponent:ubiquiticontext:homesloth_id:home-wifi-good-wifi-client-satisfactionsloth_service:home-wifisloth_slo:good-wifi-client-satisfactionrecord:slo:period_error_budget_remaining:ratio- expr:vector(1)labels:cluster:valhallacmd:examplesgen.shcomponent:ubiquiticontext:homesloth_id:home-wifi-good-wifi-client-satisfactionsloth_mode:cli-gen-k8ssloth_objective:\u0026#34;95\u0026#34;sloth_service:home-wifisloth_slo:good-wifi-client-satisfactionsloth_spec:sloth.slok.dev/v1sloth_version:devrecord:sloth_slo_info- name:sloth-slo-alerts-home-wifi-good-wifi-client-satisfactionrules:- alert:GoodWifiClientSatisfactionannotations:summary:\u0026#39;{{$labels.sloth_service}} {{$labels.sloth_slo}} SLO error budget burn rate is over expected.\u0026#39;title:(page) {{$labels.sloth_service}} {{$labels.sloth_slo}} SLO error budgetburn rate is too fast.expr:|( (slo:sli_error:ratio_rate5m{sloth_id=\u0026#34;home-wifi-good-wifi-client-satisfaction\u0026#34;, sloth_service=\u0026#34;home-wifi\u0026#34;, sloth_slo=\u0026#34;good-wifi-client-satisfaction\u0026#34;} \u0026gt; (14.4 * 0.05)) and ignoring (sloth_window) (slo:sli_error:ratio_rate1h{sloth_id=\u0026#34;home-wifi-good-wifi-client-satisfaction\u0026#34;, sloth_service=\u0026#34;home-wifi\u0026#34;, sloth_slo=\u0026#34;good-wifi-client-satisfaction\u0026#34;} \u0026gt; (14.4 * 0.05)) ) or ignoring (sloth_window) ( (slo:sli_error:ratio_rate30m{sloth_id=\u0026#34;home-wifi-good-wifi-client-satisfaction\u0026#34;, sloth_service=\u0026#34;home-wifi\u0026#34;, sloth_slo=\u0026#34;good-wifi-client-satisfaction\u0026#34;} \u0026gt; (6 * 0.05)) and ignoring (sloth_window) (slo:sli_error:ratio_rate6h{sloth_id=\u0026#34;home-wifi-good-wifi-client-satisfaction\u0026#34;, sloth_service=\u0026#34;home-wifi\u0026#34;, sloth_slo=\u0026#34;good-wifi-client-satisfaction\u0026#34;} \u0026gt; (6 * 0.05)) )labels:severity:homesloth_severity:page- alert:GoodWifiClientSatisfactionannotations:summary:\u0026#39;{{$labels.sloth_service}} {{$labels.sloth_slo}} SLO error budget burn rate is over expected.\u0026#39;title:(ticket) {{$labels.sloth_service}} {{$labels.sloth_slo}} SLO errorbudget burn rate is too fast.expr:|( (slo:sli_error:ratio_rate2h{sloth_id=\u0026#34;home-wifi-good-wifi-client-satisfaction\u0026#34;, sloth_service=\u0026#34;home-wifi\u0026#34;, sloth_slo=\u0026#34;good-wifi-client-satisfaction\u0026#34;} \u0026gt; (3 * 0.05)) and ignoring (sloth_window) (slo:sli_error:ratio_rate1d{sloth_id=\u0026#34;home-wifi-good-wifi-client-satisfaction\u0026#34;, sloth_service=\u0026#34;home-wifi\u0026#34;, sloth_slo=\u0026#34;good-wifi-client-satisfaction\u0026#34;} \u0026gt; (3 * 0.05)) ) or ignoring (sloth_window) ( (slo:sli_error:ratio_rate6h{sloth_id=\u0026#34;home-wifi-good-wifi-client-satisfaction\u0026#34;, sloth_service=\u0026#34;home-wifi\u0026#34;, sloth_slo=\u0026#34;good-wifi-client-satisfaction\u0026#34;} \u0026gt; (1 * 0.05)) and ignoring (sloth_window) (slo:sli_error:ratio_rate3d{sloth_id=\u0026#34;home-wifi-good-wifi-client-satisfaction\u0026#34;, sloth_service=\u0026#34;home-wifi\u0026#34;, sloth_slo=\u0026#34;good-wifi-client-satisfaction\u0026#34;} \u0026gt; (1 * 0.05)) )labels:severity:warningsloth_severity:ticket- name:sloth-slo-sli-recordings-home-wifi-risk-wifi-client-satisfactionrules:- expr:|(sum_over_time((count(unifipoller_client_satisfaction_ratio \u0026lt; 0.5))[5m:]) OR on() vector(0)) / (sum_over_time((count(unifipoller_client_satisfaction_ratio))[5m:]))labels:cluster:valhallacmd:examplesgen.shcomponent:ubiquiticontext:homesloth_id:home-wifi-risk-wifi-client-satisfactionsloth_service:home-wifisloth_slo:risk-wifi-client-satisfactionsloth_window:5mrecord:slo:sli_error:ratio_rate5m- expr:|(sum_over_time((count(unifipoller_client_satisfaction_ratio \u0026lt; 0.5))[30m:]) OR on() vector(0)) / (sum_over_time((count(unifipoller_client_satisfaction_ratio))[30m:]))labels:cluster:valhallacmd:examplesgen.shcomponent:ubiquiticontext:homesloth_id:home-wifi-risk-wifi-client-satisfactionsloth_service:home-wifisloth_slo:risk-wifi-client-satisfactionsloth_window:30mrecord:slo:sli_error:ratio_rate30m- expr:|(sum_over_time((count(unifipoller_client_satisfaction_ratio \u0026lt; 0.5))[1h:]) OR on() vector(0)) / (sum_over_time((count(unifipoller_client_satisfaction_ratio))[1h:]))labels:cluster:valhallacmd:examplesgen.shcomponent:ubiquiticontext:homesloth_id:home-wifi-risk-wifi-client-satisfactionsloth_service:home-wifisloth_slo:risk-wifi-client-satisfactionsloth_window:1hrecord:slo:sli_error:ratio_rate1h- expr:|(sum_over_time((count(unifipoller_client_satisfaction_ratio \u0026lt; 0.5))[2h:]) OR on() vector(0)) / (sum_over_time((count(unifipoller_client_satisfaction_ratio))[2h:]))labels:cluster:valhallacmd:examplesgen.shcomponent:ubiquiticontext:homesloth_id:home-wifi-risk-wifi-client-satisfactionsloth_service:home-wifisloth_slo:risk-wifi-client-satisfactionsloth_window:2hrecord:slo:sli_error:ratio_rate2h- expr:|(sum_over_time((count(unifipoller_client_satisfaction_ratio \u0026lt; 0.5))[6h:]) OR on() vector(0)) / (sum_over_time((count(unifipoller_client_satisfaction_ratio))[6h:]))labels:cluster:valhallacmd:examplesgen.shcomponent:ubiquiticontext:homesloth_id:home-wifi-risk-wifi-client-satisfactionsloth_service:home-wifisloth_slo:risk-wifi-client-satisfactionsloth_window:6hrecord:slo:sli_error:ratio_rate6h- expr:|(sum_over_time((count(unifipoller_client_satisfaction_ratio \u0026lt; 0.5))[1d:]) OR on() vector(0)) / (sum_over_time((count(unifipoller_client_satisfaction_ratio))[1d:]))labels:cluster:valhallacmd:examplesgen.shcomponent:ubiquiticontext:homesloth_id:home-wifi-risk-wifi-client-satisfactionsloth_service:home-wifisloth_slo:risk-wifi-client-satisfactionsloth_window:1drecord:slo:sli_error:ratio_rate1d- expr:|(sum_over_time((count(unifipoller_client_satisfaction_ratio \u0026lt; 0.5))[3d:]) OR on() vector(0)) / (sum_over_time((count(unifipoller_client_satisfaction_ratio))[3d:]))labels:cluster:valhallacmd:examplesgen.shcomponent:ubiquiticontext:homesloth_id:home-wifi-risk-wifi-client-satisfactionsloth_service:home-wifisloth_slo:risk-wifi-client-satisfactionsloth_window:3drecord:slo:sli_error:ratio_rate3d- expr:|sum_over_time(slo:sli_error:ratio_rate5m{sloth_id=\u0026#34;home-wifi-risk-wifi-client-satisfaction\u0026#34;, sloth_service=\u0026#34;home-wifi\u0026#34;, sloth_slo=\u0026#34;risk-wifi-client-satisfaction\u0026#34;}[30d]) / ignoring (sloth_window) count_over_time(slo:sli_error:ratio_rate5m{sloth_id=\u0026#34;home-wifi-risk-wifi-client-satisfaction\u0026#34;, sloth_service=\u0026#34;home-wifi\u0026#34;, sloth_slo=\u0026#34;risk-wifi-client-satisfaction\u0026#34;}[30d])labels:sloth_window:30drecord:slo:sli_error:ratio_rate30d- name:sloth-slo-meta-recordings-home-wifi-risk-wifi-client-satisfactionrules:- expr:vector(0.9990000000000001)labels:cluster:valhallacmd:examplesgen.shcomponent:ubiquiticontext:homesloth_id:home-wifi-risk-wifi-client-satisfactionsloth_service:home-wifisloth_slo:risk-wifi-client-satisfactionrecord:slo:objective:ratio- expr:vector(1-0.9990000000000001)labels:cluster:valhallacmd:examplesgen.shcomponent:ubiquiticontext:homesloth_id:home-wifi-risk-wifi-client-satisfactionsloth_service:home-wifisloth_slo:risk-wifi-client-satisfactionrecord:slo:error_budget:ratio- expr:vector(30)labels:cluster:valhallacmd:examplesgen.shcomponent:ubiquiticontext:homesloth_id:home-wifi-risk-wifi-client-satisfactionsloth_service:home-wifisloth_slo:risk-wifi-client-satisfactionrecord:slo:time_period:days- expr:|slo:sli_error:ratio_rate5m{sloth_id=\u0026#34;home-wifi-risk-wifi-client-satisfaction\u0026#34;, sloth_service=\u0026#34;home-wifi\u0026#34;, sloth_slo=\u0026#34;risk-wifi-client-satisfaction\u0026#34;} / on(sloth_id, sloth_slo, sloth_service) group_left slo:error_budget:ratio{sloth_id=\u0026#34;home-wifi-risk-wifi-client-satisfaction\u0026#34;, sloth_service=\u0026#34;home-wifi\u0026#34;, sloth_slo=\u0026#34;risk-wifi-client-satisfaction\u0026#34;}labels:cluster:valhallacmd:examplesgen.shcomponent:ubiquiticontext:homesloth_id:home-wifi-risk-wifi-client-satisfactionsloth_service:home-wifisloth_slo:risk-wifi-client-satisfactionrecord:slo:current_burn_rate:ratio- expr:|slo:sli_error:ratio_rate30d{sloth_id=\u0026#34;home-wifi-risk-wifi-client-satisfaction\u0026#34;, sloth_service=\u0026#34;home-wifi\u0026#34;, sloth_slo=\u0026#34;risk-wifi-client-satisfaction\u0026#34;} / on(sloth_id, sloth_slo, sloth_service) group_left slo:error_budget:ratio{sloth_id=\u0026#34;home-wifi-risk-wifi-client-satisfaction\u0026#34;, sloth_service=\u0026#34;home-wifi\u0026#34;, sloth_slo=\u0026#34;risk-wifi-client-satisfaction\u0026#34;}labels:cluster:valhallacmd:examplesgen.shcomponent:ubiquiticontext:homesloth_id:home-wifi-risk-wifi-client-satisfactionsloth_service:home-wifisloth_slo:risk-wifi-client-satisfactionrecord:slo:period_burn_rate:ratio- expr:1- slo:period_burn_rate:ratio{sloth_id=\u0026#34;home-wifi-risk-wifi-client-satisfaction\u0026#34;,sloth_service=\u0026#34;home-wifi\u0026#34;, sloth_slo=\u0026#34;risk-wifi-client-satisfaction\u0026#34;}labels:cluster:valhallacmd:examplesgen.shcomponent:ubiquiticontext:homesloth_id:home-wifi-risk-wifi-client-satisfactionsloth_service:home-wifisloth_slo:risk-wifi-client-satisfactionrecord:slo:period_error_budget_remaining:ratio- expr:vector(1)labels:cluster:valhallacmd:examplesgen.shcomponent:ubiquiticontext:homesloth_id:home-wifi-risk-wifi-client-satisfactionsloth_mode:cli-gen-k8ssloth_objective:\u0026#34;99.9\u0026#34;sloth_service:home-wifisloth_slo:risk-wifi-client-satisfactionsloth_spec:sloth.slok.dev/v1sloth_version:devrecord:sloth_slo_info- name:sloth-slo-alerts-home-wifi-risk-wifi-client-satisfactionrules:- alert:RiskWifiClientSatisfactionannotations:summary:\u0026#39;{{$labels.sloth_service}} {{$labels.sloth_slo}} SLO error budget burn rate is over expected.\u0026#39;title:(page) {{$labels.sloth_service}} {{$labels.sloth_slo}} SLO error budgetburn rate is too fast.expr:|( (slo:sli_error:ratio_rate5m{sloth_id=\u0026#34;home-wifi-risk-wifi-client-satisfaction\u0026#34;, sloth_service=\u0026#34;home-wifi\u0026#34;, sloth_slo=\u0026#34;risk-wifi-client-satisfaction\u0026#34;} \u0026gt; (14.4 * 0.0009999999999999432)) and ignoring (sloth_window) (slo:sli_error:ratio_rate1h{sloth_id=\u0026#34;home-wifi-risk-wifi-client-satisfaction\u0026#34;, sloth_service=\u0026#34;home-wifi\u0026#34;, sloth_slo=\u0026#34;risk-wifi-client-satisfaction\u0026#34;} \u0026gt; (14.4 * 0.0009999999999999432)) ) or ignoring (sloth_window) ( (slo:sli_error:ratio_rate30m{sloth_id=\u0026#34;home-wifi-risk-wifi-client-satisfaction\u0026#34;, sloth_service=\u0026#34;home-wifi\u0026#34;, sloth_slo=\u0026#34;risk-wifi-client-satisfaction\u0026#34;} \u0026gt; (6 * 0.0009999999999999432)) and ignoring (sloth_window) (slo:sli_error:ratio_rate6h{sloth_id=\u0026#34;home-wifi-risk-wifi-client-satisfaction\u0026#34;, sloth_service=\u0026#34;home-wifi\u0026#34;, sloth_slo=\u0026#34;risk-wifi-client-satisfaction\u0026#34;} \u0026gt; (6 * 0.0009999999999999432)) )labels:severity:homesloth_severity:page- alert:RiskWifiClientSatisfactionannotations:summary:\u0026#39;{{$labels.sloth_service}} {{$labels.sloth_slo}} SLO error budget burn rate is over expected.\u0026#39;title:(ticket) {{$labels.sloth_service}} {{$labels.sloth_slo}} SLO errorbudget burn rate is too fast.expr:|( (slo:sli_error:ratio_rate2h{sloth_id=\u0026#34;home-wifi-risk-wifi-client-satisfaction\u0026#34;, sloth_service=\u0026#34;home-wifi\u0026#34;, sloth_slo=\u0026#34;risk-wifi-client-satisfaction\u0026#34;} \u0026gt; (3 * 0.0009999999999999432)) and ignoring (sloth_window) (slo:sli_error:ratio_rate1d{sloth_id=\u0026#34;home-wifi-risk-wifi-client-satisfaction\u0026#34;, sloth_service=\u0026#34;home-wifi\u0026#34;, sloth_slo=\u0026#34;risk-wifi-client-satisfaction\u0026#34;} \u0026gt; (3 * 0.0009999999999999432)) ) or ignoring (sloth_window) ( (slo:sli_error:ratio_rate6h{sloth_id=\u0026#34;home-wifi-risk-wifi-client-satisfaction\u0026#34;, sloth_service=\u0026#34;home-wifi\u0026#34;, sloth_slo=\u0026#34;risk-wifi-client-satisfaction\u0026#34;} \u0026gt; (1 * 0.0009999999999999432)) and ignoring (sloth_window) (slo:sli_error:ratio_rate3d{sloth_id=\u0026#34;home-wifi-risk-wifi-client-satisfaction\u0026#34;, sloth_service=\u0026#34;home-wifi\u0026#34;, sloth_slo=\u0026#34;risk-wifi-client-satisfaction\u0026#34;} \u0026gt; (1 * 0.0009999999999999432)) )labels:severity:warningsloth_severity:ticket   "},{"id":41,"href":"/examples/default/kubernetes-apiserver/","title":"Kubernetes APIserver","parent":"Default","content":" SLO spec  # This example shows a real service level used for Kubernetes Apiserver.## The service level has 2 SLOs based on Apiserver requests/responses.## We consider an SLI event the the requests made to the server, lets review the SLOs## - `requests-availability`# - This SLO warn us that we are returning correctly the requests to the clients (kubectl users, controllers...).# - SLI error: We consider a bad request (event) a request with the codes \u0026gt;=500 or 429# - SLO objective (99.9%): We are restrictive with this because we only allow failing a request every 1000.## - `requests-latency`# - This SLO warn us that we apiserver responses are being slow and this will affect the clients (kubectl users, controllers...).# - SLI error: We consider a bad request (event) when the response latency is \u0026lt;400ms.# - SLO objective(99%): We have a relaxed objective because Kubernetes has a lot of async and eventual consistency flows. We could# create in a future another SLO that is less restrictive and use the latency of the realtime requests (e.g: kubectl).## `sloth generate -i ./examples/kubernetes-apiserver.yml`#version:\u0026#34;prometheus/v1\u0026#34;service:\u0026#34;k8s-apiserver\u0026#34;labels:cluster:\u0026#34;valhalla\u0026#34;component:\u0026#34;kubernetes\u0026#34;slos:- name:\u0026#34;requests-availability\u0026#34;objective:99.9description:\u0026#34;Warn that we are returning correctly the requests to the clients (kubectl users, controllers...).\u0026#34;labels:category:availabilitysli:events:error_query:sum(rate(apiserver_request_total{code=~\u0026#34;(5..|429)\u0026#34;}[{{.window}}]))total_query:sum(rate(apiserver_request_total[{{.window}}]))alerting:name:K8sApiserverAvailabilityAlertlabels:category:\u0026#34;availability\u0026#34;annotations:runbook:\u0026#34;https://github.com/kubernetes-monitoring/kubernetes-mixin/tree/master/runbook.md#alert-name-kubeapierrorshigh\u0026#34;page_alert:labels:severity:criticalticket_alert:labels:severity:warning- name:\u0026#34;requests-latency\u0026#34;objective:99description:\u0026#34;Warn that we apiserver responses are being slow and this will affect the clients (kubectl users, controllers...).\u0026#34;labels:category:latencysli:events:error_query:|( sum(rate(apiserver_request_duration_seconds_count{verb!=\u0026#34;WATCH\u0026#34;}[{{.window}}])) - sum(rate(apiserver_request_duration_seconds_bucket{le=\u0026#34;0.4\u0026#34;,verb!=\u0026#34;WATCH\u0026#34;}[{{.window}}])) )total_query:sum(rate(apiserver_request_duration_seconds_count{verb!=\u0026#34;WATCH\u0026#34;}[{{.window}}]))alerting:name:K8sApiserverLatencyAlertlabels:category:\u0026#34;latency\u0026#34;annotations:runbook:\u0026#34;https://github.com/kubernetes-monitoring/kubernetes-mixin/tree/master/runbook.md#alert-name-kubeapilatencyhigh\u0026#34;page_alert:labels:severity:criticalticket_alert:labels:severity:warning  Generated  ---# Code generated by Sloth (dev): https://github.com/slok/sloth.# DO NOT EDIT.groups:- name:sloth-slo-sli-recordings-k8s-apiserver-requests-availabilityrules:- record:slo:sli_error:ratio_rate5mexpr:|(sum(rate(apiserver_request_total{code=~\u0026#34;(5..|429)\u0026#34;}[5m]))) / (sum(rate(apiserver_request_total[5m])))labels:category:availabilitycluster:valhallacmd:examplesgen.shcomponent:kubernetessloth_id:k8s-apiserver-requests-availabilitysloth_service:k8s-apiserversloth_slo:requests-availabilitysloth_window:5m- record:slo:sli_error:ratio_rate30mexpr:|(sum(rate(apiserver_request_total{code=~\u0026#34;(5..|429)\u0026#34;}[30m]))) / (sum(rate(apiserver_request_total[30m])))labels:category:availabilitycluster:valhallacmd:examplesgen.shcomponent:kubernetessloth_id:k8s-apiserver-requests-availabilitysloth_service:k8s-apiserversloth_slo:requests-availabilitysloth_window:30m- record:slo:sli_error:ratio_rate1hexpr:|(sum(rate(apiserver_request_total{code=~\u0026#34;(5..|429)\u0026#34;}[1h]))) / (sum(rate(apiserver_request_total[1h])))labels:category:availabilitycluster:valhallacmd:examplesgen.shcomponent:kubernetessloth_id:k8s-apiserver-requests-availabilitysloth_service:k8s-apiserversloth_slo:requests-availabilitysloth_window:1h- record:slo:sli_error:ratio_rate2hexpr:|(sum(rate(apiserver_request_total{code=~\u0026#34;(5..|429)\u0026#34;}[2h]))) / (sum(rate(apiserver_request_total[2h])))labels:category:availabilitycluster:valhallacmd:examplesgen.shcomponent:kubernetessloth_id:k8s-apiserver-requests-availabilitysloth_service:k8s-apiserversloth_slo:requests-availabilitysloth_window:2h- record:slo:sli_error:ratio_rate6hexpr:|(sum(rate(apiserver_request_total{code=~\u0026#34;(5..|429)\u0026#34;}[6h]))) / (sum(rate(apiserver_request_total[6h])))labels:category:availabilitycluster:valhallacmd:examplesgen.shcomponent:kubernetessloth_id:k8s-apiserver-requests-availabilitysloth_service:k8s-apiserversloth_slo:requests-availabilitysloth_window:6h- record:slo:sli_error:ratio_rate1dexpr:|(sum(rate(apiserver_request_total{code=~\u0026#34;(5..|429)\u0026#34;}[1d]))) / (sum(rate(apiserver_request_total[1d])))labels:category:availabilitycluster:valhallacmd:examplesgen.shcomponent:kubernetessloth_id:k8s-apiserver-requests-availabilitysloth_service:k8s-apiserversloth_slo:requests-availabilitysloth_window:1d- record:slo:sli_error:ratio_rate3dexpr:|(sum(rate(apiserver_request_total{code=~\u0026#34;(5..|429)\u0026#34;}[3d]))) / (sum(rate(apiserver_request_total[3d])))labels:category:availabilitycluster:valhallacmd:examplesgen.shcomponent:kubernetessloth_id:k8s-apiserver-requests-availabilitysloth_service:k8s-apiserversloth_slo:requests-availabilitysloth_window:3d- record:slo:sli_error:ratio_rate30dexpr:|sum_over_time(slo:sli_error:ratio_rate5m{sloth_id=\u0026#34;k8s-apiserver-requests-availability\u0026#34;, sloth_service=\u0026#34;k8s-apiserver\u0026#34;, sloth_slo=\u0026#34;requests-availability\u0026#34;}[30d]) / ignoring (sloth_window) count_over_time(slo:sli_error:ratio_rate5m{sloth_id=\u0026#34;k8s-apiserver-requests-availability\u0026#34;, sloth_service=\u0026#34;k8s-apiserver\u0026#34;, sloth_slo=\u0026#34;requests-availability\u0026#34;}[30d])labels:sloth_window:30d- name:sloth-slo-meta-recordings-k8s-apiserver-requests-availabilityrules:- record:slo:objective:ratioexpr:vector(0.9990000000000001)labels:category:availabilitycluster:valhallacmd:examplesgen.shcomponent:kubernetessloth_id:k8s-apiserver-requests-availabilitysloth_service:k8s-apiserversloth_slo:requests-availability- record:slo:error_budget:ratioexpr:vector(1-0.9990000000000001)labels:category:availabilitycluster:valhallacmd:examplesgen.shcomponent:kubernetessloth_id:k8s-apiserver-requests-availabilitysloth_service:k8s-apiserversloth_slo:requests-availability- record:slo:time_period:daysexpr:vector(30)labels:category:availabilitycluster:valhallacmd:examplesgen.shcomponent:kubernetessloth_id:k8s-apiserver-requests-availabilitysloth_service:k8s-apiserversloth_slo:requests-availability- record:slo:current_burn_rate:ratioexpr:|slo:sli_error:ratio_rate5m{sloth_id=\u0026#34;k8s-apiserver-requests-availability\u0026#34;, sloth_service=\u0026#34;k8s-apiserver\u0026#34;, sloth_slo=\u0026#34;requests-availability\u0026#34;} / on(sloth_id, sloth_slo, sloth_service) group_left slo:error_budget:ratio{sloth_id=\u0026#34;k8s-apiserver-requests-availability\u0026#34;, sloth_service=\u0026#34;k8s-apiserver\u0026#34;, sloth_slo=\u0026#34;requests-availability\u0026#34;}labels:category:availabilitycluster:valhallacmd:examplesgen.shcomponent:kubernetessloth_id:k8s-apiserver-requests-availabilitysloth_service:k8s-apiserversloth_slo:requests-availability- record:slo:period_burn_rate:ratioexpr:|slo:sli_error:ratio_rate30d{sloth_id=\u0026#34;k8s-apiserver-requests-availability\u0026#34;, sloth_service=\u0026#34;k8s-apiserver\u0026#34;, sloth_slo=\u0026#34;requests-availability\u0026#34;} / on(sloth_id, sloth_slo, sloth_service) group_left slo:error_budget:ratio{sloth_id=\u0026#34;k8s-apiserver-requests-availability\u0026#34;, sloth_service=\u0026#34;k8s-apiserver\u0026#34;, sloth_slo=\u0026#34;requests-availability\u0026#34;}labels:category:availabilitycluster:valhallacmd:examplesgen.shcomponent:kubernetessloth_id:k8s-apiserver-requests-availabilitysloth_service:k8s-apiserversloth_slo:requests-availability- record:slo:period_error_budget_remaining:ratioexpr:1- slo:period_burn_rate:ratio{sloth_id=\u0026#34;k8s-apiserver-requests-availability\u0026#34;,sloth_service=\u0026#34;k8s-apiserver\u0026#34;, sloth_slo=\u0026#34;requests-availability\u0026#34;}labels:category:availabilitycluster:valhallacmd:examplesgen.shcomponent:kubernetessloth_id:k8s-apiserver-requests-availabilitysloth_service:k8s-apiserversloth_slo:requests-availability- record:sloth_slo_infoexpr:vector(1)labels:category:availabilitycluster:valhallacmd:examplesgen.shcomponent:kubernetessloth_id:k8s-apiserver-requests-availabilitysloth_mode:cli-gen-promsloth_objective:\u0026#34;99.9\u0026#34;sloth_service:k8s-apiserversloth_slo:requests-availabilitysloth_spec:prometheus/v1sloth_version:dev- name:sloth-slo-alerts-k8s-apiserver-requests-availabilityrules:- alert:K8sApiserverAvailabilityAlertexpr:|( (slo:sli_error:ratio_rate5m{sloth_id=\u0026#34;k8s-apiserver-requests-availability\u0026#34;, sloth_service=\u0026#34;k8s-apiserver\u0026#34;, sloth_slo=\u0026#34;requests-availability\u0026#34;} \u0026gt; (14.4 * 0.0009999999999999432)) and ignoring (sloth_window) (slo:sli_error:ratio_rate1h{sloth_id=\u0026#34;k8s-apiserver-requests-availability\u0026#34;, sloth_service=\u0026#34;k8s-apiserver\u0026#34;, sloth_slo=\u0026#34;requests-availability\u0026#34;} \u0026gt; (14.4 * 0.0009999999999999432)) ) or ignoring (sloth_window) ( (slo:sli_error:ratio_rate30m{sloth_id=\u0026#34;k8s-apiserver-requests-availability\u0026#34;, sloth_service=\u0026#34;k8s-apiserver\u0026#34;, sloth_slo=\u0026#34;requests-availability\u0026#34;} \u0026gt; (6 * 0.0009999999999999432)) and ignoring (sloth_window) (slo:sli_error:ratio_rate6h{sloth_id=\u0026#34;k8s-apiserver-requests-availability\u0026#34;, sloth_service=\u0026#34;k8s-apiserver\u0026#34;, sloth_slo=\u0026#34;requests-availability\u0026#34;} \u0026gt; (6 * 0.0009999999999999432)) )labels:category:availabilityseverity:criticalsloth_severity:pageannotations:runbook:https://github.com/kubernetes-monitoring/kubernetes-mixin/tree/master/runbook.md#alert-name-kubeapierrorshighsummary:\u0026#39;{{$labels.sloth_service}} {{$labels.sloth_slo}} SLO error budget burn rate is over expected.\u0026#39;title:(page) {{$labels.sloth_service}} {{$labels.sloth_slo}} SLO error budgetburn rate is too fast.- alert:K8sApiserverAvailabilityAlertexpr:|( (slo:sli_error:ratio_rate2h{sloth_id=\u0026#34;k8s-apiserver-requests-availability\u0026#34;, sloth_service=\u0026#34;k8s-apiserver\u0026#34;, sloth_slo=\u0026#34;requests-availability\u0026#34;} \u0026gt; (3 * 0.0009999999999999432)) and ignoring (sloth_window) (slo:sli_error:ratio_rate1d{sloth_id=\u0026#34;k8s-apiserver-requests-availability\u0026#34;, sloth_service=\u0026#34;k8s-apiserver\u0026#34;, sloth_slo=\u0026#34;requests-availability\u0026#34;} \u0026gt; (3 * 0.0009999999999999432)) ) or ignoring (sloth_window) ( (slo:sli_error:ratio_rate6h{sloth_id=\u0026#34;k8s-apiserver-requests-availability\u0026#34;, sloth_service=\u0026#34;k8s-apiserver\u0026#34;, sloth_slo=\u0026#34;requests-availability\u0026#34;} \u0026gt; (1 * 0.0009999999999999432)) and ignoring (sloth_window) (slo:sli_error:ratio_rate3d{sloth_id=\u0026#34;k8s-apiserver-requests-availability\u0026#34;, sloth_service=\u0026#34;k8s-apiserver\u0026#34;, sloth_slo=\u0026#34;requests-availability\u0026#34;} \u0026gt; (1 * 0.0009999999999999432)) )labels:category:availabilityseverity:warningsloth_severity:ticketannotations:runbook:https://github.com/kubernetes-monitoring/kubernetes-mixin/tree/master/runbook.md#alert-name-kubeapierrorshighsummary:\u0026#39;{{$labels.sloth_service}} {{$labels.sloth_slo}} SLO error budget burn rate is over expected.\u0026#39;title:(ticket) {{$labels.sloth_service}} {{$labels.sloth_slo}} SLO error budgetburn rate is too fast.- name:sloth-slo-sli-recordings-k8s-apiserver-requests-latencyrules:- record:slo:sli_error:ratio_rate5mexpr:|(( sum(rate(apiserver_request_duration_seconds_count{verb!=\u0026#34;WATCH\u0026#34;}[5m])) - sum(rate(apiserver_request_duration_seconds_bucket{le=\u0026#34;0.4\u0026#34;,verb!=\u0026#34;WATCH\u0026#34;}[5m])) ) ) / (sum(rate(apiserver_request_duration_seconds_count{verb!=\u0026#34;WATCH\u0026#34;}[5m])))labels:category:latencycluster:valhallacmd:examplesgen.shcomponent:kubernetessloth_id:k8s-apiserver-requests-latencysloth_service:k8s-apiserversloth_slo:requests-latencysloth_window:5m- record:slo:sli_error:ratio_rate30mexpr:|(( sum(rate(apiserver_request_duration_seconds_count{verb!=\u0026#34;WATCH\u0026#34;}[30m])) - sum(rate(apiserver_request_duration_seconds_bucket{le=\u0026#34;0.4\u0026#34;,verb!=\u0026#34;WATCH\u0026#34;}[30m])) ) ) / (sum(rate(apiserver_request_duration_seconds_count{verb!=\u0026#34;WATCH\u0026#34;}[30m])))labels:category:latencycluster:valhallacmd:examplesgen.shcomponent:kubernetessloth_id:k8s-apiserver-requests-latencysloth_service:k8s-apiserversloth_slo:requests-latencysloth_window:30m- record:slo:sli_error:ratio_rate1hexpr:|(( sum(rate(apiserver_request_duration_seconds_count{verb!=\u0026#34;WATCH\u0026#34;}[1h])) - sum(rate(apiserver_request_duration_seconds_bucket{le=\u0026#34;0.4\u0026#34;,verb!=\u0026#34;WATCH\u0026#34;}[1h])) ) ) / (sum(rate(apiserver_request_duration_seconds_count{verb!=\u0026#34;WATCH\u0026#34;}[1h])))labels:category:latencycluster:valhallacmd:examplesgen.shcomponent:kubernetessloth_id:k8s-apiserver-requests-latencysloth_service:k8s-apiserversloth_slo:requests-latencysloth_window:1h- record:slo:sli_error:ratio_rate2hexpr:|(( sum(rate(apiserver_request_duration_seconds_count{verb!=\u0026#34;WATCH\u0026#34;}[2h])) - sum(rate(apiserver_request_duration_seconds_bucket{le=\u0026#34;0.4\u0026#34;,verb!=\u0026#34;WATCH\u0026#34;}[2h])) ) ) / (sum(rate(apiserver_request_duration_seconds_count{verb!=\u0026#34;WATCH\u0026#34;}[2h])))labels:category:latencycluster:valhallacmd:examplesgen.shcomponent:kubernetessloth_id:k8s-apiserver-requests-latencysloth_service:k8s-apiserversloth_slo:requests-latencysloth_window:2h- record:slo:sli_error:ratio_rate6hexpr:|(( sum(rate(apiserver_request_duration_seconds_count{verb!=\u0026#34;WATCH\u0026#34;}[6h])) - sum(rate(apiserver_request_duration_seconds_bucket{le=\u0026#34;0.4\u0026#34;,verb!=\u0026#34;WATCH\u0026#34;}[6h])) ) ) / (sum(rate(apiserver_request_duration_seconds_count{verb!=\u0026#34;WATCH\u0026#34;}[6h])))labels:category:latencycluster:valhallacmd:examplesgen.shcomponent:kubernetessloth_id:k8s-apiserver-requests-latencysloth_service:k8s-apiserversloth_slo:requests-latencysloth_window:6h- record:slo:sli_error:ratio_rate1dexpr:|(( sum(rate(apiserver_request_duration_seconds_count{verb!=\u0026#34;WATCH\u0026#34;}[1d])) - sum(rate(apiserver_request_duration_seconds_bucket{le=\u0026#34;0.4\u0026#34;,verb!=\u0026#34;WATCH\u0026#34;}[1d])) ) ) / (sum(rate(apiserver_request_duration_seconds_count{verb!=\u0026#34;WATCH\u0026#34;}[1d])))labels:category:latencycluster:valhallacmd:examplesgen.shcomponent:kubernetessloth_id:k8s-apiserver-requests-latencysloth_service:k8s-apiserversloth_slo:requests-latencysloth_window:1d- record:slo:sli_error:ratio_rate3dexpr:|(( sum(rate(apiserver_request_duration_seconds_count{verb!=\u0026#34;WATCH\u0026#34;}[3d])) - sum(rate(apiserver_request_duration_seconds_bucket{le=\u0026#34;0.4\u0026#34;,verb!=\u0026#34;WATCH\u0026#34;}[3d])) ) ) / (sum(rate(apiserver_request_duration_seconds_count{verb!=\u0026#34;WATCH\u0026#34;}[3d])))labels:category:latencycluster:valhallacmd:examplesgen.shcomponent:kubernetessloth_id:k8s-apiserver-requests-latencysloth_service:k8s-apiserversloth_slo:requests-latencysloth_window:3d- record:slo:sli_error:ratio_rate30dexpr:|sum_over_time(slo:sli_error:ratio_rate5m{sloth_id=\u0026#34;k8s-apiserver-requests-latency\u0026#34;, sloth_service=\u0026#34;k8s-apiserver\u0026#34;, sloth_slo=\u0026#34;requests-latency\u0026#34;}[30d]) / ignoring (sloth_window) count_over_time(slo:sli_error:ratio_rate5m{sloth_id=\u0026#34;k8s-apiserver-requests-latency\u0026#34;, sloth_service=\u0026#34;k8s-apiserver\u0026#34;, sloth_slo=\u0026#34;requests-latency\u0026#34;}[30d])labels:sloth_window:30d- name:sloth-slo-meta-recordings-k8s-apiserver-requests-latencyrules:- record:slo:objective:ratioexpr:vector(0.99)labels:category:latencycluster:valhallacmd:examplesgen.shcomponent:kubernetessloth_id:k8s-apiserver-requests-latencysloth_service:k8s-apiserversloth_slo:requests-latency- record:slo:error_budget:ratioexpr:vector(1-0.99)labels:category:latencycluster:valhallacmd:examplesgen.shcomponent:kubernetessloth_id:k8s-apiserver-requests-latencysloth_service:k8s-apiserversloth_slo:requests-latency- record:slo:time_period:daysexpr:vector(30)labels:category:latencycluster:valhallacmd:examplesgen.shcomponent:kubernetessloth_id:k8s-apiserver-requests-latencysloth_service:k8s-apiserversloth_slo:requests-latency- record:slo:current_burn_rate:ratioexpr:|slo:sli_error:ratio_rate5m{sloth_id=\u0026#34;k8s-apiserver-requests-latency\u0026#34;, sloth_service=\u0026#34;k8s-apiserver\u0026#34;, sloth_slo=\u0026#34;requests-latency\u0026#34;} / on(sloth_id, sloth_slo, sloth_service) group_left slo:error_budget:ratio{sloth_id=\u0026#34;k8s-apiserver-requests-latency\u0026#34;, sloth_service=\u0026#34;k8s-apiserver\u0026#34;, sloth_slo=\u0026#34;requests-latency\u0026#34;}labels:category:latencycluster:valhallacmd:examplesgen.shcomponent:kubernetessloth_id:k8s-apiserver-requests-latencysloth_service:k8s-apiserversloth_slo:requests-latency- record:slo:period_burn_rate:ratioexpr:|slo:sli_error:ratio_rate30d{sloth_id=\u0026#34;k8s-apiserver-requests-latency\u0026#34;, sloth_service=\u0026#34;k8s-apiserver\u0026#34;, sloth_slo=\u0026#34;requests-latency\u0026#34;} / on(sloth_id, sloth_slo, sloth_service) group_left slo:error_budget:ratio{sloth_id=\u0026#34;k8s-apiserver-requests-latency\u0026#34;, sloth_service=\u0026#34;k8s-apiserver\u0026#34;, sloth_slo=\u0026#34;requests-latency\u0026#34;}labels:category:latencycluster:valhallacmd:examplesgen.shcomponent:kubernetessloth_id:k8s-apiserver-requests-latencysloth_service:k8s-apiserversloth_slo:requests-latency- record:slo:period_error_budget_remaining:ratioexpr:1- slo:period_burn_rate:ratio{sloth_id=\u0026#34;k8s-apiserver-requests-latency\u0026#34;,sloth_service=\u0026#34;k8s-apiserver\u0026#34;, sloth_slo=\u0026#34;requests-latency\u0026#34;}labels:category:latencycluster:valhallacmd:examplesgen.shcomponent:kubernetessloth_id:k8s-apiserver-requests-latencysloth_service:k8s-apiserversloth_slo:requests-latency- record:sloth_slo_infoexpr:vector(1)labels:category:latencycluster:valhallacmd:examplesgen.shcomponent:kubernetessloth_id:k8s-apiserver-requests-latencysloth_mode:cli-gen-promsloth_objective:\u0026#34;99\u0026#34;sloth_service:k8s-apiserversloth_slo:requests-latencysloth_spec:prometheus/v1sloth_version:dev- name:sloth-slo-alerts-k8s-apiserver-requests-latencyrules:- alert:K8sApiserverLatencyAlertexpr:|( (slo:sli_error:ratio_rate5m{sloth_id=\u0026#34;k8s-apiserver-requests-latency\u0026#34;, sloth_service=\u0026#34;k8s-apiserver\u0026#34;, sloth_slo=\u0026#34;requests-latency\u0026#34;} \u0026gt; (14.4 * 0.01)) and ignoring (sloth_window) (slo:sli_error:ratio_rate1h{sloth_id=\u0026#34;k8s-apiserver-requests-latency\u0026#34;, sloth_service=\u0026#34;k8s-apiserver\u0026#34;, sloth_slo=\u0026#34;requests-latency\u0026#34;} \u0026gt; (14.4 * 0.01)) ) or ignoring (sloth_window) ( (slo:sli_error:ratio_rate30m{sloth_id=\u0026#34;k8s-apiserver-requests-latency\u0026#34;, sloth_service=\u0026#34;k8s-apiserver\u0026#34;, sloth_slo=\u0026#34;requests-latency\u0026#34;} \u0026gt; (6 * 0.01)) and ignoring (sloth_window) (slo:sli_error:ratio_rate6h{sloth_id=\u0026#34;k8s-apiserver-requests-latency\u0026#34;, sloth_service=\u0026#34;k8s-apiserver\u0026#34;, sloth_slo=\u0026#34;requests-latency\u0026#34;} \u0026gt; (6 * 0.01)) )labels:category:latencyseverity:criticalsloth_severity:pageannotations:runbook:https://github.com/kubernetes-monitoring/kubernetes-mixin/tree/master/runbook.md#alert-name-kubeapilatencyhighsummary:\u0026#39;{{$labels.sloth_service}} {{$labels.sloth_slo}} SLO error budget burn rate is over expected.\u0026#39;title:(page) {{$labels.sloth_service}} {{$labels.sloth_slo}} SLO error budgetburn rate is too fast.- alert:K8sApiserverLatencyAlertexpr:|( (slo:sli_error:ratio_rate2h{sloth_id=\u0026#34;k8s-apiserver-requests-latency\u0026#34;, sloth_service=\u0026#34;k8s-apiserver\u0026#34;, sloth_slo=\u0026#34;requests-latency\u0026#34;} \u0026gt; (3 * 0.01)) and ignoring (sloth_window) (slo:sli_error:ratio_rate1d{sloth_id=\u0026#34;k8s-apiserver-requests-latency\u0026#34;, sloth_service=\u0026#34;k8s-apiserver\u0026#34;, sloth_slo=\u0026#34;requests-latency\u0026#34;} \u0026gt; (3 * 0.01)) ) or ignoring (sloth_window) ( (slo:sli_error:ratio_rate6h{sloth_id=\u0026#34;k8s-apiserver-requests-latency\u0026#34;, sloth_service=\u0026#34;k8s-apiserver\u0026#34;, sloth_slo=\u0026#34;requests-latency\u0026#34;} \u0026gt; (1 * 0.01)) and ignoring (sloth_window) (slo:sli_error:ratio_rate3d{sloth_id=\u0026#34;k8s-apiserver-requests-latency\u0026#34;, sloth_service=\u0026#34;k8s-apiserver\u0026#34;, sloth_slo=\u0026#34;requests-latency\u0026#34;} \u0026gt; (1 * 0.01)) )labels:category:latencyseverity:warningsloth_severity:ticketannotations:runbook:https://github.com/kubernetes-monitoring/kubernetes-mixin/tree/master/runbook.md#alert-name-kubeapilatencyhighsummary:\u0026#39;{{$labels.sloth_service}} {{$labels.sloth_slo}} SLO error budget burn rate is over expected.\u0026#39;title:(ticket) {{$labels.sloth_service}} {{$labels.sloth_slo}} SLO error budgetburn rate is too fast.   "},{"id":42,"href":"/examples/openslo/kubernetes-apiserver/","title":"Kubernetes APIserver","parent":"OpenSLO","content":" SLO spec  # This example shows the same example as kubernetes-apiserver.yml but using OpenSLO spec.# It will generate the Prometheus rules in a Prometheus rules format.## Take into account that OpenSLO spec has the concept of single SLO with multiple objectives## `sloth generate -i ./examples/openslo-kubernetes-apiserver.yml`#apiVersion:openslo/v1alphakind:SLOmetadata:name:requests-availability-openslodisplayName:Requests Availabilityspec:service:k8s-apiserverdescription:\u0026#34;Apiserver are returning correctly the requests to the clients (kubectl users, controllers...).\u0026#34;budgetingMethod:Occurrencesobjectives:- ratioMetrics:good:source:prometheusqueryType:promqlquery:sum(rate(apiserver_request_total{code!~\u0026#34;(5..|429)\u0026#34;}[{{.window}}]))total:source:prometheusqueryType:promqlquery:sum(rate(apiserver_request_total[{{.window}}]))target:0.999timeWindows:- count:30unit:Day---apiVersion:openslo/v1alphakind:SLOmetadata:name:requests-latency-openslodisplayName:Requests Latencyspec:service:k8s-apiserverdescription:\u0026#34;Apiserver responses are being fast enough and this will affect the clients (kubectl users, controllers...).\u0026#34;budgetingMethod:Occurrencesobjectives:- ratioMetrics:good:source:prometheusqueryType:promqlquery:sum(rate(apiserver_request_duration_seconds_bucket{le=\u0026#34;0.4\u0026#34;,verb!=\u0026#34;WATCH\u0026#34;}[{{.window}}]))total:source:prometheusqueryType:promqlquery:sum(rate(apiserver_request_duration_seconds_count{verb!=\u0026#34;WATCH\u0026#34;}[{{.window}}]))target:0.99- ratioMetrics:good:source:prometheusqueryType:promqlquery:sum(rate(apiserver_request_duration_seconds_bucket{le=\u0026#34;5\u0026#34;,verb!=\u0026#34;WATCH\u0026#34;}[{{.window}}]))total:source:prometheusqueryType:promqlquery:sum(rate(apiserver_request_duration_seconds_count{verb!=\u0026#34;WATCH\u0026#34;}[{{.window}}]))target:0.999timeWindows:- count:30unit:Day  Generated  ---# Code generated by Sloth (dev): https://github.com/slok/sloth.# DO NOT EDIT.groups:- name:sloth-slo-sli-recordings-k8s-apiserver-requests-availability-openslo-0rules:- record:slo:sli_error:ratio_rate5mexpr:|-( 1 - ( ( sum(rate(apiserver_request_total{code!~\u0026#34;(5..|429)\u0026#34;}[5m])) ) / ( sum(rate(apiserver_request_total[5m])) ) ) )labels:cmd:examplesgen.shsloth_id:k8s-apiserver-requests-availability-openslo-0sloth_service:k8s-apiserversloth_slo:requests-availability-openslo-0sloth_window:5m- record:slo:sli_error:ratio_rate30mexpr:|-( 1 - ( ( sum(rate(apiserver_request_total{code!~\u0026#34;(5..|429)\u0026#34;}[30m])) ) / ( sum(rate(apiserver_request_total[30m])) ) ) )labels:cmd:examplesgen.shsloth_id:k8s-apiserver-requests-availability-openslo-0sloth_service:k8s-apiserversloth_slo:requests-availability-openslo-0sloth_window:30m- record:slo:sli_error:ratio_rate1hexpr:|-( 1 - ( ( sum(rate(apiserver_request_total{code!~\u0026#34;(5..|429)\u0026#34;}[1h])) ) / ( sum(rate(apiserver_request_total[1h])) ) ) )labels:cmd:examplesgen.shsloth_id:k8s-apiserver-requests-availability-openslo-0sloth_service:k8s-apiserversloth_slo:requests-availability-openslo-0sloth_window:1h- record:slo:sli_error:ratio_rate2hexpr:|-( 1 - ( ( sum(rate(apiserver_request_total{code!~\u0026#34;(5..|429)\u0026#34;}[2h])) ) / ( sum(rate(apiserver_request_total[2h])) ) ) )labels:cmd:examplesgen.shsloth_id:k8s-apiserver-requests-availability-openslo-0sloth_service:k8s-apiserversloth_slo:requests-availability-openslo-0sloth_window:2h- record:slo:sli_error:ratio_rate6hexpr:|-( 1 - ( ( sum(rate(apiserver_request_total{code!~\u0026#34;(5..|429)\u0026#34;}[6h])) ) / ( sum(rate(apiserver_request_total[6h])) ) ) )labels:cmd:examplesgen.shsloth_id:k8s-apiserver-requests-availability-openslo-0sloth_service:k8s-apiserversloth_slo:requests-availability-openslo-0sloth_window:6h- record:slo:sli_error:ratio_rate1dexpr:|-( 1 - ( ( sum(rate(apiserver_request_total{code!~\u0026#34;(5..|429)\u0026#34;}[1d])) ) / ( sum(rate(apiserver_request_total[1d])) ) ) )labels:cmd:examplesgen.shsloth_id:k8s-apiserver-requests-availability-openslo-0sloth_service:k8s-apiserversloth_slo:requests-availability-openslo-0sloth_window:1d- record:slo:sli_error:ratio_rate3dexpr:|-( 1 - ( ( sum(rate(apiserver_request_total{code!~\u0026#34;(5..|429)\u0026#34;}[3d])) ) / ( sum(rate(apiserver_request_total[3d])) ) ) )labels:cmd:examplesgen.shsloth_id:k8s-apiserver-requests-availability-openslo-0sloth_service:k8s-apiserversloth_slo:requests-availability-openslo-0sloth_window:3d- record:slo:sli_error:ratio_rate30dexpr:|sum_over_time(slo:sli_error:ratio_rate5m{sloth_id=\u0026#34;k8s-apiserver-requests-availability-openslo-0\u0026#34;, sloth_service=\u0026#34;k8s-apiserver\u0026#34;, sloth_slo=\u0026#34;requests-availability-openslo-0\u0026#34;}[30d]) / ignoring (sloth_window) count_over_time(slo:sli_error:ratio_rate5m{sloth_id=\u0026#34;k8s-apiserver-requests-availability-openslo-0\u0026#34;, sloth_service=\u0026#34;k8s-apiserver\u0026#34;, sloth_slo=\u0026#34;requests-availability-openslo-0\u0026#34;}[30d])labels:sloth_window:30d- name:sloth-slo-meta-recordings-k8s-apiserver-requests-availability-openslo-0rules:- record:slo:objective:ratioexpr:vector(0.9990000000000001)labels:cmd:examplesgen.shsloth_id:k8s-apiserver-requests-availability-openslo-0sloth_service:k8s-apiserversloth_slo:requests-availability-openslo-0- record:slo:error_budget:ratioexpr:vector(1-0.9990000000000001)labels:cmd:examplesgen.shsloth_id:k8s-apiserver-requests-availability-openslo-0sloth_service:k8s-apiserversloth_slo:requests-availability-openslo-0- record:slo:time_period:daysexpr:vector(30)labels:cmd:examplesgen.shsloth_id:k8s-apiserver-requests-availability-openslo-0sloth_service:k8s-apiserversloth_slo:requests-availability-openslo-0- record:slo:current_burn_rate:ratioexpr:|slo:sli_error:ratio_rate5m{sloth_id=\u0026#34;k8s-apiserver-requests-availability-openslo-0\u0026#34;, sloth_service=\u0026#34;k8s-apiserver\u0026#34;, sloth_slo=\u0026#34;requests-availability-openslo-0\u0026#34;} / on(sloth_id, sloth_slo, sloth_service) group_left slo:error_budget:ratio{sloth_id=\u0026#34;k8s-apiserver-requests-availability-openslo-0\u0026#34;, sloth_service=\u0026#34;k8s-apiserver\u0026#34;, sloth_slo=\u0026#34;requests-availability-openslo-0\u0026#34;}labels:cmd:examplesgen.shsloth_id:k8s-apiserver-requests-availability-openslo-0sloth_service:k8s-apiserversloth_slo:requests-availability-openslo-0- record:slo:period_burn_rate:ratioexpr:|slo:sli_error:ratio_rate30d{sloth_id=\u0026#34;k8s-apiserver-requests-availability-openslo-0\u0026#34;, sloth_service=\u0026#34;k8s-apiserver\u0026#34;, sloth_slo=\u0026#34;requests-availability-openslo-0\u0026#34;} / on(sloth_id, sloth_slo, sloth_service) group_left slo:error_budget:ratio{sloth_id=\u0026#34;k8s-apiserver-requests-availability-openslo-0\u0026#34;, sloth_service=\u0026#34;k8s-apiserver\u0026#34;, sloth_slo=\u0026#34;requests-availability-openslo-0\u0026#34;}labels:cmd:examplesgen.shsloth_id:k8s-apiserver-requests-availability-openslo-0sloth_service:k8s-apiserversloth_slo:requests-availability-openslo-0- record:slo:period_error_budget_remaining:ratioexpr:1- slo:period_burn_rate:ratio{sloth_id=\u0026#34;k8s-apiserver-requests-availability-openslo-0\u0026#34;,sloth_service=\u0026#34;k8s-apiserver\u0026#34;, sloth_slo=\u0026#34;requests-availability-openslo-0\u0026#34;}labels:cmd:examplesgen.shsloth_id:k8s-apiserver-requests-availability-openslo-0sloth_service:k8s-apiserversloth_slo:requests-availability-openslo-0- record:sloth_slo_infoexpr:vector(1)labels:cmd:examplesgen.shsloth_id:k8s-apiserver-requests-availability-openslo-0sloth_mode:cli-gen-openslosloth_objective:\u0026#34;99.9\u0026#34;sloth_service:k8s-apiserversloth_slo:requests-availability-openslo-0sloth_spec:openslo/v1alphasloth_version:dev---# Code generated by Sloth (dev): https://github.com/slok/sloth.# DO NOT EDIT.groups:- name:sloth-slo-sli-recordings-k8s-apiserver-requests-latency-openslo-0rules:- record:slo:sli_error:ratio_rate5mexpr:|-( 1 - ( ( sum(rate(apiserver_request_duration_seconds_bucket{le=\u0026#34;0.4\u0026#34;,verb!=\u0026#34;WATCH\u0026#34;}[5m])) ) / ( sum(rate(apiserver_request_duration_seconds_count{verb!=\u0026#34;WATCH\u0026#34;}[5m])) ) ) )labels:cmd:examplesgen.shsloth_id:k8s-apiserver-requests-latency-openslo-0sloth_service:k8s-apiserversloth_slo:requests-latency-openslo-0sloth_window:5m- record:slo:sli_error:ratio_rate30mexpr:|-( 1 - ( ( sum(rate(apiserver_request_duration_seconds_bucket{le=\u0026#34;0.4\u0026#34;,verb!=\u0026#34;WATCH\u0026#34;}[30m])) ) / ( sum(rate(apiserver_request_duration_seconds_count{verb!=\u0026#34;WATCH\u0026#34;}[30m])) ) ) )labels:cmd:examplesgen.shsloth_id:k8s-apiserver-requests-latency-openslo-0sloth_service:k8s-apiserversloth_slo:requests-latency-openslo-0sloth_window:30m- record:slo:sli_error:ratio_rate1hexpr:|-( 1 - ( ( sum(rate(apiserver_request_duration_seconds_bucket{le=\u0026#34;0.4\u0026#34;,verb!=\u0026#34;WATCH\u0026#34;}[1h])) ) / ( sum(rate(apiserver_request_duration_seconds_count{verb!=\u0026#34;WATCH\u0026#34;}[1h])) ) ) )labels:cmd:examplesgen.shsloth_id:k8s-apiserver-requests-latency-openslo-0sloth_service:k8s-apiserversloth_slo:requests-latency-openslo-0sloth_window:1h- record:slo:sli_error:ratio_rate2hexpr:|-( 1 - ( ( sum(rate(apiserver_request_duration_seconds_bucket{le=\u0026#34;0.4\u0026#34;,verb!=\u0026#34;WATCH\u0026#34;}[2h])) ) / ( sum(rate(apiserver_request_duration_seconds_count{verb!=\u0026#34;WATCH\u0026#34;}[2h])) ) ) )labels:cmd:examplesgen.shsloth_id:k8s-apiserver-requests-latency-openslo-0sloth_service:k8s-apiserversloth_slo:requests-latency-openslo-0sloth_window:2h- record:slo:sli_error:ratio_rate6hexpr:|-( 1 - ( ( sum(rate(apiserver_request_duration_seconds_bucket{le=\u0026#34;0.4\u0026#34;,verb!=\u0026#34;WATCH\u0026#34;}[6h])) ) / ( sum(rate(apiserver_request_duration_seconds_count{verb!=\u0026#34;WATCH\u0026#34;}[6h])) ) ) )labels:cmd:examplesgen.shsloth_id:k8s-apiserver-requests-latency-openslo-0sloth_service:k8s-apiserversloth_slo:requests-latency-openslo-0sloth_window:6h- record:slo:sli_error:ratio_rate1dexpr:|-( 1 - ( ( sum(rate(apiserver_request_duration_seconds_bucket{le=\u0026#34;0.4\u0026#34;,verb!=\u0026#34;WATCH\u0026#34;}[1d])) ) / ( sum(rate(apiserver_request_duration_seconds_count{verb!=\u0026#34;WATCH\u0026#34;}[1d])) ) ) )labels:cmd:examplesgen.shsloth_id:k8s-apiserver-requests-latency-openslo-0sloth_service:k8s-apiserversloth_slo:requests-latency-openslo-0sloth_window:1d- record:slo:sli_error:ratio_rate3dexpr:|-( 1 - ( ( sum(rate(apiserver_request_duration_seconds_bucket{le=\u0026#34;0.4\u0026#34;,verb!=\u0026#34;WATCH\u0026#34;}[3d])) ) / ( sum(rate(apiserver_request_duration_seconds_count{verb!=\u0026#34;WATCH\u0026#34;}[3d])) ) ) )labels:cmd:examplesgen.shsloth_id:k8s-apiserver-requests-latency-openslo-0sloth_service:k8s-apiserversloth_slo:requests-latency-openslo-0sloth_window:3d- record:slo:sli_error:ratio_rate30dexpr:|sum_over_time(slo:sli_error:ratio_rate5m{sloth_id=\u0026#34;k8s-apiserver-requests-latency-openslo-0\u0026#34;, sloth_service=\u0026#34;k8s-apiserver\u0026#34;, sloth_slo=\u0026#34;requests-latency-openslo-0\u0026#34;}[30d]) / ignoring (sloth_window) count_over_time(slo:sli_error:ratio_rate5m{sloth_id=\u0026#34;k8s-apiserver-requests-latency-openslo-0\u0026#34;, sloth_service=\u0026#34;k8s-apiserver\u0026#34;, sloth_slo=\u0026#34;requests-latency-openslo-0\u0026#34;}[30d])labels:sloth_window:30d- name:sloth-slo-meta-recordings-k8s-apiserver-requests-latency-openslo-0rules:- record:slo:objective:ratioexpr:vector(0.99)labels:cmd:examplesgen.shsloth_id:k8s-apiserver-requests-latency-openslo-0sloth_service:k8s-apiserversloth_slo:requests-latency-openslo-0- record:slo:error_budget:ratioexpr:vector(1-0.99)labels:cmd:examplesgen.shsloth_id:k8s-apiserver-requests-latency-openslo-0sloth_service:k8s-apiserversloth_slo:requests-latency-openslo-0- record:slo:time_period:daysexpr:vector(30)labels:cmd:examplesgen.shsloth_id:k8s-apiserver-requests-latency-openslo-0sloth_service:k8s-apiserversloth_slo:requests-latency-openslo-0- record:slo:current_burn_rate:ratioexpr:|slo:sli_error:ratio_rate5m{sloth_id=\u0026#34;k8s-apiserver-requests-latency-openslo-0\u0026#34;, sloth_service=\u0026#34;k8s-apiserver\u0026#34;, sloth_slo=\u0026#34;requests-latency-openslo-0\u0026#34;} / on(sloth_id, sloth_slo, sloth_service) group_left slo:error_budget:ratio{sloth_id=\u0026#34;k8s-apiserver-requests-latency-openslo-0\u0026#34;, sloth_service=\u0026#34;k8s-apiserver\u0026#34;, sloth_slo=\u0026#34;requests-latency-openslo-0\u0026#34;}labels:cmd:examplesgen.shsloth_id:k8s-apiserver-requests-latency-openslo-0sloth_service:k8s-apiserversloth_slo:requests-latency-openslo-0- record:slo:period_burn_rate:ratioexpr:|slo:sli_error:ratio_rate30d{sloth_id=\u0026#34;k8s-apiserver-requests-latency-openslo-0\u0026#34;, sloth_service=\u0026#34;k8s-apiserver\u0026#34;, sloth_slo=\u0026#34;requests-latency-openslo-0\u0026#34;} / on(sloth_id, sloth_slo, sloth_service) group_left slo:error_budget:ratio{sloth_id=\u0026#34;k8s-apiserver-requests-latency-openslo-0\u0026#34;, sloth_service=\u0026#34;k8s-apiserver\u0026#34;, sloth_slo=\u0026#34;requests-latency-openslo-0\u0026#34;}labels:cmd:examplesgen.shsloth_id:k8s-apiserver-requests-latency-openslo-0sloth_service:k8s-apiserversloth_slo:requests-latency-openslo-0- record:slo:period_error_budget_remaining:ratioexpr:1- slo:period_burn_rate:ratio{sloth_id=\u0026#34;k8s-apiserver-requests-latency-openslo-0\u0026#34;,sloth_service=\u0026#34;k8s-apiserver\u0026#34;, sloth_slo=\u0026#34;requests-latency-openslo-0\u0026#34;}labels:cmd:examplesgen.shsloth_id:k8s-apiserver-requests-latency-openslo-0sloth_service:k8s-apiserversloth_slo:requests-latency-openslo-0- record:sloth_slo_infoexpr:vector(1)labels:cmd:examplesgen.shsloth_id:k8s-apiserver-requests-latency-openslo-0sloth_mode:cli-gen-openslosloth_objective:\u0026#34;99\u0026#34;sloth_service:k8s-apiserversloth_slo:requests-latency-openslo-0sloth_spec:openslo/v1alphasloth_version:dev- name:sloth-slo-sli-recordings-k8s-apiserver-requests-latency-openslo-1rules:- record:slo:sli_error:ratio_rate5mexpr:|-( 1 - ( ( sum(rate(apiserver_request_duration_seconds_bucket{le=\u0026#34;5\u0026#34;,verb!=\u0026#34;WATCH\u0026#34;}[5m])) ) / ( sum(rate(apiserver_request_duration_seconds_count{verb!=\u0026#34;WATCH\u0026#34;}[5m])) ) ) )labels:cmd:examplesgen.shsloth_id:k8s-apiserver-requests-latency-openslo-1sloth_service:k8s-apiserversloth_slo:requests-latency-openslo-1sloth_window:5m- record:slo:sli_error:ratio_rate30mexpr:|-( 1 - ( ( sum(rate(apiserver_request_duration_seconds_bucket{le=\u0026#34;5\u0026#34;,verb!=\u0026#34;WATCH\u0026#34;}[30m])) ) / ( sum(rate(apiserver_request_duration_seconds_count{verb!=\u0026#34;WATCH\u0026#34;}[30m])) ) ) )labels:cmd:examplesgen.shsloth_id:k8s-apiserver-requests-latency-openslo-1sloth_service:k8s-apiserversloth_slo:requests-latency-openslo-1sloth_window:30m- record:slo:sli_error:ratio_rate1hexpr:|-( 1 - ( ( sum(rate(apiserver_request_duration_seconds_bucket{le=\u0026#34;5\u0026#34;,verb!=\u0026#34;WATCH\u0026#34;}[1h])) ) / ( sum(rate(apiserver_request_duration_seconds_count{verb!=\u0026#34;WATCH\u0026#34;}[1h])) ) ) )labels:cmd:examplesgen.shsloth_id:k8s-apiserver-requests-latency-openslo-1sloth_service:k8s-apiserversloth_slo:requests-latency-openslo-1sloth_window:1h- record:slo:sli_error:ratio_rate2hexpr:|-( 1 - ( ( sum(rate(apiserver_request_duration_seconds_bucket{le=\u0026#34;5\u0026#34;,verb!=\u0026#34;WATCH\u0026#34;}[2h])) ) / ( sum(rate(apiserver_request_duration_seconds_count{verb!=\u0026#34;WATCH\u0026#34;}[2h])) ) ) )labels:cmd:examplesgen.shsloth_id:k8s-apiserver-requests-latency-openslo-1sloth_service:k8s-apiserversloth_slo:requests-latency-openslo-1sloth_window:2h- record:slo:sli_error:ratio_rate6hexpr:|-( 1 - ( ( sum(rate(apiserver_request_duration_seconds_bucket{le=\u0026#34;5\u0026#34;,verb!=\u0026#34;WATCH\u0026#34;}[6h])) ) / ( sum(rate(apiserver_request_duration_seconds_count{verb!=\u0026#34;WATCH\u0026#34;}[6h])) ) ) )labels:cmd:examplesgen.shsloth_id:k8s-apiserver-requests-latency-openslo-1sloth_service:k8s-apiserversloth_slo:requests-latency-openslo-1sloth_window:6h- record:slo:sli_error:ratio_rate1dexpr:|-( 1 - ( ( sum(rate(apiserver_request_duration_seconds_bucket{le=\u0026#34;5\u0026#34;,verb!=\u0026#34;WATCH\u0026#34;}[1d])) ) / ( sum(rate(apiserver_request_duration_seconds_count{verb!=\u0026#34;WATCH\u0026#34;}[1d])) ) ) )labels:cmd:examplesgen.shsloth_id:k8s-apiserver-requests-latency-openslo-1sloth_service:k8s-apiserversloth_slo:requests-latency-openslo-1sloth_window:1d- record:slo:sli_error:ratio_rate3dexpr:|-( 1 - ( ( sum(rate(apiserver_request_duration_seconds_bucket{le=\u0026#34;5\u0026#34;,verb!=\u0026#34;WATCH\u0026#34;}[3d])) ) / ( sum(rate(apiserver_request_duration_seconds_count{verb!=\u0026#34;WATCH\u0026#34;}[3d])) ) ) )labels:cmd:examplesgen.shsloth_id:k8s-apiserver-requests-latency-openslo-1sloth_service:k8s-apiserversloth_slo:requests-latency-openslo-1sloth_window:3d- record:slo:sli_error:ratio_rate30dexpr:|sum_over_time(slo:sli_error:ratio_rate5m{sloth_id=\u0026#34;k8s-apiserver-requests-latency-openslo-1\u0026#34;, sloth_service=\u0026#34;k8s-apiserver\u0026#34;, sloth_slo=\u0026#34;requests-latency-openslo-1\u0026#34;}[30d]) / ignoring (sloth_window) count_over_time(slo:sli_error:ratio_rate5m{sloth_id=\u0026#34;k8s-apiserver-requests-latency-openslo-1\u0026#34;, sloth_service=\u0026#34;k8s-apiserver\u0026#34;, sloth_slo=\u0026#34;requests-latency-openslo-1\u0026#34;}[30d])labels:sloth_window:30d- name:sloth-slo-meta-recordings-k8s-apiserver-requests-latency-openslo-1rules:- record:slo:objective:ratioexpr:vector(0.9990000000000001)labels:cmd:examplesgen.shsloth_id:k8s-apiserver-requests-latency-openslo-1sloth_service:k8s-apiserversloth_slo:requests-latency-openslo-1- record:slo:error_budget:ratioexpr:vector(1-0.9990000000000001)labels:cmd:examplesgen.shsloth_id:k8s-apiserver-requests-latency-openslo-1sloth_service:k8s-apiserversloth_slo:requests-latency-openslo-1- record:slo:time_period:daysexpr:vector(30)labels:cmd:examplesgen.shsloth_id:k8s-apiserver-requests-latency-openslo-1sloth_service:k8s-apiserversloth_slo:requests-latency-openslo-1- record:slo:current_burn_rate:ratioexpr:|slo:sli_error:ratio_rate5m{sloth_id=\u0026#34;k8s-apiserver-requests-latency-openslo-1\u0026#34;, sloth_service=\u0026#34;k8s-apiserver\u0026#34;, sloth_slo=\u0026#34;requests-latency-openslo-1\u0026#34;} / on(sloth_id, sloth_slo, sloth_service) group_left slo:error_budget:ratio{sloth_id=\u0026#34;k8s-apiserver-requests-latency-openslo-1\u0026#34;, sloth_service=\u0026#34;k8s-apiserver\u0026#34;, sloth_slo=\u0026#34;requests-latency-openslo-1\u0026#34;}labels:cmd:examplesgen.shsloth_id:k8s-apiserver-requests-latency-openslo-1sloth_service:k8s-apiserversloth_slo:requests-latency-openslo-1- record:slo:period_burn_rate:ratioexpr:|slo:sli_error:ratio_rate30d{sloth_id=\u0026#34;k8s-apiserver-requests-latency-openslo-1\u0026#34;, sloth_service=\u0026#34;k8s-apiserver\u0026#34;, sloth_slo=\u0026#34;requests-latency-openslo-1\u0026#34;} / on(sloth_id, sloth_slo, sloth_service) group_left slo:error_budget:ratio{sloth_id=\u0026#34;k8s-apiserver-requests-latency-openslo-1\u0026#34;, sloth_service=\u0026#34;k8s-apiserver\u0026#34;, sloth_slo=\u0026#34;requests-latency-openslo-1\u0026#34;}labels:cmd:examplesgen.shsloth_id:k8s-apiserver-requests-latency-openslo-1sloth_service:k8s-apiserversloth_slo:requests-latency-openslo-1- record:slo:period_error_budget_remaining:ratioexpr:1- slo:period_burn_rate:ratio{sloth_id=\u0026#34;k8s-apiserver-requests-latency-openslo-1\u0026#34;,sloth_service=\u0026#34;k8s-apiserver\u0026#34;, sloth_slo=\u0026#34;requests-latency-openslo-1\u0026#34;}labels:cmd:examplesgen.shsloth_id:k8s-apiserver-requests-latency-openslo-1sloth_service:k8s-apiserversloth_slo:requests-latency-openslo-1- record:sloth_slo_infoexpr:vector(1)labels:cmd:examplesgen.shsloth_id:k8s-apiserver-requests-latency-openslo-1sloth_mode:cli-gen-openslosloth_objective:\u0026#34;99.9\u0026#34;sloth_service:k8s-apiserversloth_slo:requests-latency-openslo-1sloth_spec:openslo/v1alphasloth_version:dev   "},{"id":43,"href":"/examples/default/multifile/","title":"Multi file","parent":"Default","content":" SLO spec  ---version:\u0026#34;prometheus/v1\u0026#34;service:\u0026#34;myservice\u0026#34;labels:owner:\u0026#34;myteam\u0026#34;repo:\u0026#34;myorg/myservice\u0026#34;tier:\u0026#34;2\u0026#34;slos:# We allow failing (5xx and 429) 1 request every 1000 requests (99.9%).- name:\u0026#34;requests-availability\u0026#34;objective:99.9description:\u0026#34;Common SLO based on availability for HTTP request responses.\u0026#34;sli:events:error_query:sum(rate(http_request_duration_seconds_count{job=\u0026#34;myservice\u0026#34;,code=~\u0026#34;(5..|429)\u0026#34;}[{{.window}}]))total_query:sum(rate(http_request_duration_seconds_count{job=\u0026#34;myservice\u0026#34;}[{{.window}}]))alerting:name:MyServiceHighErrorRatelabels:category:\u0026#34;availability\u0026#34;annotations:# Overwrite default Sloth SLO alert summmary on ticket and page alerts.summary:\u0026#34;High error rate on \u0026#39;myservice\u0026#39; requests responses\u0026#34;page_alert:labels:severity:pageteamrouting_key:myteamticket_alert:labels:severity:\u0026#34;slack\u0026#34;slack_channel:\u0026#34;#alerts-myteam\u0026#34;---version:\u0026#34;prometheus/v1\u0026#34;service:\u0026#34;myservice2\u0026#34;labels:owner:\u0026#34;myteam2\u0026#34;repo:\u0026#34;myorg/myservice2\u0026#34;tier:\u0026#34;1\u0026#34;slos:# We allow failing (5xx and 429) 1 request every 1000 requests (99.9%).- name:\u0026#34;requests-availability\u0026#34;objective:99.99description:\u0026#34;Common SLO based on availability for HTTP request responses.\u0026#34;sli:events:error_query:sum(rate(http_request_duration_seconds_count{job=\u0026#34;myservice\u0026#34;,code=~\u0026#34;(5..|429)\u0026#34;}[{{.window}}]))total_query:sum(rate(http_request_duration_seconds_count{job=\u0026#34;myservice\u0026#34;}[{{.window}}]))alerting:name:MyServiceHighErrorRatelabels:category:\u0026#34;availability\u0026#34;annotations:# Overwrite default Sloth SLO alert summmary on ticket and page alerts.summary:\u0026#34;High error rate on \u0026#39;myservice\u0026#39; requests responses\u0026#34;page_alert:labels:severity:pageteamrouting_key:myteamticket_alert:labels:severity:\u0026#34;slack\u0026#34;slack_channel:\u0026#34;#alerts-myteam\u0026#34;  Generated  ---# Code generated by Sloth (dev): https://github.com/slok/sloth.# DO NOT EDIT.groups:- name:sloth-slo-sli-recordings-myservice-requests-availabilityrules:- record:slo:sli_error:ratio_rate5mexpr:|(sum(rate(http_request_duration_seconds_count{job=\u0026#34;myservice\u0026#34;,code=~\u0026#34;(5..|429)\u0026#34;}[5m]))) / (sum(rate(http_request_duration_seconds_count{job=\u0026#34;myservice\u0026#34;}[5m])))labels:cmd:examplesgen.showner:myteamrepo:myorg/myservicesloth_id:myservice-requests-availabilitysloth_service:myservicesloth_slo:requests-availabilitysloth_window:5mtier:\u0026#34;2\u0026#34;- record:slo:sli_error:ratio_rate30mexpr:|(sum(rate(http_request_duration_seconds_count{job=\u0026#34;myservice\u0026#34;,code=~\u0026#34;(5..|429)\u0026#34;}[30m]))) / (sum(rate(http_request_duration_seconds_count{job=\u0026#34;myservice\u0026#34;}[30m])))labels:cmd:examplesgen.showner:myteamrepo:myorg/myservicesloth_id:myservice-requests-availabilitysloth_service:myservicesloth_slo:requests-availabilitysloth_window:30mtier:\u0026#34;2\u0026#34;- record:slo:sli_error:ratio_rate1hexpr:|(sum(rate(http_request_duration_seconds_count{job=\u0026#34;myservice\u0026#34;,code=~\u0026#34;(5..|429)\u0026#34;}[1h]))) / (sum(rate(http_request_duration_seconds_count{job=\u0026#34;myservice\u0026#34;}[1h])))labels:cmd:examplesgen.showner:myteamrepo:myorg/myservicesloth_id:myservice-requests-availabilitysloth_service:myservicesloth_slo:requests-availabilitysloth_window:1htier:\u0026#34;2\u0026#34;- record:slo:sli_error:ratio_rate2hexpr:|(sum(rate(http_request_duration_seconds_count{job=\u0026#34;myservice\u0026#34;,code=~\u0026#34;(5..|429)\u0026#34;}[2h]))) / (sum(rate(http_request_duration_seconds_count{job=\u0026#34;myservice\u0026#34;}[2h])))labels:cmd:examplesgen.showner:myteamrepo:myorg/myservicesloth_id:myservice-requests-availabilitysloth_service:myservicesloth_slo:requests-availabilitysloth_window:2htier:\u0026#34;2\u0026#34;- record:slo:sli_error:ratio_rate6hexpr:|(sum(rate(http_request_duration_seconds_count{job=\u0026#34;myservice\u0026#34;,code=~\u0026#34;(5..|429)\u0026#34;}[6h]))) / (sum(rate(http_request_duration_seconds_count{job=\u0026#34;myservice\u0026#34;}[6h])))labels:cmd:examplesgen.showner:myteamrepo:myorg/myservicesloth_id:myservice-requests-availabilitysloth_service:myservicesloth_slo:requests-availabilitysloth_window:6htier:\u0026#34;2\u0026#34;- record:slo:sli_error:ratio_rate1dexpr:|(sum(rate(http_request_duration_seconds_count{job=\u0026#34;myservice\u0026#34;,code=~\u0026#34;(5..|429)\u0026#34;}[1d]))) / (sum(rate(http_request_duration_seconds_count{job=\u0026#34;myservice\u0026#34;}[1d])))labels:cmd:examplesgen.showner:myteamrepo:myorg/myservicesloth_id:myservice-requests-availabilitysloth_service:myservicesloth_slo:requests-availabilitysloth_window:1dtier:\u0026#34;2\u0026#34;- record:slo:sli_error:ratio_rate3dexpr:|(sum(rate(http_request_duration_seconds_count{job=\u0026#34;myservice\u0026#34;,code=~\u0026#34;(5..|429)\u0026#34;}[3d]))) / (sum(rate(http_request_duration_seconds_count{job=\u0026#34;myservice\u0026#34;}[3d])))labels:cmd:examplesgen.showner:myteamrepo:myorg/myservicesloth_id:myservice-requests-availabilitysloth_service:myservicesloth_slo:requests-availabilitysloth_window:3dtier:\u0026#34;2\u0026#34;- record:slo:sli_error:ratio_rate30dexpr:|sum_over_time(slo:sli_error:ratio_rate5m{sloth_id=\u0026#34;myservice-requests-availability\u0026#34;, sloth_service=\u0026#34;myservice\u0026#34;, sloth_slo=\u0026#34;requests-availability\u0026#34;}[30d]) / ignoring (sloth_window) count_over_time(slo:sli_error:ratio_rate5m{sloth_id=\u0026#34;myservice-requests-availability\u0026#34;, sloth_service=\u0026#34;myservice\u0026#34;, sloth_slo=\u0026#34;requests-availability\u0026#34;}[30d])labels:sloth_window:30d- name:sloth-slo-meta-recordings-myservice-requests-availabilityrules:- record:slo:objective:ratioexpr:vector(0.9990000000000001)labels:cmd:examplesgen.showner:myteamrepo:myorg/myservicesloth_id:myservice-requests-availabilitysloth_service:myservicesloth_slo:requests-availabilitytier:\u0026#34;2\u0026#34;- record:slo:error_budget:ratioexpr:vector(1-0.9990000000000001)labels:cmd:examplesgen.showner:myteamrepo:myorg/myservicesloth_id:myservice-requests-availabilitysloth_service:myservicesloth_slo:requests-availabilitytier:\u0026#34;2\u0026#34;- record:slo:time_period:daysexpr:vector(30)labels:cmd:examplesgen.showner:myteamrepo:myorg/myservicesloth_id:myservice-requests-availabilitysloth_service:myservicesloth_slo:requests-availabilitytier:\u0026#34;2\u0026#34;- record:slo:current_burn_rate:ratioexpr:|slo:sli_error:ratio_rate5m{sloth_id=\u0026#34;myservice-requests-availability\u0026#34;, sloth_service=\u0026#34;myservice\u0026#34;, sloth_slo=\u0026#34;requests-availability\u0026#34;} / on(sloth_id, sloth_slo, sloth_service) group_left slo:error_budget:ratio{sloth_id=\u0026#34;myservice-requests-availability\u0026#34;, sloth_service=\u0026#34;myservice\u0026#34;, sloth_slo=\u0026#34;requests-availability\u0026#34;}labels:cmd:examplesgen.showner:myteamrepo:myorg/myservicesloth_id:myservice-requests-availabilitysloth_service:myservicesloth_slo:requests-availabilitytier:\u0026#34;2\u0026#34;- record:slo:period_burn_rate:ratioexpr:|slo:sli_error:ratio_rate30d{sloth_id=\u0026#34;myservice-requests-availability\u0026#34;, sloth_service=\u0026#34;myservice\u0026#34;, sloth_slo=\u0026#34;requests-availability\u0026#34;} / on(sloth_id, sloth_slo, sloth_service) group_left slo:error_budget:ratio{sloth_id=\u0026#34;myservice-requests-availability\u0026#34;, sloth_service=\u0026#34;myservice\u0026#34;, sloth_slo=\u0026#34;requests-availability\u0026#34;}labels:cmd:examplesgen.showner:myteamrepo:myorg/myservicesloth_id:myservice-requests-availabilitysloth_service:myservicesloth_slo:requests-availabilitytier:\u0026#34;2\u0026#34;- record:slo:period_error_budget_remaining:ratioexpr:1- slo:period_burn_rate:ratio{sloth_id=\u0026#34;myservice-requests-availability\u0026#34;,sloth_service=\u0026#34;myservice\u0026#34;, sloth_slo=\u0026#34;requests-availability\u0026#34;}labels:cmd:examplesgen.showner:myteamrepo:myorg/myservicesloth_id:myservice-requests-availabilitysloth_service:myservicesloth_slo:requests-availabilitytier:\u0026#34;2\u0026#34;- record:sloth_slo_infoexpr:vector(1)labels:cmd:examplesgen.showner:myteamrepo:myorg/myservicesloth_id:myservice-requests-availabilitysloth_mode:cli-gen-promsloth_objective:\u0026#34;99.9\u0026#34;sloth_service:myservicesloth_slo:requests-availabilitysloth_spec:prometheus/v1sloth_version:devtier:\u0026#34;2\u0026#34;- name:sloth-slo-alerts-myservice-requests-availabilityrules:- alert:MyServiceHighErrorRateexpr:|( (slo:sli_error:ratio_rate5m{sloth_id=\u0026#34;myservice-requests-availability\u0026#34;, sloth_service=\u0026#34;myservice\u0026#34;, sloth_slo=\u0026#34;requests-availability\u0026#34;} \u0026gt; (14.4 * 0.0009999999999999432)) and ignoring (sloth_window) (slo:sli_error:ratio_rate1h{sloth_id=\u0026#34;myservice-requests-availability\u0026#34;, sloth_service=\u0026#34;myservice\u0026#34;, sloth_slo=\u0026#34;requests-availability\u0026#34;} \u0026gt; (14.4 * 0.0009999999999999432)) ) or ignoring (sloth_window) ( (slo:sli_error:ratio_rate30m{sloth_id=\u0026#34;myservice-requests-availability\u0026#34;, sloth_service=\u0026#34;myservice\u0026#34;, sloth_slo=\u0026#34;requests-availability\u0026#34;} \u0026gt; (6 * 0.0009999999999999432)) and ignoring (sloth_window) (slo:sli_error:ratio_rate6h{sloth_id=\u0026#34;myservice-requests-availability\u0026#34;, sloth_service=\u0026#34;myservice\u0026#34;, sloth_slo=\u0026#34;requests-availability\u0026#34;} \u0026gt; (6 * 0.0009999999999999432)) )labels:category:availabilityrouting_key:myteamseverity:pageteamsloth_severity:pageannotations:summary:High error rate on \u0026#39;myservice\u0026#39; requests responsestitle:(page) {{$labels.sloth_service}} {{$labels.sloth_slo}} SLO error budgetburn rate is too fast.- alert:MyServiceHighErrorRateexpr:|( (slo:sli_error:ratio_rate2h{sloth_id=\u0026#34;myservice-requests-availability\u0026#34;, sloth_service=\u0026#34;myservice\u0026#34;, sloth_slo=\u0026#34;requests-availability\u0026#34;} \u0026gt; (3 * 0.0009999999999999432)) and ignoring (sloth_window) (slo:sli_error:ratio_rate1d{sloth_id=\u0026#34;myservice-requests-availability\u0026#34;, sloth_service=\u0026#34;myservice\u0026#34;, sloth_slo=\u0026#34;requests-availability\u0026#34;} \u0026gt; (3 * 0.0009999999999999432)) ) or ignoring (sloth_window) ( (slo:sli_error:ratio_rate6h{sloth_id=\u0026#34;myservice-requests-availability\u0026#34;, sloth_service=\u0026#34;myservice\u0026#34;, sloth_slo=\u0026#34;requests-availability\u0026#34;} \u0026gt; (1 * 0.0009999999999999432)) and ignoring (sloth_window) (slo:sli_error:ratio_rate3d{sloth_id=\u0026#34;myservice-requests-availability\u0026#34;, sloth_service=\u0026#34;myservice\u0026#34;, sloth_slo=\u0026#34;requests-availability\u0026#34;} \u0026gt; (1 * 0.0009999999999999432)) )labels:category:availabilityseverity:slackslack_channel:\u0026#39;#alerts-myteam\u0026#39;sloth_severity:ticketannotations:summary:High error rate on \u0026#39;myservice\u0026#39; requests responsestitle:(ticket) {{$labels.sloth_service}} {{$labels.sloth_slo}} SLO error budgetburn rate is too fast.---# Code generated by Sloth (dev): https://github.com/slok/sloth.# DO NOT EDIT.groups:- name:sloth-slo-sli-recordings-myservice2-requests-availabilityrules:- record:slo:sli_error:ratio_rate5mexpr:|(sum(rate(http_request_duration_seconds_count{job=\u0026#34;myservice\u0026#34;,code=~\u0026#34;(5..|429)\u0026#34;}[5m]))) / (sum(rate(http_request_duration_seconds_count{job=\u0026#34;myservice\u0026#34;}[5m])))labels:cmd:examplesgen.showner:myteam2repo:myorg/myservice2sloth_id:myservice2-requests-availabilitysloth_service:myservice2sloth_slo:requests-availabilitysloth_window:5mtier:\u0026#34;1\u0026#34;- record:slo:sli_error:ratio_rate30mexpr:|(sum(rate(http_request_duration_seconds_count{job=\u0026#34;myservice\u0026#34;,code=~\u0026#34;(5..|429)\u0026#34;}[30m]))) / (sum(rate(http_request_duration_seconds_count{job=\u0026#34;myservice\u0026#34;}[30m])))labels:cmd:examplesgen.showner:myteam2repo:myorg/myservice2sloth_id:myservice2-requests-availabilitysloth_service:myservice2sloth_slo:requests-availabilitysloth_window:30mtier:\u0026#34;1\u0026#34;- record:slo:sli_error:ratio_rate1hexpr:|(sum(rate(http_request_duration_seconds_count{job=\u0026#34;myservice\u0026#34;,code=~\u0026#34;(5..|429)\u0026#34;}[1h]))) / (sum(rate(http_request_duration_seconds_count{job=\u0026#34;myservice\u0026#34;}[1h])))labels:cmd:examplesgen.showner:myteam2repo:myorg/myservice2sloth_id:myservice2-requests-availabilitysloth_service:myservice2sloth_slo:requests-availabilitysloth_window:1htier:\u0026#34;1\u0026#34;- record:slo:sli_error:ratio_rate2hexpr:|(sum(rate(http_request_duration_seconds_count{job=\u0026#34;myservice\u0026#34;,code=~\u0026#34;(5..|429)\u0026#34;}[2h]))) / (sum(rate(http_request_duration_seconds_count{job=\u0026#34;myservice\u0026#34;}[2h])))labels:cmd:examplesgen.showner:myteam2repo:myorg/myservice2sloth_id:myservice2-requests-availabilitysloth_service:myservice2sloth_slo:requests-availabilitysloth_window:2htier:\u0026#34;1\u0026#34;- record:slo:sli_error:ratio_rate6hexpr:|(sum(rate(http_request_duration_seconds_count{job=\u0026#34;myservice\u0026#34;,code=~\u0026#34;(5..|429)\u0026#34;}[6h]))) / (sum(rate(http_request_duration_seconds_count{job=\u0026#34;myservice\u0026#34;}[6h])))labels:cmd:examplesgen.showner:myteam2repo:myorg/myservice2sloth_id:myservice2-requests-availabilitysloth_service:myservice2sloth_slo:requests-availabilitysloth_window:6htier:\u0026#34;1\u0026#34;- record:slo:sli_error:ratio_rate1dexpr:|(sum(rate(http_request_duration_seconds_count{job=\u0026#34;myservice\u0026#34;,code=~\u0026#34;(5..|429)\u0026#34;}[1d]))) / (sum(rate(http_request_duration_seconds_count{job=\u0026#34;myservice\u0026#34;}[1d])))labels:cmd:examplesgen.showner:myteam2repo:myorg/myservice2sloth_id:myservice2-requests-availabilitysloth_service:myservice2sloth_slo:requests-availabilitysloth_window:1dtier:\u0026#34;1\u0026#34;- record:slo:sli_error:ratio_rate3dexpr:|(sum(rate(http_request_duration_seconds_count{job=\u0026#34;myservice\u0026#34;,code=~\u0026#34;(5..|429)\u0026#34;}[3d]))) / (sum(rate(http_request_duration_seconds_count{job=\u0026#34;myservice\u0026#34;}[3d])))labels:cmd:examplesgen.showner:myteam2repo:myorg/myservice2sloth_id:myservice2-requests-availabilitysloth_service:myservice2sloth_slo:requests-availabilitysloth_window:3dtier:\u0026#34;1\u0026#34;- record:slo:sli_error:ratio_rate30dexpr:|sum_over_time(slo:sli_error:ratio_rate5m{sloth_id=\u0026#34;myservice2-requests-availability\u0026#34;, sloth_service=\u0026#34;myservice2\u0026#34;, sloth_slo=\u0026#34;requests-availability\u0026#34;}[30d]) / ignoring (sloth_window) count_over_time(slo:sli_error:ratio_rate5m{sloth_id=\u0026#34;myservice2-requests-availability\u0026#34;, sloth_service=\u0026#34;myservice2\u0026#34;, sloth_slo=\u0026#34;requests-availability\u0026#34;}[30d])labels:sloth_window:30d- name:sloth-slo-meta-recordings-myservice2-requests-availabilityrules:- record:slo:objective:ratioexpr:vector(0.9998999999999999)labels:cmd:examplesgen.showner:myteam2repo:myorg/myservice2sloth_id:myservice2-requests-availabilitysloth_service:myservice2sloth_slo:requests-availabilitytier:\u0026#34;1\u0026#34;- record:slo:error_budget:ratioexpr:vector(1-0.9998999999999999)labels:cmd:examplesgen.showner:myteam2repo:myorg/myservice2sloth_id:myservice2-requests-availabilitysloth_service:myservice2sloth_slo:requests-availabilitytier:\u0026#34;1\u0026#34;- record:slo:time_period:daysexpr:vector(30)labels:cmd:examplesgen.showner:myteam2repo:myorg/myservice2sloth_id:myservice2-requests-availabilitysloth_service:myservice2sloth_slo:requests-availabilitytier:\u0026#34;1\u0026#34;- record:slo:current_burn_rate:ratioexpr:|slo:sli_error:ratio_rate5m{sloth_id=\u0026#34;myservice2-requests-availability\u0026#34;, sloth_service=\u0026#34;myservice2\u0026#34;, sloth_slo=\u0026#34;requests-availability\u0026#34;} / on(sloth_id, sloth_slo, sloth_service) group_left slo:error_budget:ratio{sloth_id=\u0026#34;myservice2-requests-availability\u0026#34;, sloth_service=\u0026#34;myservice2\u0026#34;, sloth_slo=\u0026#34;requests-availability\u0026#34;}labels:cmd:examplesgen.showner:myteam2repo:myorg/myservice2sloth_id:myservice2-requests-availabilitysloth_service:myservice2sloth_slo:requests-availabilitytier:\u0026#34;1\u0026#34;- record:slo:period_burn_rate:ratioexpr:|slo:sli_error:ratio_rate30d{sloth_id=\u0026#34;myservice2-requests-availability\u0026#34;, sloth_service=\u0026#34;myservice2\u0026#34;, sloth_slo=\u0026#34;requests-availability\u0026#34;} / on(sloth_id, sloth_slo, sloth_service) group_left slo:error_budget:ratio{sloth_id=\u0026#34;myservice2-requests-availability\u0026#34;, sloth_service=\u0026#34;myservice2\u0026#34;, sloth_slo=\u0026#34;requests-availability\u0026#34;}labels:cmd:examplesgen.showner:myteam2repo:myorg/myservice2sloth_id:myservice2-requests-availabilitysloth_service:myservice2sloth_slo:requests-availabilitytier:\u0026#34;1\u0026#34;- record:slo:period_error_budget_remaining:ratioexpr:1- slo:period_burn_rate:ratio{sloth_id=\u0026#34;myservice2-requests-availability\u0026#34;,sloth_service=\u0026#34;myservice2\u0026#34;, sloth_slo=\u0026#34;requests-availability\u0026#34;}labels:cmd:examplesgen.showner:myteam2repo:myorg/myservice2sloth_id:myservice2-requests-availabilitysloth_service:myservice2sloth_slo:requests-availabilitytier:\u0026#34;1\u0026#34;- record:sloth_slo_infoexpr:vector(1)labels:cmd:examplesgen.showner:myteam2repo:myorg/myservice2sloth_id:myservice2-requests-availabilitysloth_mode:cli-gen-promsloth_objective:\u0026#34;99.99\u0026#34;sloth_service:myservice2sloth_slo:requests-availabilitysloth_spec:prometheus/v1sloth_version:devtier:\u0026#34;1\u0026#34;- name:sloth-slo-alerts-myservice2-requests-availabilityrules:- alert:MyServiceHighErrorRateexpr:|( (slo:sli_error:ratio_rate5m{sloth_id=\u0026#34;myservice2-requests-availability\u0026#34;, sloth_service=\u0026#34;myservice2\u0026#34;, sloth_slo=\u0026#34;requests-availability\u0026#34;} \u0026gt; (14.4 * 0.00010000000000005117)) and ignoring (sloth_window) (slo:sli_error:ratio_rate1h{sloth_id=\u0026#34;myservice2-requests-availability\u0026#34;, sloth_service=\u0026#34;myservice2\u0026#34;, sloth_slo=\u0026#34;requests-availability\u0026#34;} \u0026gt; (14.4 * 0.00010000000000005117)) ) or ignoring (sloth_window) ( (slo:sli_error:ratio_rate30m{sloth_id=\u0026#34;myservice2-requests-availability\u0026#34;, sloth_service=\u0026#34;myservice2\u0026#34;, sloth_slo=\u0026#34;requests-availability\u0026#34;} \u0026gt; (6 * 0.00010000000000005117)) and ignoring (sloth_window) (slo:sli_error:ratio_rate6h{sloth_id=\u0026#34;myservice2-requests-availability\u0026#34;, sloth_service=\u0026#34;myservice2\u0026#34;, sloth_slo=\u0026#34;requests-availability\u0026#34;} \u0026gt; (6 * 0.00010000000000005117)) )labels:category:availabilityrouting_key:myteamseverity:pageteamsloth_severity:pageannotations:summary:High error rate on \u0026#39;myservice\u0026#39; requests responsestitle:(page) {{$labels.sloth_service}} {{$labels.sloth_slo}} SLO error budgetburn rate is too fast.- alert:MyServiceHighErrorRateexpr:|( (slo:sli_error:ratio_rate2h{sloth_id=\u0026#34;myservice2-requests-availability\u0026#34;, sloth_service=\u0026#34;myservice2\u0026#34;, sloth_slo=\u0026#34;requests-availability\u0026#34;} \u0026gt; (3 * 0.00010000000000005117)) and ignoring (sloth_window) (slo:sli_error:ratio_rate1d{sloth_id=\u0026#34;myservice2-requests-availability\u0026#34;, sloth_service=\u0026#34;myservice2\u0026#34;, sloth_slo=\u0026#34;requests-availability\u0026#34;} \u0026gt; (3 * 0.00010000000000005117)) ) or ignoring (sloth_window) ( (slo:sli_error:ratio_rate6h{sloth_id=\u0026#34;myservice2-requests-availability\u0026#34;, sloth_service=\u0026#34;myservice2\u0026#34;, sloth_slo=\u0026#34;requests-availability\u0026#34;} \u0026gt; (1 * 0.00010000000000005117)) and ignoring (sloth_window) (slo:sli_error:ratio_rate3d{sloth_id=\u0026#34;myservice2-requests-availability\u0026#34;, sloth_service=\u0026#34;myservice2\u0026#34;, sloth_slo=\u0026#34;requests-availability\u0026#34;} \u0026gt; (1 * 0.00010000000000005117)) )labels:category:availabilityseverity:slackslack_channel:\u0026#39;#alerts-myteam\u0026#39;sloth_severity:ticketannotations:summary:High error rate on \u0026#39;myservice\u0026#39; requests responsestitle:(ticket) {{$labels.sloth_service}} {{$labels.sloth_slo}} SLO error budgetburn rate is too fast.   "},{"id":44,"href":"/examples/kubernetes/multifile/","title":"Multi file","parent":"Kubernetes","content":" SLO spec  ---# This example shows the same example as getting-started.yml but using Sloth Kubernetes CRD and multifile.# It will generate the Prometheus rules in a Kubernetes prometheus-operator PrometheusRules CRD.## `sloth generate -i ./examples/k8s-multifile.yml`#apiVersion:sloth.slok.dev/v1kind:PrometheusServiceLevelmetadata:name:sloth-slo-my-servicenamespace:monitoringspec:service:\u0026#34;myservice\u0026#34;labels:owner:\u0026#34;myteam\u0026#34;repo:\u0026#34;myorg/myservice\u0026#34;tier:\u0026#34;2\u0026#34;slos:- name:\u0026#34;requests-availability\u0026#34;objective:99.9description:\u0026#34;Common SLO based on availability for HTTP request responses.\u0026#34;sli:events:errorQuery:sum(rate(http_request_duration_seconds_count{job=\u0026#34;myservice\u0026#34;,code=~\u0026#34;(5..|429)\u0026#34;}[{{.window}}]))totalQuery:sum(rate(http_request_duration_seconds_count{job=\u0026#34;myservice\u0026#34;}[{{.window}}]))alerting:name:MyServiceHighErrorRatelabels:category:\u0026#34;availability\u0026#34;annotations:summary:\u0026#34;High error rate on \u0026#39;myservice\u0026#39; requests responses\u0026#34;pageAlert:labels:severity:pageteamrouting_key:myteamticketAlert:labels:severity:\u0026#34;slack\u0026#34;slack_channel:\u0026#34;#alerts-myteam\u0026#34;---apiVersion:sloth.slok.dev/v1kind:PrometheusServiceLevelmetadata:name:sloth-slo-my-service2namespace:monitoringspec:service:\u0026#34;myservice2\u0026#34;labels:owner:\u0026#34;myteam2\u0026#34;repo:\u0026#34;myorg/myservice2\u0026#34;tier:\u0026#34;1\u0026#34;slos:- name:\u0026#34;requests-availability\u0026#34;objective:99.99description:\u0026#34;Common SLO based on availability for HTTP request responses.\u0026#34;sli:events:errorQuery:sum(rate(http_request_duration_seconds_count{job=\u0026#34;myservice\u0026#34;,code=~\u0026#34;(5..|429)\u0026#34;}[{{.window}}]))totalQuery:sum(rate(http_request_duration_seconds_count{job=\u0026#34;myservice\u0026#34;}[{{.window}}]))alerting:name:MyServiceHighErrorRatelabels:category:\u0026#34;availability\u0026#34;annotations:summary:\u0026#34;High error rate on \u0026#39;myservice\u0026#39; requests responses\u0026#34;pageAlert:labels:severity:pageteamrouting_key:myteamticketAlert:labels:severity:\u0026#34;slack\u0026#34;slack_channel:\u0026#34;#alerts-myteam\u0026#34;  Generated  ---# Code generated by Sloth (dev): https://github.com/slok/sloth.# DO NOT EDIT.apiVersion:monitoring.coreos.com/v1kind:PrometheusRulemetadata:creationTimestamp:nulllabels:app.kubernetes.io/component:SLOapp.kubernetes.io/managed-by:slothname:sloth-slo-my-servicenamespace:monitoringspec:groups:- name:sloth-slo-sli-recordings-myservice-requests-availabilityrules:- expr:|(sum(rate(http_request_duration_seconds_count{job=\u0026#34;myservice\u0026#34;,code=~\u0026#34;(5..|429)\u0026#34;}[5m]))) / (sum(rate(http_request_duration_seconds_count{job=\u0026#34;myservice\u0026#34;}[5m])))labels:cmd:examplesgen.showner:myteamrepo:myorg/myservicesloth_id:myservice-requests-availabilitysloth_service:myservicesloth_slo:requests-availabilitysloth_window:5mtier:\u0026#34;2\u0026#34;record:slo:sli_error:ratio_rate5m- expr:|(sum(rate(http_request_duration_seconds_count{job=\u0026#34;myservice\u0026#34;,code=~\u0026#34;(5..|429)\u0026#34;}[30m]))) / (sum(rate(http_request_duration_seconds_count{job=\u0026#34;myservice\u0026#34;}[30m])))labels:cmd:examplesgen.showner:myteamrepo:myorg/myservicesloth_id:myservice-requests-availabilitysloth_service:myservicesloth_slo:requests-availabilitysloth_window:30mtier:\u0026#34;2\u0026#34;record:slo:sli_error:ratio_rate30m- expr:|(sum(rate(http_request_duration_seconds_count{job=\u0026#34;myservice\u0026#34;,code=~\u0026#34;(5..|429)\u0026#34;}[1h]))) / (sum(rate(http_request_duration_seconds_count{job=\u0026#34;myservice\u0026#34;}[1h])))labels:cmd:examplesgen.showner:myteamrepo:myorg/myservicesloth_id:myservice-requests-availabilitysloth_service:myservicesloth_slo:requests-availabilitysloth_window:1htier:\u0026#34;2\u0026#34;record:slo:sli_error:ratio_rate1h- expr:|(sum(rate(http_request_duration_seconds_count{job=\u0026#34;myservice\u0026#34;,code=~\u0026#34;(5..|429)\u0026#34;}[2h]))) / (sum(rate(http_request_duration_seconds_count{job=\u0026#34;myservice\u0026#34;}[2h])))labels:cmd:examplesgen.showner:myteamrepo:myorg/myservicesloth_id:myservice-requests-availabilitysloth_service:myservicesloth_slo:requests-availabilitysloth_window:2htier:\u0026#34;2\u0026#34;record:slo:sli_error:ratio_rate2h- expr:|(sum(rate(http_request_duration_seconds_count{job=\u0026#34;myservice\u0026#34;,code=~\u0026#34;(5..|429)\u0026#34;}[6h]))) / (sum(rate(http_request_duration_seconds_count{job=\u0026#34;myservice\u0026#34;}[6h])))labels:cmd:examplesgen.showner:myteamrepo:myorg/myservicesloth_id:myservice-requests-availabilitysloth_service:myservicesloth_slo:requests-availabilitysloth_window:6htier:\u0026#34;2\u0026#34;record:slo:sli_error:ratio_rate6h- expr:|(sum(rate(http_request_duration_seconds_count{job=\u0026#34;myservice\u0026#34;,code=~\u0026#34;(5..|429)\u0026#34;}[1d]))) / (sum(rate(http_request_duration_seconds_count{job=\u0026#34;myservice\u0026#34;}[1d])))labels:cmd:examplesgen.showner:myteamrepo:myorg/myservicesloth_id:myservice-requests-availabilitysloth_service:myservicesloth_slo:requests-availabilitysloth_window:1dtier:\u0026#34;2\u0026#34;record:slo:sli_error:ratio_rate1d- expr:|(sum(rate(http_request_duration_seconds_count{job=\u0026#34;myservice\u0026#34;,code=~\u0026#34;(5..|429)\u0026#34;}[3d]))) / (sum(rate(http_request_duration_seconds_count{job=\u0026#34;myservice\u0026#34;}[3d])))labels:cmd:examplesgen.showner:myteamrepo:myorg/myservicesloth_id:myservice-requests-availabilitysloth_service:myservicesloth_slo:requests-availabilitysloth_window:3dtier:\u0026#34;2\u0026#34;record:slo:sli_error:ratio_rate3d- expr:|sum_over_time(slo:sli_error:ratio_rate5m{sloth_id=\u0026#34;myservice-requests-availability\u0026#34;, sloth_service=\u0026#34;myservice\u0026#34;, sloth_slo=\u0026#34;requests-availability\u0026#34;}[30d]) / ignoring (sloth_window) count_over_time(slo:sli_error:ratio_rate5m{sloth_id=\u0026#34;myservice-requests-availability\u0026#34;, sloth_service=\u0026#34;myservice\u0026#34;, sloth_slo=\u0026#34;requests-availability\u0026#34;}[30d])labels:sloth_window:30drecord:slo:sli_error:ratio_rate30d- name:sloth-slo-meta-recordings-myservice-requests-availabilityrules:- expr:vector(0.9990000000000001)labels:cmd:examplesgen.showner:myteamrepo:myorg/myservicesloth_id:myservice-requests-availabilitysloth_service:myservicesloth_slo:requests-availabilitytier:\u0026#34;2\u0026#34;record:slo:objective:ratio- expr:vector(1-0.9990000000000001)labels:cmd:examplesgen.showner:myteamrepo:myorg/myservicesloth_id:myservice-requests-availabilitysloth_service:myservicesloth_slo:requests-availabilitytier:\u0026#34;2\u0026#34;record:slo:error_budget:ratio- expr:vector(30)labels:cmd:examplesgen.showner:myteamrepo:myorg/myservicesloth_id:myservice-requests-availabilitysloth_service:myservicesloth_slo:requests-availabilitytier:\u0026#34;2\u0026#34;record:slo:time_period:days- expr:|slo:sli_error:ratio_rate5m{sloth_id=\u0026#34;myservice-requests-availability\u0026#34;, sloth_service=\u0026#34;myservice\u0026#34;, sloth_slo=\u0026#34;requests-availability\u0026#34;} / on(sloth_id, sloth_slo, sloth_service) group_left slo:error_budget:ratio{sloth_id=\u0026#34;myservice-requests-availability\u0026#34;, sloth_service=\u0026#34;myservice\u0026#34;, sloth_slo=\u0026#34;requests-availability\u0026#34;}labels:cmd:examplesgen.showner:myteamrepo:myorg/myservicesloth_id:myservice-requests-availabilitysloth_service:myservicesloth_slo:requests-availabilitytier:\u0026#34;2\u0026#34;record:slo:current_burn_rate:ratio- expr:|slo:sli_error:ratio_rate30d{sloth_id=\u0026#34;myservice-requests-availability\u0026#34;, sloth_service=\u0026#34;myservice\u0026#34;, sloth_slo=\u0026#34;requests-availability\u0026#34;} / on(sloth_id, sloth_slo, sloth_service) group_left slo:error_budget:ratio{sloth_id=\u0026#34;myservice-requests-availability\u0026#34;, sloth_service=\u0026#34;myservice\u0026#34;, sloth_slo=\u0026#34;requests-availability\u0026#34;}labels:cmd:examplesgen.showner:myteamrepo:myorg/myservicesloth_id:myservice-requests-availabilitysloth_service:myservicesloth_slo:requests-availabilitytier:\u0026#34;2\u0026#34;record:slo:period_burn_rate:ratio- expr:1- slo:period_burn_rate:ratio{sloth_id=\u0026#34;myservice-requests-availability\u0026#34;,sloth_service=\u0026#34;myservice\u0026#34;, sloth_slo=\u0026#34;requests-availability\u0026#34;}labels:cmd:examplesgen.showner:myteamrepo:myorg/myservicesloth_id:myservice-requests-availabilitysloth_service:myservicesloth_slo:requests-availabilitytier:\u0026#34;2\u0026#34;record:slo:period_error_budget_remaining:ratio- expr:vector(1)labels:cmd:examplesgen.showner:myteamrepo:myorg/myservicesloth_id:myservice-requests-availabilitysloth_mode:cli-gen-k8ssloth_objective:\u0026#34;99.9\u0026#34;sloth_service:myservicesloth_slo:requests-availabilitysloth_spec:sloth.slok.dev/v1sloth_version:devtier:\u0026#34;2\u0026#34;record:sloth_slo_info- name:sloth-slo-alerts-myservice-requests-availabilityrules:- alert:MyServiceHighErrorRateannotations:summary:High error rate on \u0026#39;myservice\u0026#39; requests responsestitle:(page) {{$labels.sloth_service}} {{$labels.sloth_slo}} SLO error budgetburn rate is too fast.expr:|( (slo:sli_error:ratio_rate5m{sloth_id=\u0026#34;myservice-requests-availability\u0026#34;, sloth_service=\u0026#34;myservice\u0026#34;, sloth_slo=\u0026#34;requests-availability\u0026#34;} \u0026gt; (14.4 * 0.0009999999999999432)) and ignoring (sloth_window) (slo:sli_error:ratio_rate1h{sloth_id=\u0026#34;myservice-requests-availability\u0026#34;, sloth_service=\u0026#34;myservice\u0026#34;, sloth_slo=\u0026#34;requests-availability\u0026#34;} \u0026gt; (14.4 * 0.0009999999999999432)) ) or ignoring (sloth_window) ( (slo:sli_error:ratio_rate30m{sloth_id=\u0026#34;myservice-requests-availability\u0026#34;, sloth_service=\u0026#34;myservice\u0026#34;, sloth_slo=\u0026#34;requests-availability\u0026#34;} \u0026gt; (6 * 0.0009999999999999432)) and ignoring (sloth_window) (slo:sli_error:ratio_rate6h{sloth_id=\u0026#34;myservice-requests-availability\u0026#34;, sloth_service=\u0026#34;myservice\u0026#34;, sloth_slo=\u0026#34;requests-availability\u0026#34;} \u0026gt; (6 * 0.0009999999999999432)) )labels:category:availabilityrouting_key:myteamseverity:pageteamsloth_severity:page- alert:MyServiceHighErrorRateannotations:summary:High error rate on \u0026#39;myservice\u0026#39; requests responsestitle:(ticket) {{$labels.sloth_service}} {{$labels.sloth_slo}} SLO errorbudget burn rate is too fast.expr:|( (slo:sli_error:ratio_rate2h{sloth_id=\u0026#34;myservice-requests-availability\u0026#34;, sloth_service=\u0026#34;myservice\u0026#34;, sloth_slo=\u0026#34;requests-availability\u0026#34;} \u0026gt; (3 * 0.0009999999999999432)) and ignoring (sloth_window) (slo:sli_error:ratio_rate1d{sloth_id=\u0026#34;myservice-requests-availability\u0026#34;, sloth_service=\u0026#34;myservice\u0026#34;, sloth_slo=\u0026#34;requests-availability\u0026#34;} \u0026gt; (3 * 0.0009999999999999432)) ) or ignoring (sloth_window) ( (slo:sli_error:ratio_rate6h{sloth_id=\u0026#34;myservice-requests-availability\u0026#34;, sloth_service=\u0026#34;myservice\u0026#34;, sloth_slo=\u0026#34;requests-availability\u0026#34;} \u0026gt; (1 * 0.0009999999999999432)) and ignoring (sloth_window) (slo:sli_error:ratio_rate3d{sloth_id=\u0026#34;myservice-requests-availability\u0026#34;, sloth_service=\u0026#34;myservice\u0026#34;, sloth_slo=\u0026#34;requests-availability\u0026#34;} \u0026gt; (1 * 0.0009999999999999432)) )labels:category:availabilityseverity:slackslack_channel:\u0026#39;#alerts-myteam\u0026#39;sloth_severity:ticket---# Code generated by Sloth (dev): https://github.com/slok/sloth.# DO NOT EDIT.apiVersion:monitoring.coreos.com/v1kind:PrometheusRulemetadata:creationTimestamp:nulllabels:app.kubernetes.io/component:SLOapp.kubernetes.io/managed-by:slothname:sloth-slo-my-service2namespace:monitoringspec:groups:- name:sloth-slo-sli-recordings-myservice2-requests-availabilityrules:- expr:|(sum(rate(http_request_duration_seconds_count{job=\u0026#34;myservice\u0026#34;,code=~\u0026#34;(5..|429)\u0026#34;}[5m]))) / (sum(rate(http_request_duration_seconds_count{job=\u0026#34;myservice\u0026#34;}[5m])))labels:cmd:examplesgen.showner:myteam2repo:myorg/myservice2sloth_id:myservice2-requests-availabilitysloth_service:myservice2sloth_slo:requests-availabilitysloth_window:5mtier:\u0026#34;1\u0026#34;record:slo:sli_error:ratio_rate5m- expr:|(sum(rate(http_request_duration_seconds_count{job=\u0026#34;myservice\u0026#34;,code=~\u0026#34;(5..|429)\u0026#34;}[30m]))) / (sum(rate(http_request_duration_seconds_count{job=\u0026#34;myservice\u0026#34;}[30m])))labels:cmd:examplesgen.showner:myteam2repo:myorg/myservice2sloth_id:myservice2-requests-availabilitysloth_service:myservice2sloth_slo:requests-availabilitysloth_window:30mtier:\u0026#34;1\u0026#34;record:slo:sli_error:ratio_rate30m- expr:|(sum(rate(http_request_duration_seconds_count{job=\u0026#34;myservice\u0026#34;,code=~\u0026#34;(5..|429)\u0026#34;}[1h]))) / (sum(rate(http_request_duration_seconds_count{job=\u0026#34;myservice\u0026#34;}[1h])))labels:cmd:examplesgen.showner:myteam2repo:myorg/myservice2sloth_id:myservice2-requests-availabilitysloth_service:myservice2sloth_slo:requests-availabilitysloth_window:1htier:\u0026#34;1\u0026#34;record:slo:sli_error:ratio_rate1h- expr:|(sum(rate(http_request_duration_seconds_count{job=\u0026#34;myservice\u0026#34;,code=~\u0026#34;(5..|429)\u0026#34;}[2h]))) / (sum(rate(http_request_duration_seconds_count{job=\u0026#34;myservice\u0026#34;}[2h])))labels:cmd:examplesgen.showner:myteam2repo:myorg/myservice2sloth_id:myservice2-requests-availabilitysloth_service:myservice2sloth_slo:requests-availabilitysloth_window:2htier:\u0026#34;1\u0026#34;record:slo:sli_error:ratio_rate2h- expr:|(sum(rate(http_request_duration_seconds_count{job=\u0026#34;myservice\u0026#34;,code=~\u0026#34;(5..|429)\u0026#34;}[6h]))) / (sum(rate(http_request_duration_seconds_count{job=\u0026#34;myservice\u0026#34;}[6h])))labels:cmd:examplesgen.showner:myteam2repo:myorg/myservice2sloth_id:myservice2-requests-availabilitysloth_service:myservice2sloth_slo:requests-availabilitysloth_window:6htier:\u0026#34;1\u0026#34;record:slo:sli_error:ratio_rate6h- expr:|(sum(rate(http_request_duration_seconds_count{job=\u0026#34;myservice\u0026#34;,code=~\u0026#34;(5..|429)\u0026#34;}[1d]))) / (sum(rate(http_request_duration_seconds_count{job=\u0026#34;myservice\u0026#34;}[1d])))labels:cmd:examplesgen.showner:myteam2repo:myorg/myservice2sloth_id:myservice2-requests-availabilitysloth_service:myservice2sloth_slo:requests-availabilitysloth_window:1dtier:\u0026#34;1\u0026#34;record:slo:sli_error:ratio_rate1d- expr:|(sum(rate(http_request_duration_seconds_count{job=\u0026#34;myservice\u0026#34;,code=~\u0026#34;(5..|429)\u0026#34;}[3d]))) / (sum(rate(http_request_duration_seconds_count{job=\u0026#34;myservice\u0026#34;}[3d])))labels:cmd:examplesgen.showner:myteam2repo:myorg/myservice2sloth_id:myservice2-requests-availabilitysloth_service:myservice2sloth_slo:requests-availabilitysloth_window:3dtier:\u0026#34;1\u0026#34;record:slo:sli_error:ratio_rate3d- expr:|sum_over_time(slo:sli_error:ratio_rate5m{sloth_id=\u0026#34;myservice2-requests-availability\u0026#34;, sloth_service=\u0026#34;myservice2\u0026#34;, sloth_slo=\u0026#34;requests-availability\u0026#34;}[30d]) / ignoring (sloth_window) count_over_time(slo:sli_error:ratio_rate5m{sloth_id=\u0026#34;myservice2-requests-availability\u0026#34;, sloth_service=\u0026#34;myservice2\u0026#34;, sloth_slo=\u0026#34;requests-availability\u0026#34;}[30d])labels:sloth_window:30drecord:slo:sli_error:ratio_rate30d- name:sloth-slo-meta-recordings-myservice2-requests-availabilityrules:- expr:vector(0.9998999999999999)labels:cmd:examplesgen.showner:myteam2repo:myorg/myservice2sloth_id:myservice2-requests-availabilitysloth_service:myservice2sloth_slo:requests-availabilitytier:\u0026#34;1\u0026#34;record:slo:objective:ratio- expr:vector(1-0.9998999999999999)labels:cmd:examplesgen.showner:myteam2repo:myorg/myservice2sloth_id:myservice2-requests-availabilitysloth_service:myservice2sloth_slo:requests-availabilitytier:\u0026#34;1\u0026#34;record:slo:error_budget:ratio- expr:vector(30)labels:cmd:examplesgen.showner:myteam2repo:myorg/myservice2sloth_id:myservice2-requests-availabilitysloth_service:myservice2sloth_slo:requests-availabilitytier:\u0026#34;1\u0026#34;record:slo:time_period:days- expr:|slo:sli_error:ratio_rate5m{sloth_id=\u0026#34;myservice2-requests-availability\u0026#34;, sloth_service=\u0026#34;myservice2\u0026#34;, sloth_slo=\u0026#34;requests-availability\u0026#34;} / on(sloth_id, sloth_slo, sloth_service) group_left slo:error_budget:ratio{sloth_id=\u0026#34;myservice2-requests-availability\u0026#34;, sloth_service=\u0026#34;myservice2\u0026#34;, sloth_slo=\u0026#34;requests-availability\u0026#34;}labels:cmd:examplesgen.showner:myteam2repo:myorg/myservice2sloth_id:myservice2-requests-availabilitysloth_service:myservice2sloth_slo:requests-availabilitytier:\u0026#34;1\u0026#34;record:slo:current_burn_rate:ratio- expr:|slo:sli_error:ratio_rate30d{sloth_id=\u0026#34;myservice2-requests-availability\u0026#34;, sloth_service=\u0026#34;myservice2\u0026#34;, sloth_slo=\u0026#34;requests-availability\u0026#34;} / on(sloth_id, sloth_slo, sloth_service) group_left slo:error_budget:ratio{sloth_id=\u0026#34;myservice2-requests-availability\u0026#34;, sloth_service=\u0026#34;myservice2\u0026#34;, sloth_slo=\u0026#34;requests-availability\u0026#34;}labels:cmd:examplesgen.showner:myteam2repo:myorg/myservice2sloth_id:myservice2-requests-availabilitysloth_service:myservice2sloth_slo:requests-availabilitytier:\u0026#34;1\u0026#34;record:slo:period_burn_rate:ratio- expr:1- slo:period_burn_rate:ratio{sloth_id=\u0026#34;myservice2-requests-availability\u0026#34;,sloth_service=\u0026#34;myservice2\u0026#34;, sloth_slo=\u0026#34;requests-availability\u0026#34;}labels:cmd:examplesgen.showner:myteam2repo:myorg/myservice2sloth_id:myservice2-requests-availabilitysloth_service:myservice2sloth_slo:requests-availabilitytier:\u0026#34;1\u0026#34;record:slo:period_error_budget_remaining:ratio- expr:vector(1)labels:cmd:examplesgen.showner:myteam2repo:myorg/myservice2sloth_id:myservice2-requests-availabilitysloth_mode:cli-gen-k8ssloth_objective:\u0026#34;99.99\u0026#34;sloth_service:myservice2sloth_slo:requests-availabilitysloth_spec:sloth.slok.dev/v1sloth_version:devtier:\u0026#34;1\u0026#34;record:sloth_slo_info- name:sloth-slo-alerts-myservice2-requests-availabilityrules:- alert:MyServiceHighErrorRateannotations:summary:High error rate on \u0026#39;myservice\u0026#39; requests responsestitle:(page) {{$labels.sloth_service}} {{$labels.sloth_slo}} SLO error budgetburn rate is too fast.expr:|( (slo:sli_error:ratio_rate5m{sloth_id=\u0026#34;myservice2-requests-availability\u0026#34;, sloth_service=\u0026#34;myservice2\u0026#34;, sloth_slo=\u0026#34;requests-availability\u0026#34;} \u0026gt; (14.4 * 0.00010000000000005117)) and ignoring (sloth_window) (slo:sli_error:ratio_rate1h{sloth_id=\u0026#34;myservice2-requests-availability\u0026#34;, sloth_service=\u0026#34;myservice2\u0026#34;, sloth_slo=\u0026#34;requests-availability\u0026#34;} \u0026gt; (14.4 * 0.00010000000000005117)) ) or ignoring (sloth_window) ( (slo:sli_error:ratio_rate30m{sloth_id=\u0026#34;myservice2-requests-availability\u0026#34;, sloth_service=\u0026#34;myservice2\u0026#34;, sloth_slo=\u0026#34;requests-availability\u0026#34;} \u0026gt; (6 * 0.00010000000000005117)) and ignoring (sloth_window) (slo:sli_error:ratio_rate6h{sloth_id=\u0026#34;myservice2-requests-availability\u0026#34;, sloth_service=\u0026#34;myservice2\u0026#34;, sloth_slo=\u0026#34;requests-availability\u0026#34;} \u0026gt; (6 * 0.00010000000000005117)) )labels:category:availabilityrouting_key:myteamseverity:pageteamsloth_severity:page- alert:MyServiceHighErrorRateannotations:summary:High error rate on \u0026#39;myservice\u0026#39; requests responsestitle:(ticket) {{$labels.sloth_service}} {{$labels.sloth_slo}} SLO errorbudget burn rate is too fast.expr:|( (slo:sli_error:ratio_rate2h{sloth_id=\u0026#34;myservice2-requests-availability\u0026#34;, sloth_service=\u0026#34;myservice2\u0026#34;, sloth_slo=\u0026#34;requests-availability\u0026#34;} \u0026gt; (3 * 0.00010000000000005117)) and ignoring (sloth_window) (slo:sli_error:ratio_rate1d{sloth_id=\u0026#34;myservice2-requests-availability\u0026#34;, sloth_service=\u0026#34;myservice2\u0026#34;, sloth_slo=\u0026#34;requests-availability\u0026#34;} \u0026gt; (3 * 0.00010000000000005117)) ) or ignoring (sloth_window) ( (slo:sli_error:ratio_rate6h{sloth_id=\u0026#34;myservice2-requests-availability\u0026#34;, sloth_service=\u0026#34;myservice2\u0026#34;, sloth_slo=\u0026#34;requests-availability\u0026#34;} \u0026gt; (1 * 0.00010000000000005117)) and ignoring (sloth_window) (slo:sli_error:ratio_rate3d{sloth_id=\u0026#34;myservice2-requests-availability\u0026#34;, sloth_service=\u0026#34;myservice2\u0026#34;, sloth_slo=\u0026#34;requests-availability\u0026#34;} \u0026gt; (1 * 0.00010000000000005117)) )labels:category:availabilityseverity:slackslack_channel:\u0026#39;#alerts-myteam\u0026#39;sloth_severity:ticket   "},{"id":45,"href":"/examples/default/no-alerts/","title":"No alerts","parent":"Default","content":" SLO spec  # This example shows a real service level used for Kubernetes Apiserver.## The service level has 2 SLOs based on Apiserver requests/responses.## We consider an SLI event the the requests made to the server, lets review the SLOs## - `requests-availability`# - This SLO warn us that we are returning correctly the requests to the clients (kubectl users, controllers...).# - SLI error: We consider a bad request (event) a request with the codes \u0026gt;=500 or 429# - SLO objective (99.9%): We are restrictive with this because we only allow failing a request every 1000.## - `requests-latency`# - This SLO warn us that we apiserver responses are being slow and this will affect the clients (kubectl users, controllers...).# - SLI error: We consider a bad request (event) when the response latency is \u0026lt;400ms.# - SLO objective(99%): We have a relaxed objective because Kubernetes has a lot of async and eventual consistency flows. We could# create in a future another SLO that is less restrictive and use the latency of the realtime requests (e.g: kubectl).## `sloth generate -i ./examples/kubernetes-apiserver.yml`#version:\u0026#34;prometheus/v1\u0026#34;service:\u0026#34;k8s-apiserver\u0026#34;labels:cluster:\u0026#34;valhalla\u0026#34;component:\u0026#34;kubernetes\u0026#34;slos:- name:\u0026#34;requests-availability\u0026#34;objective:99.9description:\u0026#34;Warn that we are returning correctly the requests to the clients (kubectl users, controllers...).\u0026#34;labels:category:availabilitysli:events:error_query:sum(rate(apiserver_request_total{code=~\u0026#34;(5..|429)\u0026#34;}[{{.window}}]))total_query:sum(rate(apiserver_request_total[{{.window}}]))alerting:name:K8sApiserverAvailabilityAlertlabels:category:\u0026#34;availability\u0026#34;annotations:runbook:\u0026#34;https://github.com/kubernetes-monitoring/kubernetes-mixin/tree/master/runbook.md#alert-name-kubeapierrorshigh\u0026#34;page_alert:labels:severity:criticalticket_alert:labels:severity:warning- name:\u0026#34;requests-latency\u0026#34;objective:99description:\u0026#34;Warn that we apiserver responses are being slow and this will affect the clients (kubectl users, controllers...).\u0026#34;labels:category:latencysli:events:error_query:|( sum(rate(apiserver_request_duration_seconds_count{verb!=\u0026#34;WATCH\u0026#34;}[{{.window}}])) - sum(rate(apiserver_request_duration_seconds_bucket{le=\u0026#34;0.4\u0026#34;,verb!=\u0026#34;WATCH\u0026#34;}[{{.window}}])) )total_query:sum(rate(apiserver_request_duration_seconds_count{verb!=\u0026#34;WATCH\u0026#34;}[{{.window}}]))alerting:name:K8sApiserverLatencyAlertlabels:category:\u0026#34;latency\u0026#34;annotations:runbook:\u0026#34;https://github.com/kubernetes-monitoring/kubernetes-mixin/tree/master/runbook.md#alert-name-kubeapilatencyhigh\u0026#34;page_alert:labels:severity:criticalticket_alert:labels:severity:warning  Generated  ---# Code generated by Sloth (dev): https://github.com/slok/sloth.# DO NOT EDIT.groups:- name:sloth-slo-sli-recordings-k8s-apiserver-requests-availabilityrules:- record:slo:sli_error:ratio_rate5mexpr:|(sum(rate(apiserver_request_total{code=~\u0026#34;(5..|429)\u0026#34;}[5m]))) / (sum(rate(apiserver_request_total[5m])))labels:category:availabilitycluster:valhallacmd:examplesgen.shcomponent:kubernetessloth_id:k8s-apiserver-requests-availabilitysloth_service:k8s-apiserversloth_slo:requests-availabilitysloth_window:5m- record:slo:sli_error:ratio_rate30mexpr:|(sum(rate(apiserver_request_total{code=~\u0026#34;(5..|429)\u0026#34;}[30m]))) / (sum(rate(apiserver_request_total[30m])))labels:category:availabilitycluster:valhallacmd:examplesgen.shcomponent:kubernetessloth_id:k8s-apiserver-requests-availabilitysloth_service:k8s-apiserversloth_slo:requests-availabilitysloth_window:30m- record:slo:sli_error:ratio_rate1hexpr:|(sum(rate(apiserver_request_total{code=~\u0026#34;(5..|429)\u0026#34;}[1h]))) / (sum(rate(apiserver_request_total[1h])))labels:category:availabilitycluster:valhallacmd:examplesgen.shcomponent:kubernetessloth_id:k8s-apiserver-requests-availabilitysloth_service:k8s-apiserversloth_slo:requests-availabilitysloth_window:1h- record:slo:sli_error:ratio_rate2hexpr:|(sum(rate(apiserver_request_total{code=~\u0026#34;(5..|429)\u0026#34;}[2h]))) / (sum(rate(apiserver_request_total[2h])))labels:category:availabilitycluster:valhallacmd:examplesgen.shcomponent:kubernetessloth_id:k8s-apiserver-requests-availabilitysloth_service:k8s-apiserversloth_slo:requests-availabilitysloth_window:2h- record:slo:sli_error:ratio_rate6hexpr:|(sum(rate(apiserver_request_total{code=~\u0026#34;(5..|429)\u0026#34;}[6h]))) / (sum(rate(apiserver_request_total[6h])))labels:category:availabilitycluster:valhallacmd:examplesgen.shcomponent:kubernetessloth_id:k8s-apiserver-requests-availabilitysloth_service:k8s-apiserversloth_slo:requests-availabilitysloth_window:6h- record:slo:sli_error:ratio_rate1dexpr:|(sum(rate(apiserver_request_total{code=~\u0026#34;(5..|429)\u0026#34;}[1d]))) / (sum(rate(apiserver_request_total[1d])))labels:category:availabilitycluster:valhallacmd:examplesgen.shcomponent:kubernetessloth_id:k8s-apiserver-requests-availabilitysloth_service:k8s-apiserversloth_slo:requests-availabilitysloth_window:1d- record:slo:sli_error:ratio_rate3dexpr:|(sum(rate(apiserver_request_total{code=~\u0026#34;(5..|429)\u0026#34;}[3d]))) / (sum(rate(apiserver_request_total[3d])))labels:category:availabilitycluster:valhallacmd:examplesgen.shcomponent:kubernetessloth_id:k8s-apiserver-requests-availabilitysloth_service:k8s-apiserversloth_slo:requests-availabilitysloth_window:3d- record:slo:sli_error:ratio_rate30dexpr:|sum_over_time(slo:sli_error:ratio_rate5m{sloth_id=\u0026#34;k8s-apiserver-requests-availability\u0026#34;, sloth_service=\u0026#34;k8s-apiserver\u0026#34;, sloth_slo=\u0026#34;requests-availability\u0026#34;}[30d]) / ignoring (sloth_window) count_over_time(slo:sli_error:ratio_rate5m{sloth_id=\u0026#34;k8s-apiserver-requests-availability\u0026#34;, sloth_service=\u0026#34;k8s-apiserver\u0026#34;, sloth_slo=\u0026#34;requests-availability\u0026#34;}[30d])labels:sloth_window:30d- name:sloth-slo-meta-recordings-k8s-apiserver-requests-availabilityrules:- record:slo:objective:ratioexpr:vector(0.9990000000000001)labels:category:availabilitycluster:valhallacmd:examplesgen.shcomponent:kubernetessloth_id:k8s-apiserver-requests-availabilitysloth_service:k8s-apiserversloth_slo:requests-availability- record:slo:error_budget:ratioexpr:vector(1-0.9990000000000001)labels:category:availabilitycluster:valhallacmd:examplesgen.shcomponent:kubernetessloth_id:k8s-apiserver-requests-availabilitysloth_service:k8s-apiserversloth_slo:requests-availability- record:slo:time_period:daysexpr:vector(30)labels:category:availabilitycluster:valhallacmd:examplesgen.shcomponent:kubernetessloth_id:k8s-apiserver-requests-availabilitysloth_service:k8s-apiserversloth_slo:requests-availability- record:slo:current_burn_rate:ratioexpr:|slo:sli_error:ratio_rate5m{sloth_id=\u0026#34;k8s-apiserver-requests-availability\u0026#34;, sloth_service=\u0026#34;k8s-apiserver\u0026#34;, sloth_slo=\u0026#34;requests-availability\u0026#34;} / on(sloth_id, sloth_slo, sloth_service) group_left slo:error_budget:ratio{sloth_id=\u0026#34;k8s-apiserver-requests-availability\u0026#34;, sloth_service=\u0026#34;k8s-apiserver\u0026#34;, sloth_slo=\u0026#34;requests-availability\u0026#34;}labels:category:availabilitycluster:valhallacmd:examplesgen.shcomponent:kubernetessloth_id:k8s-apiserver-requests-availabilitysloth_service:k8s-apiserversloth_slo:requests-availability- record:slo:period_burn_rate:ratioexpr:|slo:sli_error:ratio_rate30d{sloth_id=\u0026#34;k8s-apiserver-requests-availability\u0026#34;, sloth_service=\u0026#34;k8s-apiserver\u0026#34;, sloth_slo=\u0026#34;requests-availability\u0026#34;} / on(sloth_id, sloth_slo, sloth_service) group_left slo:error_budget:ratio{sloth_id=\u0026#34;k8s-apiserver-requests-availability\u0026#34;, sloth_service=\u0026#34;k8s-apiserver\u0026#34;, sloth_slo=\u0026#34;requests-availability\u0026#34;}labels:category:availabilitycluster:valhallacmd:examplesgen.shcomponent:kubernetessloth_id:k8s-apiserver-requests-availabilitysloth_service:k8s-apiserversloth_slo:requests-availability- record:slo:period_error_budget_remaining:ratioexpr:1- slo:period_burn_rate:ratio{sloth_id=\u0026#34;k8s-apiserver-requests-availability\u0026#34;,sloth_service=\u0026#34;k8s-apiserver\u0026#34;, sloth_slo=\u0026#34;requests-availability\u0026#34;}labels:category:availabilitycluster:valhallacmd:examplesgen.shcomponent:kubernetessloth_id:k8s-apiserver-requests-availabilitysloth_service:k8s-apiserversloth_slo:requests-availability- record:sloth_slo_infoexpr:vector(1)labels:category:availabilitycluster:valhallacmd:examplesgen.shcomponent:kubernetessloth_id:k8s-apiserver-requests-availabilitysloth_mode:cli-gen-promsloth_objective:\u0026#34;99.9\u0026#34;sloth_service:k8s-apiserversloth_slo:requests-availabilitysloth_spec:prometheus/v1sloth_version:dev- name:sloth-slo-alerts-k8s-apiserver-requests-availabilityrules:- alert:K8sApiserverAvailabilityAlertexpr:|( (slo:sli_error:ratio_rate5m{sloth_id=\u0026#34;k8s-apiserver-requests-availability\u0026#34;, sloth_service=\u0026#34;k8s-apiserver\u0026#34;, sloth_slo=\u0026#34;requests-availability\u0026#34;} \u0026gt; (14.4 * 0.0009999999999999432)) and ignoring (sloth_window) (slo:sli_error:ratio_rate1h{sloth_id=\u0026#34;k8s-apiserver-requests-availability\u0026#34;, sloth_service=\u0026#34;k8s-apiserver\u0026#34;, sloth_slo=\u0026#34;requests-availability\u0026#34;} \u0026gt; (14.4 * 0.0009999999999999432)) ) or ignoring (sloth_window) ( (slo:sli_error:ratio_rate30m{sloth_id=\u0026#34;k8s-apiserver-requests-availability\u0026#34;, sloth_service=\u0026#34;k8s-apiserver\u0026#34;, sloth_slo=\u0026#34;requests-availability\u0026#34;} \u0026gt; (6 * 0.0009999999999999432)) and ignoring (sloth_window) (slo:sli_error:ratio_rate6h{sloth_id=\u0026#34;k8s-apiserver-requests-availability\u0026#34;, sloth_service=\u0026#34;k8s-apiserver\u0026#34;, sloth_slo=\u0026#34;requests-availability\u0026#34;} \u0026gt; (6 * 0.0009999999999999432)) )labels:category:availabilityseverity:criticalsloth_severity:pageannotations:runbook:https://github.com/kubernetes-monitoring/kubernetes-mixin/tree/master/runbook.md#alert-name-kubeapierrorshighsummary:\u0026#39;{{$labels.sloth_service}} {{$labels.sloth_slo}} SLO error budget burn rate is over expected.\u0026#39;title:(page) {{$labels.sloth_service}} {{$labels.sloth_slo}} SLO error budgetburn rate is too fast.- alert:K8sApiserverAvailabilityAlertexpr:|( (slo:sli_error:ratio_rate2h{sloth_id=\u0026#34;k8s-apiserver-requests-availability\u0026#34;, sloth_service=\u0026#34;k8s-apiserver\u0026#34;, sloth_slo=\u0026#34;requests-availability\u0026#34;} \u0026gt; (3 * 0.0009999999999999432)) and ignoring (sloth_window) (slo:sli_error:ratio_rate1d{sloth_id=\u0026#34;k8s-apiserver-requests-availability\u0026#34;, sloth_service=\u0026#34;k8s-apiserver\u0026#34;, sloth_slo=\u0026#34;requests-availability\u0026#34;} \u0026gt; (3 * 0.0009999999999999432)) ) or ignoring (sloth_window) ( (slo:sli_error:ratio_rate6h{sloth_id=\u0026#34;k8s-apiserver-requests-availability\u0026#34;, sloth_service=\u0026#34;k8s-apiserver\u0026#34;, sloth_slo=\u0026#34;requests-availability\u0026#34;} \u0026gt; (1 * 0.0009999999999999432)) and ignoring (sloth_window) (slo:sli_error:ratio_rate3d{sloth_id=\u0026#34;k8s-apiserver-requests-availability\u0026#34;, sloth_service=\u0026#34;k8s-apiserver\u0026#34;, sloth_slo=\u0026#34;requests-availability\u0026#34;} \u0026gt; (1 * 0.0009999999999999432)) )labels:category:availabilityseverity:warningsloth_severity:ticketannotations:runbook:https://github.com/kubernetes-monitoring/kubernetes-mixin/tree/master/runbook.md#alert-name-kubeapierrorshighsummary:\u0026#39;{{$labels.sloth_service}} {{$labels.sloth_slo}} SLO error budget burn rate is over expected.\u0026#39;title:(ticket) {{$labels.sloth_service}} {{$labels.sloth_slo}} SLO error budgetburn rate is too fast.- name:sloth-slo-sli-recordings-k8s-apiserver-requests-latencyrules:- record:slo:sli_error:ratio_rate5mexpr:|(( sum(rate(apiserver_request_duration_seconds_count{verb!=\u0026#34;WATCH\u0026#34;}[5m])) - sum(rate(apiserver_request_duration_seconds_bucket{le=\u0026#34;0.4\u0026#34;,verb!=\u0026#34;WATCH\u0026#34;}[5m])) ) ) / (sum(rate(apiserver_request_duration_seconds_count{verb!=\u0026#34;WATCH\u0026#34;}[5m])))labels:category:latencycluster:valhallacmd:examplesgen.shcomponent:kubernetessloth_id:k8s-apiserver-requests-latencysloth_service:k8s-apiserversloth_slo:requests-latencysloth_window:5m- record:slo:sli_error:ratio_rate30mexpr:|(( sum(rate(apiserver_request_duration_seconds_count{verb!=\u0026#34;WATCH\u0026#34;}[30m])) - sum(rate(apiserver_request_duration_seconds_bucket{le=\u0026#34;0.4\u0026#34;,verb!=\u0026#34;WATCH\u0026#34;}[30m])) ) ) / (sum(rate(apiserver_request_duration_seconds_count{verb!=\u0026#34;WATCH\u0026#34;}[30m])))labels:category:latencycluster:valhallacmd:examplesgen.shcomponent:kubernetessloth_id:k8s-apiserver-requests-latencysloth_service:k8s-apiserversloth_slo:requests-latencysloth_window:30m- record:slo:sli_error:ratio_rate1hexpr:|(( sum(rate(apiserver_request_duration_seconds_count{verb!=\u0026#34;WATCH\u0026#34;}[1h])) - sum(rate(apiserver_request_duration_seconds_bucket{le=\u0026#34;0.4\u0026#34;,verb!=\u0026#34;WATCH\u0026#34;}[1h])) ) ) / (sum(rate(apiserver_request_duration_seconds_count{verb!=\u0026#34;WATCH\u0026#34;}[1h])))labels:category:latencycluster:valhallacmd:examplesgen.shcomponent:kubernetessloth_id:k8s-apiserver-requests-latencysloth_service:k8s-apiserversloth_slo:requests-latencysloth_window:1h- record:slo:sli_error:ratio_rate2hexpr:|(( sum(rate(apiserver_request_duration_seconds_count{verb!=\u0026#34;WATCH\u0026#34;}[2h])) - sum(rate(apiserver_request_duration_seconds_bucket{le=\u0026#34;0.4\u0026#34;,verb!=\u0026#34;WATCH\u0026#34;}[2h])) ) ) / (sum(rate(apiserver_request_duration_seconds_count{verb!=\u0026#34;WATCH\u0026#34;}[2h])))labels:category:latencycluster:valhallacmd:examplesgen.shcomponent:kubernetessloth_id:k8s-apiserver-requests-latencysloth_service:k8s-apiserversloth_slo:requests-latencysloth_window:2h- record:slo:sli_error:ratio_rate6hexpr:|(( sum(rate(apiserver_request_duration_seconds_count{verb!=\u0026#34;WATCH\u0026#34;}[6h])) - sum(rate(apiserver_request_duration_seconds_bucket{le=\u0026#34;0.4\u0026#34;,verb!=\u0026#34;WATCH\u0026#34;}[6h])) ) ) / (sum(rate(apiserver_request_duration_seconds_count{verb!=\u0026#34;WATCH\u0026#34;}[6h])))labels:category:latencycluster:valhallacmd:examplesgen.shcomponent:kubernetessloth_id:k8s-apiserver-requests-latencysloth_service:k8s-apiserversloth_slo:requests-latencysloth_window:6h- record:slo:sli_error:ratio_rate1dexpr:|(( sum(rate(apiserver_request_duration_seconds_count{verb!=\u0026#34;WATCH\u0026#34;}[1d])) - sum(rate(apiserver_request_duration_seconds_bucket{le=\u0026#34;0.4\u0026#34;,verb!=\u0026#34;WATCH\u0026#34;}[1d])) ) ) / (sum(rate(apiserver_request_duration_seconds_count{verb!=\u0026#34;WATCH\u0026#34;}[1d])))labels:category:latencycluster:valhallacmd:examplesgen.shcomponent:kubernetessloth_id:k8s-apiserver-requests-latencysloth_service:k8s-apiserversloth_slo:requests-latencysloth_window:1d- record:slo:sli_error:ratio_rate3dexpr:|(( sum(rate(apiserver_request_duration_seconds_count{verb!=\u0026#34;WATCH\u0026#34;}[3d])) - sum(rate(apiserver_request_duration_seconds_bucket{le=\u0026#34;0.4\u0026#34;,verb!=\u0026#34;WATCH\u0026#34;}[3d])) ) ) / (sum(rate(apiserver_request_duration_seconds_count{verb!=\u0026#34;WATCH\u0026#34;}[3d])))labels:category:latencycluster:valhallacmd:examplesgen.shcomponent:kubernetessloth_id:k8s-apiserver-requests-latencysloth_service:k8s-apiserversloth_slo:requests-latencysloth_window:3d- record:slo:sli_error:ratio_rate30dexpr:|sum_over_time(slo:sli_error:ratio_rate5m{sloth_id=\u0026#34;k8s-apiserver-requests-latency\u0026#34;, sloth_service=\u0026#34;k8s-apiserver\u0026#34;, sloth_slo=\u0026#34;requests-latency\u0026#34;}[30d]) / ignoring (sloth_window) count_over_time(slo:sli_error:ratio_rate5m{sloth_id=\u0026#34;k8s-apiserver-requests-latency\u0026#34;, sloth_service=\u0026#34;k8s-apiserver\u0026#34;, sloth_slo=\u0026#34;requests-latency\u0026#34;}[30d])labels:sloth_window:30d- name:sloth-slo-meta-recordings-k8s-apiserver-requests-latencyrules:- record:slo:objective:ratioexpr:vector(0.99)labels:category:latencycluster:valhallacmd:examplesgen.shcomponent:kubernetessloth_id:k8s-apiserver-requests-latencysloth_service:k8s-apiserversloth_slo:requests-latency- record:slo:error_budget:ratioexpr:vector(1-0.99)labels:category:latencycluster:valhallacmd:examplesgen.shcomponent:kubernetessloth_id:k8s-apiserver-requests-latencysloth_service:k8s-apiserversloth_slo:requests-latency- record:slo:time_period:daysexpr:vector(30)labels:category:latencycluster:valhallacmd:examplesgen.shcomponent:kubernetessloth_id:k8s-apiserver-requests-latencysloth_service:k8s-apiserversloth_slo:requests-latency- record:slo:current_burn_rate:ratioexpr:|slo:sli_error:ratio_rate5m{sloth_id=\u0026#34;k8s-apiserver-requests-latency\u0026#34;, sloth_service=\u0026#34;k8s-apiserver\u0026#34;, sloth_slo=\u0026#34;requests-latency\u0026#34;} / on(sloth_id, sloth_slo, sloth_service) group_left slo:error_budget:ratio{sloth_id=\u0026#34;k8s-apiserver-requests-latency\u0026#34;, sloth_service=\u0026#34;k8s-apiserver\u0026#34;, sloth_slo=\u0026#34;requests-latency\u0026#34;}labels:category:latencycluster:valhallacmd:examplesgen.shcomponent:kubernetessloth_id:k8s-apiserver-requests-latencysloth_service:k8s-apiserversloth_slo:requests-latency- record:slo:period_burn_rate:ratioexpr:|slo:sli_error:ratio_rate30d{sloth_id=\u0026#34;k8s-apiserver-requests-latency\u0026#34;, sloth_service=\u0026#34;k8s-apiserver\u0026#34;, sloth_slo=\u0026#34;requests-latency\u0026#34;} / on(sloth_id, sloth_slo, sloth_service) group_left slo:error_budget:ratio{sloth_id=\u0026#34;k8s-apiserver-requests-latency\u0026#34;, sloth_service=\u0026#34;k8s-apiserver\u0026#34;, sloth_slo=\u0026#34;requests-latency\u0026#34;}labels:category:latencycluster:valhallacmd:examplesgen.shcomponent:kubernetessloth_id:k8s-apiserver-requests-latencysloth_service:k8s-apiserversloth_slo:requests-latency- record:slo:period_error_budget_remaining:ratioexpr:1- slo:period_burn_rate:ratio{sloth_id=\u0026#34;k8s-apiserver-requests-latency\u0026#34;,sloth_service=\u0026#34;k8s-apiserver\u0026#34;, sloth_slo=\u0026#34;requests-latency\u0026#34;}labels:category:latencycluster:valhallacmd:examplesgen.shcomponent:kubernetessloth_id:k8s-apiserver-requests-latencysloth_service:k8s-apiserversloth_slo:requests-latency- record:sloth_slo_infoexpr:vector(1)labels:category:latencycluster:valhallacmd:examplesgen.shcomponent:kubernetessloth_id:k8s-apiserver-requests-latencysloth_mode:cli-gen-promsloth_objective:\u0026#34;99\u0026#34;sloth_service:k8s-apiserversloth_slo:requests-latencysloth_spec:prometheus/v1sloth_version:dev- name:sloth-slo-alerts-k8s-apiserver-requests-latencyrules:- alert:K8sApiserverLatencyAlertexpr:|( (slo:sli_error:ratio_rate5m{sloth_id=\u0026#34;k8s-apiserver-requests-latency\u0026#34;, sloth_service=\u0026#34;k8s-apiserver\u0026#34;, sloth_slo=\u0026#34;requests-latency\u0026#34;} \u0026gt; (14.4 * 0.01)) and ignoring (sloth_window) (slo:sli_error:ratio_rate1h{sloth_id=\u0026#34;k8s-apiserver-requests-latency\u0026#34;, sloth_service=\u0026#34;k8s-apiserver\u0026#34;, sloth_slo=\u0026#34;requests-latency\u0026#34;} \u0026gt; (14.4 * 0.01)) ) or ignoring (sloth_window) ( (slo:sli_error:ratio_rate30m{sloth_id=\u0026#34;k8s-apiserver-requests-latency\u0026#34;, sloth_service=\u0026#34;k8s-apiserver\u0026#34;, sloth_slo=\u0026#34;requests-latency\u0026#34;} \u0026gt; (6 * 0.01)) and ignoring (sloth_window) (slo:sli_error:ratio_rate6h{sloth_id=\u0026#34;k8s-apiserver-requests-latency\u0026#34;, sloth_service=\u0026#34;k8s-apiserver\u0026#34;, sloth_slo=\u0026#34;requests-latency\u0026#34;} \u0026gt; (6 * 0.01)) )labels:category:latencyseverity:criticalsloth_severity:pageannotations:runbook:https://github.com/kubernetes-monitoring/kubernetes-mixin/tree/master/runbook.md#alert-name-kubeapilatencyhighsummary:\u0026#39;{{$labels.sloth_service}} {{$labels.sloth_slo}} SLO error budget burn rate is over expected.\u0026#39;title:(page) {{$labels.sloth_service}} {{$labels.sloth_slo}} SLO error budgetburn rate is too fast.- alert:K8sApiserverLatencyAlertexpr:|( (slo:sli_error:ratio_rate2h{sloth_id=\u0026#34;k8s-apiserver-requests-latency\u0026#34;, sloth_service=\u0026#34;k8s-apiserver\u0026#34;, sloth_slo=\u0026#34;requests-latency\u0026#34;} \u0026gt; (3 * 0.01)) and ignoring (sloth_window) (slo:sli_error:ratio_rate1d{sloth_id=\u0026#34;k8s-apiserver-requests-latency\u0026#34;, sloth_service=\u0026#34;k8s-apiserver\u0026#34;, sloth_slo=\u0026#34;requests-latency\u0026#34;} \u0026gt; (3 * 0.01)) ) or ignoring (sloth_window) ( (slo:sli_error:ratio_rate6h{sloth_id=\u0026#34;k8s-apiserver-requests-latency\u0026#34;, sloth_service=\u0026#34;k8s-apiserver\u0026#34;, sloth_slo=\u0026#34;requests-latency\u0026#34;} \u0026gt; (1 * 0.01)) and ignoring (sloth_window) (slo:sli_error:ratio_rate3d{sloth_id=\u0026#34;k8s-apiserver-requests-latency\u0026#34;, sloth_service=\u0026#34;k8s-apiserver\u0026#34;, sloth_slo=\u0026#34;requests-latency\u0026#34;} \u0026gt; (1 * 0.01)) )labels:category:latencyseverity:warningsloth_severity:ticketannotations:runbook:https://github.com/kubernetes-monitoring/kubernetes-mixin/tree/master/runbook.md#alert-name-kubeapilatencyhighsummary:\u0026#39;{{$labels.sloth_service}} {{$labels.sloth_slo}} SLO error budget burn rate is over expected.\u0026#39;title:(ticket) {{$labels.sloth_service}} {{$labels.sloth_slo}} SLO error budgetburn rate is too fast.   "},{"id":46,"href":"/examples/default/raw-sli/","title":"Raw SLI","parent":"Default","content":" SLO spec  # This example shows another less accurate or simpler way of creating the home wifi SLO.## The metrics already give us a metric in ratio for each wifi connection satisfaction, instead of getting# good and bad events as connection with a minimum satisfaction ratio, we will calculate the averate of all# ratio satisfaction connections over the time window.# So we can\u0026#39;t use the `events` SLI because we are not going to divide bad and total events.## - `wifi-client-satisfaction`# - This SLO warn us that we have an average wifi connection satisfaction.# - SLI error: Calculated internally by ubiquitis metrics, we use directly the ratio.# - SLO objective (95%): We allow the average wifi connection satisfaction is \u0026gt;=95%## `sloth generate -i ./examples/raw-home-wifi.yml`#version:\u0026#34;prometheus/v1\u0026#34;service:\u0026#34;home-wifi\u0026#34;labels:cluster:\u0026#34;valhalla\u0026#34;component:\u0026#34;ubiquiti\u0026#34;context:\u0026#34;home\u0026#34;slos:- name:\u0026#34;wifi-client-satisfaction\u0026#34;objective:95description:\u0026#34;Warn us that we have an average wifi connection satisfaction.\u0026#34;sli:raw:# Get the averate satisfaction ratio and rest 1 (max good) to get the error ratio.error_ratio_query:|1 - ( sum(sum_over_time(unifipoller_client_satisfaction_ratio[{{.window}}])) / sum(count_over_time(unifipoller_client_satisfaction_ratio[{{.window}}])) )alerting:name:WifiClientSatisfactionpage_alert:labels:severity:hometicket_alert:labels:severity:warning  Generated  ---# Code generated by Sloth (dev): https://github.com/slok/sloth.# DO NOT EDIT.groups:- name:sloth-slo-sli-recordings-home-wifi-wifi-client-satisfactionrules:- record:slo:sli_error:ratio_rate5mexpr:|-(1 - ( sum(sum_over_time(unifipoller_client_satisfaction_ratio[5m])) / sum(count_over_time(unifipoller_client_satisfaction_ratio[5m])) ) )labels:cluster:valhallacmd:examplesgen.shcomponent:ubiquiticontext:homesloth_id:home-wifi-wifi-client-satisfactionsloth_service:home-wifisloth_slo:wifi-client-satisfactionsloth_window:5m- record:slo:sli_error:ratio_rate30mexpr:|-(1 - ( sum(sum_over_time(unifipoller_client_satisfaction_ratio[30m])) / sum(count_over_time(unifipoller_client_satisfaction_ratio[30m])) ) )labels:cluster:valhallacmd:examplesgen.shcomponent:ubiquiticontext:homesloth_id:home-wifi-wifi-client-satisfactionsloth_service:home-wifisloth_slo:wifi-client-satisfactionsloth_window:30m- record:slo:sli_error:ratio_rate1hexpr:|-(1 - ( sum(sum_over_time(unifipoller_client_satisfaction_ratio[1h])) / sum(count_over_time(unifipoller_client_satisfaction_ratio[1h])) ) )labels:cluster:valhallacmd:examplesgen.shcomponent:ubiquiticontext:homesloth_id:home-wifi-wifi-client-satisfactionsloth_service:home-wifisloth_slo:wifi-client-satisfactionsloth_window:1h- record:slo:sli_error:ratio_rate2hexpr:|-(1 - ( sum(sum_over_time(unifipoller_client_satisfaction_ratio[2h])) / sum(count_over_time(unifipoller_client_satisfaction_ratio[2h])) ) )labels:cluster:valhallacmd:examplesgen.shcomponent:ubiquiticontext:homesloth_id:home-wifi-wifi-client-satisfactionsloth_service:home-wifisloth_slo:wifi-client-satisfactionsloth_window:2h- record:slo:sli_error:ratio_rate6hexpr:|-(1 - ( sum(sum_over_time(unifipoller_client_satisfaction_ratio[6h])) / sum(count_over_time(unifipoller_client_satisfaction_ratio[6h])) ) )labels:cluster:valhallacmd:examplesgen.shcomponent:ubiquiticontext:homesloth_id:home-wifi-wifi-client-satisfactionsloth_service:home-wifisloth_slo:wifi-client-satisfactionsloth_window:6h- record:slo:sli_error:ratio_rate1dexpr:|-(1 - ( sum(sum_over_time(unifipoller_client_satisfaction_ratio[1d])) / sum(count_over_time(unifipoller_client_satisfaction_ratio[1d])) ) )labels:cluster:valhallacmd:examplesgen.shcomponent:ubiquiticontext:homesloth_id:home-wifi-wifi-client-satisfactionsloth_service:home-wifisloth_slo:wifi-client-satisfactionsloth_window:1d- record:slo:sli_error:ratio_rate3dexpr:|-(1 - ( sum(sum_over_time(unifipoller_client_satisfaction_ratio[3d])) / sum(count_over_time(unifipoller_client_satisfaction_ratio[3d])) ) )labels:cluster:valhallacmd:examplesgen.shcomponent:ubiquiticontext:homesloth_id:home-wifi-wifi-client-satisfactionsloth_service:home-wifisloth_slo:wifi-client-satisfactionsloth_window:3d- record:slo:sli_error:ratio_rate30dexpr:|sum_over_time(slo:sli_error:ratio_rate5m{sloth_id=\u0026#34;home-wifi-wifi-client-satisfaction\u0026#34;, sloth_service=\u0026#34;home-wifi\u0026#34;, sloth_slo=\u0026#34;wifi-client-satisfaction\u0026#34;}[30d]) / ignoring (sloth_window) count_over_time(slo:sli_error:ratio_rate5m{sloth_id=\u0026#34;home-wifi-wifi-client-satisfaction\u0026#34;, sloth_service=\u0026#34;home-wifi\u0026#34;, sloth_slo=\u0026#34;wifi-client-satisfaction\u0026#34;}[30d])labels:sloth_window:30d- name:sloth-slo-meta-recordings-home-wifi-wifi-client-satisfactionrules:- record:slo:objective:ratioexpr:vector(0.95)labels:cluster:valhallacmd:examplesgen.shcomponent:ubiquiticontext:homesloth_id:home-wifi-wifi-client-satisfactionsloth_service:home-wifisloth_slo:wifi-client-satisfaction- record:slo:error_budget:ratioexpr:vector(1-0.95)labels:cluster:valhallacmd:examplesgen.shcomponent:ubiquiticontext:homesloth_id:home-wifi-wifi-client-satisfactionsloth_service:home-wifisloth_slo:wifi-client-satisfaction- record:slo:time_period:daysexpr:vector(30)labels:cluster:valhallacmd:examplesgen.shcomponent:ubiquiticontext:homesloth_id:home-wifi-wifi-client-satisfactionsloth_service:home-wifisloth_slo:wifi-client-satisfaction- record:slo:current_burn_rate:ratioexpr:|slo:sli_error:ratio_rate5m{sloth_id=\u0026#34;home-wifi-wifi-client-satisfaction\u0026#34;, sloth_service=\u0026#34;home-wifi\u0026#34;, sloth_slo=\u0026#34;wifi-client-satisfaction\u0026#34;} / on(sloth_id, sloth_slo, sloth_service) group_left slo:error_budget:ratio{sloth_id=\u0026#34;home-wifi-wifi-client-satisfaction\u0026#34;, sloth_service=\u0026#34;home-wifi\u0026#34;, sloth_slo=\u0026#34;wifi-client-satisfaction\u0026#34;}labels:cluster:valhallacmd:examplesgen.shcomponent:ubiquiticontext:homesloth_id:home-wifi-wifi-client-satisfactionsloth_service:home-wifisloth_slo:wifi-client-satisfaction- record:slo:period_burn_rate:ratioexpr:|slo:sli_error:ratio_rate30d{sloth_id=\u0026#34;home-wifi-wifi-client-satisfaction\u0026#34;, sloth_service=\u0026#34;home-wifi\u0026#34;, sloth_slo=\u0026#34;wifi-client-satisfaction\u0026#34;} / on(sloth_id, sloth_slo, sloth_service) group_left slo:error_budget:ratio{sloth_id=\u0026#34;home-wifi-wifi-client-satisfaction\u0026#34;, sloth_service=\u0026#34;home-wifi\u0026#34;, sloth_slo=\u0026#34;wifi-client-satisfaction\u0026#34;}labels:cluster:valhallacmd:examplesgen.shcomponent:ubiquiticontext:homesloth_id:home-wifi-wifi-client-satisfactionsloth_service:home-wifisloth_slo:wifi-client-satisfaction- record:slo:period_error_budget_remaining:ratioexpr:1- slo:period_burn_rate:ratio{sloth_id=\u0026#34;home-wifi-wifi-client-satisfaction\u0026#34;,sloth_service=\u0026#34;home-wifi\u0026#34;, sloth_slo=\u0026#34;wifi-client-satisfaction\u0026#34;}labels:cluster:valhallacmd:examplesgen.shcomponent:ubiquiticontext:homesloth_id:home-wifi-wifi-client-satisfactionsloth_service:home-wifisloth_slo:wifi-client-satisfaction- record:sloth_slo_infoexpr:vector(1)labels:cluster:valhallacmd:examplesgen.shcomponent:ubiquiticontext:homesloth_id:home-wifi-wifi-client-satisfactionsloth_mode:cli-gen-promsloth_objective:\u0026#34;95\u0026#34;sloth_service:home-wifisloth_slo:wifi-client-satisfactionsloth_spec:prometheus/v1sloth_version:dev- name:sloth-slo-alerts-home-wifi-wifi-client-satisfactionrules:- alert:WifiClientSatisfactionexpr:|( (slo:sli_error:ratio_rate5m{sloth_id=\u0026#34;home-wifi-wifi-client-satisfaction\u0026#34;, sloth_service=\u0026#34;home-wifi\u0026#34;, sloth_slo=\u0026#34;wifi-client-satisfaction\u0026#34;} \u0026gt; (14.4 * 0.05)) and ignoring (sloth_window) (slo:sli_error:ratio_rate1h{sloth_id=\u0026#34;home-wifi-wifi-client-satisfaction\u0026#34;, sloth_service=\u0026#34;home-wifi\u0026#34;, sloth_slo=\u0026#34;wifi-client-satisfaction\u0026#34;} \u0026gt; (14.4 * 0.05)) ) or ignoring (sloth_window) ( (slo:sli_error:ratio_rate30m{sloth_id=\u0026#34;home-wifi-wifi-client-satisfaction\u0026#34;, sloth_service=\u0026#34;home-wifi\u0026#34;, sloth_slo=\u0026#34;wifi-client-satisfaction\u0026#34;} \u0026gt; (6 * 0.05)) and ignoring (sloth_window) (slo:sli_error:ratio_rate6h{sloth_id=\u0026#34;home-wifi-wifi-client-satisfaction\u0026#34;, sloth_service=\u0026#34;home-wifi\u0026#34;, sloth_slo=\u0026#34;wifi-client-satisfaction\u0026#34;} \u0026gt; (6 * 0.05)) )labels:severity:homesloth_severity:pageannotations:summary:\u0026#39;{{$labels.sloth_service}} {{$labels.sloth_slo}} SLO error budget burn rate is over expected.\u0026#39;title:(page) {{$labels.sloth_service}} {{$labels.sloth_slo}} SLO error budgetburn rate is too fast.- alert:WifiClientSatisfactionexpr:|( (slo:sli_error:ratio_rate2h{sloth_id=\u0026#34;home-wifi-wifi-client-satisfaction\u0026#34;, sloth_service=\u0026#34;home-wifi\u0026#34;, sloth_slo=\u0026#34;wifi-client-satisfaction\u0026#34;} \u0026gt; (3 * 0.05)) and ignoring (sloth_window) (slo:sli_error:ratio_rate1d{sloth_id=\u0026#34;home-wifi-wifi-client-satisfaction\u0026#34;, sloth_service=\u0026#34;home-wifi\u0026#34;, sloth_slo=\u0026#34;wifi-client-satisfaction\u0026#34;} \u0026gt; (3 * 0.05)) ) or ignoring (sloth_window) ( (slo:sli_error:ratio_rate6h{sloth_id=\u0026#34;home-wifi-wifi-client-satisfaction\u0026#34;, sloth_service=\u0026#34;home-wifi\u0026#34;, sloth_slo=\u0026#34;wifi-client-satisfaction\u0026#34;} \u0026gt; (1 * 0.05)) and ignoring (sloth_window) (slo:sli_error:ratio_rate3d{sloth_id=\u0026#34;home-wifi-wifi-client-satisfaction\u0026#34;, sloth_service=\u0026#34;home-wifi\u0026#34;, sloth_slo=\u0026#34;wifi-client-satisfaction\u0026#34;} \u0026gt; (1 * 0.05)) )labels:severity:warningsloth_severity:ticketannotations:summary:\u0026#39;{{$labels.sloth_service}} {{$labels.sloth_slo}} SLO error budget burn rate is over expected.\u0026#39;title:(ticket) {{$labels.sloth_service}} {{$labels.sloth_slo}} SLO error budgetburn rate is too fast.   "},{"id":47,"href":"/examples/default/sli-plugin/","title":"SLI plugin","parent":"Default","content":" SLO spec  version:\u0026#34;prometheus/v1\u0026#34;service:\u0026#34;myservice\u0026#34;labels:owner:\u0026#34;myteam\u0026#34;repo:\u0026#34;myorg/myservice\u0026#34;tier:\u0026#34;2\u0026#34;slos:# We allow failing (5xx and 429) 1 request every 1000 requests (99.9%).- name:\u0026#34;requests-availability\u0026#34;objective:99.9description:\u0026#34;Common SLO based on availability for HTTP request responses.\u0026#34;sli:plugin:id:\u0026#34;getting_started_availability\u0026#34;options:job:\u0026#34;myservice\u0026#34;filter:\u0026#39;f1=\u0026#34;v1\u0026#34;,f2=\u0026#34;v2\u0026#34;\u0026#39;alerting:name:MyServiceHighErrorRatelabels:category:\u0026#34;availability\u0026#34;annotations:# Overwrite default Sloth SLO alert summmary on ticket and page alerts.summary:\u0026#34;High error rate on \u0026#39;myservice\u0026#39; requests responses\u0026#34;page_alert:labels:severity:pageteamrouting_key:myteamticket_alert:labels:severity:\u0026#34;slack\u0026#34;slack_channel:\u0026#34;#alerts-myteam\u0026#34;  Generated  ---# Code generated by Sloth (dev): https://github.com/slok/sloth.# DO NOT EDIT.groups:- name:sloth-slo-sli-recordings-myservice-requests-availabilityrules:- record:slo:sli_error:ratio_rate5mexpr:|-( sum(rate(http_request_duration_seconds_count{ f1=\u0026#34;v1\u0026#34;,f2=\u0026#34;v2\u0026#34;,job=\u0026#34;myservice\u0026#34;,code=~\u0026#34;(5..|429)\u0026#34; }[5m])) / sum(rate(http_request_duration_seconds_count{ f1=\u0026#34;v1\u0026#34;,f2=\u0026#34;v2\u0026#34;,job=\u0026#34;myservice\u0026#34; }[5m])))labels:cmd:examplesgen.showner:myteamrepo:myorg/myservicesloth_id:myservice-requests-availabilitysloth_service:myservicesloth_slo:requests-availabilitysloth_window:5mtier:\u0026#34;2\u0026#34;- record:slo:sli_error:ratio_rate30mexpr:|-( sum(rate(http_request_duration_seconds_count{ f1=\u0026#34;v1\u0026#34;,f2=\u0026#34;v2\u0026#34;,job=\u0026#34;myservice\u0026#34;,code=~\u0026#34;(5..|429)\u0026#34; }[30m])) / sum(rate(http_request_duration_seconds_count{ f1=\u0026#34;v1\u0026#34;,f2=\u0026#34;v2\u0026#34;,job=\u0026#34;myservice\u0026#34; }[30m])))labels:cmd:examplesgen.showner:myteamrepo:myorg/myservicesloth_id:myservice-requests-availabilitysloth_service:myservicesloth_slo:requests-availabilitysloth_window:30mtier:\u0026#34;2\u0026#34;- record:slo:sli_error:ratio_rate1hexpr:|-( sum(rate(http_request_duration_seconds_count{ f1=\u0026#34;v1\u0026#34;,f2=\u0026#34;v2\u0026#34;,job=\u0026#34;myservice\u0026#34;,code=~\u0026#34;(5..|429)\u0026#34; }[1h])) / sum(rate(http_request_duration_seconds_count{ f1=\u0026#34;v1\u0026#34;,f2=\u0026#34;v2\u0026#34;,job=\u0026#34;myservice\u0026#34; }[1h])))labels:cmd:examplesgen.showner:myteamrepo:myorg/myservicesloth_id:myservice-requests-availabilitysloth_service:myservicesloth_slo:requests-availabilitysloth_window:1htier:\u0026#34;2\u0026#34;- record:slo:sli_error:ratio_rate2hexpr:|-( sum(rate(http_request_duration_seconds_count{ f1=\u0026#34;v1\u0026#34;,f2=\u0026#34;v2\u0026#34;,job=\u0026#34;myservice\u0026#34;,code=~\u0026#34;(5..|429)\u0026#34; }[2h])) / sum(rate(http_request_duration_seconds_count{ f1=\u0026#34;v1\u0026#34;,f2=\u0026#34;v2\u0026#34;,job=\u0026#34;myservice\u0026#34; }[2h])))labels:cmd:examplesgen.showner:myteamrepo:myorg/myservicesloth_id:myservice-requests-availabilitysloth_service:myservicesloth_slo:requests-availabilitysloth_window:2htier:\u0026#34;2\u0026#34;- record:slo:sli_error:ratio_rate6hexpr:|-( sum(rate(http_request_duration_seconds_count{ f1=\u0026#34;v1\u0026#34;,f2=\u0026#34;v2\u0026#34;,job=\u0026#34;myservice\u0026#34;,code=~\u0026#34;(5..|429)\u0026#34; }[6h])) / sum(rate(http_request_duration_seconds_count{ f1=\u0026#34;v1\u0026#34;,f2=\u0026#34;v2\u0026#34;,job=\u0026#34;myservice\u0026#34; }[6h])))labels:cmd:examplesgen.showner:myteamrepo:myorg/myservicesloth_id:myservice-requests-availabilitysloth_service:myservicesloth_slo:requests-availabilitysloth_window:6htier:\u0026#34;2\u0026#34;- record:slo:sli_error:ratio_rate1dexpr:|-( sum(rate(http_request_duration_seconds_count{ f1=\u0026#34;v1\u0026#34;,f2=\u0026#34;v2\u0026#34;,job=\u0026#34;myservice\u0026#34;,code=~\u0026#34;(5..|429)\u0026#34; }[1d])) / sum(rate(http_request_duration_seconds_count{ f1=\u0026#34;v1\u0026#34;,f2=\u0026#34;v2\u0026#34;,job=\u0026#34;myservice\u0026#34; }[1d])))labels:cmd:examplesgen.showner:myteamrepo:myorg/myservicesloth_id:myservice-requests-availabilitysloth_service:myservicesloth_slo:requests-availabilitysloth_window:1dtier:\u0026#34;2\u0026#34;- record:slo:sli_error:ratio_rate3dexpr:|-( sum(rate(http_request_duration_seconds_count{ f1=\u0026#34;v1\u0026#34;,f2=\u0026#34;v2\u0026#34;,job=\u0026#34;myservice\u0026#34;,code=~\u0026#34;(5..|429)\u0026#34; }[3d])) / sum(rate(http_request_duration_seconds_count{ f1=\u0026#34;v1\u0026#34;,f2=\u0026#34;v2\u0026#34;,job=\u0026#34;myservice\u0026#34; }[3d])))labels:cmd:examplesgen.showner:myteamrepo:myorg/myservicesloth_id:myservice-requests-availabilitysloth_service:myservicesloth_slo:requests-availabilitysloth_window:3dtier:\u0026#34;2\u0026#34;- record:slo:sli_error:ratio_rate30dexpr:|sum_over_time(slo:sli_error:ratio_rate5m{sloth_id=\u0026#34;myservice-requests-availability\u0026#34;, sloth_service=\u0026#34;myservice\u0026#34;, sloth_slo=\u0026#34;requests-availability\u0026#34;}[30d]) / ignoring (sloth_window) count_over_time(slo:sli_error:ratio_rate5m{sloth_id=\u0026#34;myservice-requests-availability\u0026#34;, sloth_service=\u0026#34;myservice\u0026#34;, sloth_slo=\u0026#34;requests-availability\u0026#34;}[30d])labels:sloth_window:30d- name:sloth-slo-meta-recordings-myservice-requests-availabilityrules:- record:slo:objective:ratioexpr:vector(0.9990000000000001)labels:cmd:examplesgen.showner:myteamrepo:myorg/myservicesloth_id:myservice-requests-availabilitysloth_service:myservicesloth_slo:requests-availabilitytier:\u0026#34;2\u0026#34;- record:slo:error_budget:ratioexpr:vector(1-0.9990000000000001)labels:cmd:examplesgen.showner:myteamrepo:myorg/myservicesloth_id:myservice-requests-availabilitysloth_service:myservicesloth_slo:requests-availabilitytier:\u0026#34;2\u0026#34;- record:slo:time_period:daysexpr:vector(30)labels:cmd:examplesgen.showner:myteamrepo:myorg/myservicesloth_id:myservice-requests-availabilitysloth_service:myservicesloth_slo:requests-availabilitytier:\u0026#34;2\u0026#34;- record:slo:current_burn_rate:ratioexpr:|slo:sli_error:ratio_rate5m{sloth_id=\u0026#34;myservice-requests-availability\u0026#34;, sloth_service=\u0026#34;myservice\u0026#34;, sloth_slo=\u0026#34;requests-availability\u0026#34;} / on(sloth_id, sloth_slo, sloth_service) group_left slo:error_budget:ratio{sloth_id=\u0026#34;myservice-requests-availability\u0026#34;, sloth_service=\u0026#34;myservice\u0026#34;, sloth_slo=\u0026#34;requests-availability\u0026#34;}labels:cmd:examplesgen.showner:myteamrepo:myorg/myservicesloth_id:myservice-requests-availabilitysloth_service:myservicesloth_slo:requests-availabilitytier:\u0026#34;2\u0026#34;- record:slo:period_burn_rate:ratioexpr:|slo:sli_error:ratio_rate30d{sloth_id=\u0026#34;myservice-requests-availability\u0026#34;, sloth_service=\u0026#34;myservice\u0026#34;, sloth_slo=\u0026#34;requests-availability\u0026#34;} / on(sloth_id, sloth_slo, sloth_service) group_left slo:error_budget:ratio{sloth_id=\u0026#34;myservice-requests-availability\u0026#34;, sloth_service=\u0026#34;myservice\u0026#34;, sloth_slo=\u0026#34;requests-availability\u0026#34;}labels:cmd:examplesgen.showner:myteamrepo:myorg/myservicesloth_id:myservice-requests-availabilitysloth_service:myservicesloth_slo:requests-availabilitytier:\u0026#34;2\u0026#34;- record:slo:period_error_budget_remaining:ratioexpr:1- slo:period_burn_rate:ratio{sloth_id=\u0026#34;myservice-requests-availability\u0026#34;,sloth_service=\u0026#34;myservice\u0026#34;, sloth_slo=\u0026#34;requests-availability\u0026#34;}labels:cmd:examplesgen.showner:myteamrepo:myorg/myservicesloth_id:myservice-requests-availabilitysloth_service:myservicesloth_slo:requests-availabilitytier:\u0026#34;2\u0026#34;- record:sloth_slo_infoexpr:vector(1)labels:cmd:examplesgen.showner:myteamrepo:myorg/myservicesloth_id:myservice-requests-availabilitysloth_mode:cli-gen-promsloth_objective:\u0026#34;99.9\u0026#34;sloth_service:myservicesloth_slo:requests-availabilitysloth_spec:prometheus/v1sloth_version:devtier:\u0026#34;2\u0026#34;- name:sloth-slo-alerts-myservice-requests-availabilityrules:- alert:MyServiceHighErrorRateexpr:|( (slo:sli_error:ratio_rate5m{sloth_id=\u0026#34;myservice-requests-availability\u0026#34;, sloth_service=\u0026#34;myservice\u0026#34;, sloth_slo=\u0026#34;requests-availability\u0026#34;} \u0026gt; (14.4 * 0.0009999999999999432)) and ignoring (sloth_window) (slo:sli_error:ratio_rate1h{sloth_id=\u0026#34;myservice-requests-availability\u0026#34;, sloth_service=\u0026#34;myservice\u0026#34;, sloth_slo=\u0026#34;requests-availability\u0026#34;} \u0026gt; (14.4 * 0.0009999999999999432)) ) or ignoring (sloth_window) ( (slo:sli_error:ratio_rate30m{sloth_id=\u0026#34;myservice-requests-availability\u0026#34;, sloth_service=\u0026#34;myservice\u0026#34;, sloth_slo=\u0026#34;requests-availability\u0026#34;} \u0026gt; (6 * 0.0009999999999999432)) and ignoring (sloth_window) (slo:sli_error:ratio_rate6h{sloth_id=\u0026#34;myservice-requests-availability\u0026#34;, sloth_service=\u0026#34;myservice\u0026#34;, sloth_slo=\u0026#34;requests-availability\u0026#34;} \u0026gt; (6 * 0.0009999999999999432)) )labels:category:availabilityrouting_key:myteamseverity:pageteamsloth_severity:pageannotations:summary:High error rate on \u0026#39;myservice\u0026#39; requests responsestitle:(page) {{$labels.sloth_service}} {{$labels.sloth_slo}} SLO error budgetburn rate is too fast.- alert:MyServiceHighErrorRateexpr:|( (slo:sli_error:ratio_rate2h{sloth_id=\u0026#34;myservice-requests-availability\u0026#34;, sloth_service=\u0026#34;myservice\u0026#34;, sloth_slo=\u0026#34;requests-availability\u0026#34;} \u0026gt; (3 * 0.0009999999999999432)) and ignoring (sloth_window) (slo:sli_error:ratio_rate1d{sloth_id=\u0026#34;myservice-requests-availability\u0026#34;, sloth_service=\u0026#34;myservice\u0026#34;, sloth_slo=\u0026#34;requests-availability\u0026#34;} \u0026gt; (3 * 0.0009999999999999432)) ) or ignoring (sloth_window) ( (slo:sli_error:ratio_rate6h{sloth_id=\u0026#34;myservice-requests-availability\u0026#34;, sloth_service=\u0026#34;myservice\u0026#34;, sloth_slo=\u0026#34;requests-availability\u0026#34;} \u0026gt; (1 * 0.0009999999999999432)) and ignoring (sloth_window) (slo:sli_error:ratio_rate3d{sloth_id=\u0026#34;myservice-requests-availability\u0026#34;, sloth_service=\u0026#34;myservice\u0026#34;, sloth_slo=\u0026#34;requests-availability\u0026#34;} \u0026gt; (1 * 0.0009999999999999432)) )labels:category:availabilityseverity:slackslack_channel:\u0026#39;#alerts-myteam\u0026#39;sloth_severity:ticketannotations:summary:High error rate on \u0026#39;myservice\u0026#39; requests responsestitle:(ticket) {{$labels.sloth_service}} {{$labels.sloth_slo}} SLO error budgetburn rate is too fast.  Plugin  package availability import ( \u0026quot;bytes\u0026quot; \u0026quot;context\u0026quot; \u0026quot;fmt\u0026quot; \u0026quot;regexp\u0026quot; \u0026quot;strings\u0026quot; \u0026quot;text/template\u0026quot; )\nconst ( SLIPluginVersion = \u0026quot;prometheus/v1\u0026quot; SLIPluginID = \u0026quot;getting_started_availability\u0026quot; )\nvar queryTpl = template.Must(template.New(\u0026quot;\u0026quot;).Parse(\u0026lt;/span\u0026gt;\u0026lt;span class=\u0026quot;s\u0026quot;\u0026gt;sum(rate(http_request_duration_seconds_count{ \u0026lt;/span\u0026gt;\u0026lt;span class=\u0026quot;cp\u0026quot;\u0026gt;{{\u0026lt;/span\u0026gt;\u0026lt;span class=\u0026quot;na\u0026quot;\u0026gt;.filter\u0026lt;/span\u0026gt;\u0026lt;span class=\u0026quot;cp\u0026quot;\u0026gt;}}\u0026lt;/span\u0026gt;\u0026lt;span class=\u0026quot;s\u0026quot;\u0026gt;job=\u0026amp;#34;\u0026lt;/span\u0026gt;\u0026lt;span class=\u0026quot;cp\u0026quot;\u0026gt;{{\u0026lt;/span\u0026gt;\u0026lt;span class=\u0026quot;na\u0026quot;\u0026gt;.job\u0026lt;/span\u0026gt;\u0026lt;span class=\u0026quot;cp\u0026quot;\u0026gt;}}\u0026lt;/span\u0026gt;\u0026lt;span class=\u0026quot;s\u0026quot;\u0026gt;\u0026amp;#34;,code=~\u0026amp;#34;(5..|429)\u0026amp;#34; }[\u0026lt;/span\u0026gt;\u0026lt;span class=\u0026quot;cp\u0026quot;\u0026gt;{{\u0026lt;/span\u0026gt;\u0026lt;span class=\u0026quot;s\u0026quot;\u0026gt;\u0026amp;#34;{{.window}}\u0026amp;#34;\u0026lt;/span\u0026gt;\u0026lt;span class=\u0026quot;cp\u0026quot;\u0026gt;}}\u0026lt;/span\u0026gt;\u0026lt;span class=\u0026quot;s\u0026quot;\u0026gt;])) \u0026lt;/span\u0026gt;\u0026lt;span class=\u0026quot;s\u0026quot;\u0026gt;/ \u0026lt;/span\u0026gt;\u0026lt;span class=\u0026quot;s\u0026quot;\u0026gt;sum(rate(http_request_duration_seconds_count{ \u0026lt;/span\u0026gt;\u0026lt;span class=\u0026quot;cp\u0026quot;\u0026gt;{{\u0026lt;/span\u0026gt;\u0026lt;span class=\u0026quot;na\u0026quot;\u0026gt;.filter\u0026lt;/span\u0026gt;\u0026lt;span class=\u0026quot;cp\u0026quot;\u0026gt;}}\u0026lt;/span\u0026gt;\u0026lt;span class=\u0026quot;s\u0026quot;\u0026gt;job=\u0026amp;#34;\u0026lt;/span\u0026gt;\u0026lt;span class=\u0026quot;cp\u0026quot;\u0026gt;{{\u0026lt;/span\u0026gt;\u0026lt;span class=\u0026quot;na\u0026quot;\u0026gt;.job\u0026lt;/span\u0026gt;\u0026lt;span class=\u0026quot;cp\u0026quot;\u0026gt;}}\u0026lt;/span\u0026gt;\u0026lt;span class=\u0026quot;s\u0026quot;\u0026gt;\u0026amp;#34; }[\u0026lt;/span\u0026gt;\u0026lt;span class=\u0026quot;cp\u0026quot;\u0026gt;{{\u0026lt;/span\u0026gt;\u0026lt;span class=\u0026quot;s\u0026quot;\u0026gt;\u0026amp;#34;{{.window}}\u0026amp;#34;\u0026lt;/span\u0026gt;\u0026lt;span class=\u0026quot;cp\u0026quot;\u0026gt;}}\u0026lt;/span\u0026gt;\u0026lt;span class=\u0026quot;s\u0026quot;\u0026gt;]))))\nvar filterRegex = regexp.MustCompile(([^=]+=\u0026amp;#34;[^=,\u0026amp;#34;]+\u0026amp;#34;,)+)\n// SLIPlugin is the getting started plugin example. // // It will return an Sloth error ratio raw query that returns the error ratio of HTTP requests based // on the HTTP response status code, taking 5xx and 429 as error events. func SLIPlugin(ctx context.Context, meta, labels, options map[string]string) (string, error) { // Get job. \tjob, ok := options[\u0026quot;job\u0026quot;] if !ok { return \u0026quot;\u0026quot;, fmt.Errorf(\u0026quot;job options is required\u0026quot;) }\n\u0026lt;span class=\u0026quot;c1\u0026quot;\u0026gt;// Validate labels.  \terr := validateLabels(labels, \u0026quot;owner\u0026quot;, \u0026quot;tier\u0026quot;) if err != nil { return \u0026quot;\u0026quot;, fmt.Errorf(\u0026quot;invalid labels: %w\u0026quot;, err) }\n\u0026lt;span class=\u0026quot;c1\u0026quot;\u0026gt;// Sanitize filter.  \tfilter := options[\u0026quot;filter\u0026quot;] if filter != \u0026quot;\u0026quot; { filter = strings.Trim(filter, \u0026quot;{}\u0026quot;) filter = strings.Trim(filter, \u0026quot;,\u0026quot;) filter = filter + \u0026quot;,\u0026quot; match := filterRegex.MatchString(filter) if !match { return \u0026quot;\u0026quot;, fmt.Errorf(\u0026quot;invalid prometheus filter: %s\u0026quot;, filter) } }\n\u0026lt;span class=\u0026quot;c1\u0026quot;\u0026gt;// Create query.  \tvar b bytes.Buffer data := map[string]string{ \u0026quot;job\u0026quot;: job, \u0026quot;filter\u0026quot;: filter, } err = queryTpl.Execute(\u0026amp;b, data) if err != nil { return \u0026quot;\u0026quot;, fmt.Errorf(\u0026quot;could not execute template: %w\u0026quot;, err) }\n\u0026lt;span class=\u0026quot;k\u0026quot;\u0026gt;return\u0026lt;/span\u0026gt; \u0026lt;span class=\u0026quot;nx\u0026quot;\u0026gt;b\u0026lt;/span\u0026gt;\u0026lt;span class=\u0026quot;p\u0026quot;\u0026gt;.\u0026lt;/span\u0026gt;\u0026lt;span class=\u0026quot;nf\u0026quot;\u0026gt;String\u0026lt;/span\u0026gt;\u0026lt;span class=\u0026quot;p\u0026quot;\u0026gt;(),\u0026lt;/span\u0026gt; \u0026lt;span class=\u0026quot;kc\u0026quot;\u0026gt;nil\u0026lt;/span\u0026gt;  }\n// validateLabels will check the labels exist. func validateLabels(labels map[string]string, requiredKeys \u0026hellip;string) error { for _, k := range requiredKeys { v, ok := labels[k] if !ok || (ok \u0026amp;\u0026amp; v == \u0026quot;\u0026quot;) { return fmt.Errorf(\u0026quot;%q label is required\u0026quot;, k) } }\n\u0026lt;span class=\u0026quot;k\u0026quot;\u0026gt;return\u0026lt;/span\u0026gt; \u0026lt;span class=\u0026quot;kc\u0026quot;\u0026gt;nil\u0026lt;/span\u0026gt;  } \n  "},{"id":48,"href":"/examples/kubernetes/sli-plugin/","title":"SLI plugin","parent":"Kubernetes","content":" SLO spec  # This example shows the same example as home-wifi.yml but using Sloth Kubernetes CRD.# It will generate the Prometheus rules in a Kubernetes prometheus-operator PrometheusRules CRD.## `sloth generate -i ./examples/plugin-k8s-home-wifi.yml` -p ./examples#apiVersion:sloth.slok.dev/v1kind:PrometheusServiceLevelmetadata:name:sloth-slo-home-wifinamespace:monitoringlabels:prometheus:prometheusrole:alert-rulesapp:slothspec:service:\u0026#34;myservice\u0026#34;labels:owner:\u0026#34;myteam\u0026#34;repo:\u0026#34;myorg/myservice\u0026#34;tier:\u0026#34;2\u0026#34;slos:# We allow failing (5xx and 429) 1 request every 1000 requests (99.9%).- name:\u0026#34;requests-availability\u0026#34;objective:99.9description:\u0026#34;Common SLO based on availability for HTTP request responses.\u0026#34;sli:plugin:id:\u0026#34;getting_started_availability\u0026#34;options:job:\u0026#34;myservice\u0026#34;filter:\u0026#39;f1=\u0026#34;v1\u0026#34;,f2=\u0026#34;v2\u0026#34;\u0026#39;alerting:name:MyServiceHighErrorRatelabels:category:\u0026#34;availability\u0026#34;annotations:# Overwrite default Sloth SLO alert summmary on ticket and page alerts.summary:\u0026#34;High error rate on \u0026#39;myservice\u0026#39; requests responses\u0026#34;page_alert:labels:severity:pageteamrouting_key:myteamticket_alert:labels:severity:\u0026#34;slack\u0026#34;slack_channel:\u0026#34;#alerts-myteam\u0026#34;  Generated  ---# Code generated by Sloth (dev): https://github.com/slok/sloth.# DO NOT EDIT.apiVersion:monitoring.coreos.com/v1kind:PrometheusRulemetadata:creationTimestamp:nulllabels:app:slothapp.kubernetes.io/component:SLOapp.kubernetes.io/managed-by:slothprometheus:prometheusrole:alert-rulesname:sloth-slo-home-wifinamespace:monitoringspec:groups:- name:sloth-slo-sli-recordings-myservice-requests-availabilityrules:- expr:|-( sum(rate(http_request_duration_seconds_count{ f1=\u0026#34;v1\u0026#34;,f2=\u0026#34;v2\u0026#34;,job=\u0026#34;myservice\u0026#34;,code=~\u0026#34;(5..|429)\u0026#34; }[5m])) / sum(rate(http_request_duration_seconds_count{ f1=\u0026#34;v1\u0026#34;,f2=\u0026#34;v2\u0026#34;,job=\u0026#34;myservice\u0026#34; }[5m])))labels:cmd:examplesgen.showner:myteamrepo:myorg/myservicesloth_id:myservice-requests-availabilitysloth_service:myservicesloth_slo:requests-availabilitysloth_window:5mtier:\u0026#34;2\u0026#34;record:slo:sli_error:ratio_rate5m- expr:|-( sum(rate(http_request_duration_seconds_count{ f1=\u0026#34;v1\u0026#34;,f2=\u0026#34;v2\u0026#34;,job=\u0026#34;myservice\u0026#34;,code=~\u0026#34;(5..|429)\u0026#34; }[30m])) / sum(rate(http_request_duration_seconds_count{ f1=\u0026#34;v1\u0026#34;,f2=\u0026#34;v2\u0026#34;,job=\u0026#34;myservice\u0026#34; }[30m])))labels:cmd:examplesgen.showner:myteamrepo:myorg/myservicesloth_id:myservice-requests-availabilitysloth_service:myservicesloth_slo:requests-availabilitysloth_window:30mtier:\u0026#34;2\u0026#34;record:slo:sli_error:ratio_rate30m- expr:|-( sum(rate(http_request_duration_seconds_count{ f1=\u0026#34;v1\u0026#34;,f2=\u0026#34;v2\u0026#34;,job=\u0026#34;myservice\u0026#34;,code=~\u0026#34;(5..|429)\u0026#34; }[1h])) / sum(rate(http_request_duration_seconds_count{ f1=\u0026#34;v1\u0026#34;,f2=\u0026#34;v2\u0026#34;,job=\u0026#34;myservice\u0026#34; }[1h])))labels:cmd:examplesgen.showner:myteamrepo:myorg/myservicesloth_id:myservice-requests-availabilitysloth_service:myservicesloth_slo:requests-availabilitysloth_window:1htier:\u0026#34;2\u0026#34;record:slo:sli_error:ratio_rate1h- expr:|-( sum(rate(http_request_duration_seconds_count{ f1=\u0026#34;v1\u0026#34;,f2=\u0026#34;v2\u0026#34;,job=\u0026#34;myservice\u0026#34;,code=~\u0026#34;(5..|429)\u0026#34; }[2h])) / sum(rate(http_request_duration_seconds_count{ f1=\u0026#34;v1\u0026#34;,f2=\u0026#34;v2\u0026#34;,job=\u0026#34;myservice\u0026#34; }[2h])))labels:cmd:examplesgen.showner:myteamrepo:myorg/myservicesloth_id:myservice-requests-availabilitysloth_service:myservicesloth_slo:requests-availabilitysloth_window:2htier:\u0026#34;2\u0026#34;record:slo:sli_error:ratio_rate2h- expr:|-( sum(rate(http_request_duration_seconds_count{ f1=\u0026#34;v1\u0026#34;,f2=\u0026#34;v2\u0026#34;,job=\u0026#34;myservice\u0026#34;,code=~\u0026#34;(5..|429)\u0026#34; }[6h])) / sum(rate(http_request_duration_seconds_count{ f1=\u0026#34;v1\u0026#34;,f2=\u0026#34;v2\u0026#34;,job=\u0026#34;myservice\u0026#34; }[6h])))labels:cmd:examplesgen.showner:myteamrepo:myorg/myservicesloth_id:myservice-requests-availabilitysloth_service:myservicesloth_slo:requests-availabilitysloth_window:6htier:\u0026#34;2\u0026#34;record:slo:sli_error:ratio_rate6h- expr:|-( sum(rate(http_request_duration_seconds_count{ f1=\u0026#34;v1\u0026#34;,f2=\u0026#34;v2\u0026#34;,job=\u0026#34;myservice\u0026#34;,code=~\u0026#34;(5..|429)\u0026#34; }[1d])) / sum(rate(http_request_duration_seconds_count{ f1=\u0026#34;v1\u0026#34;,f2=\u0026#34;v2\u0026#34;,job=\u0026#34;myservice\u0026#34; }[1d])))labels:cmd:examplesgen.showner:myteamrepo:myorg/myservicesloth_id:myservice-requests-availabilitysloth_service:myservicesloth_slo:requests-availabilitysloth_window:1dtier:\u0026#34;2\u0026#34;record:slo:sli_error:ratio_rate1d- expr:|-( sum(rate(http_request_duration_seconds_count{ f1=\u0026#34;v1\u0026#34;,f2=\u0026#34;v2\u0026#34;,job=\u0026#34;myservice\u0026#34;,code=~\u0026#34;(5..|429)\u0026#34; }[3d])) / sum(rate(http_request_duration_seconds_count{ f1=\u0026#34;v1\u0026#34;,f2=\u0026#34;v2\u0026#34;,job=\u0026#34;myservice\u0026#34; }[3d])))labels:cmd:examplesgen.showner:myteamrepo:myorg/myservicesloth_id:myservice-requests-availabilitysloth_service:myservicesloth_slo:requests-availabilitysloth_window:3dtier:\u0026#34;2\u0026#34;record:slo:sli_error:ratio_rate3d- expr:|sum_over_time(slo:sli_error:ratio_rate5m{sloth_id=\u0026#34;myservice-requests-availability\u0026#34;, sloth_service=\u0026#34;myservice\u0026#34;, sloth_slo=\u0026#34;requests-availability\u0026#34;}[30d]) / ignoring (sloth_window) count_over_time(slo:sli_error:ratio_rate5m{sloth_id=\u0026#34;myservice-requests-availability\u0026#34;, sloth_service=\u0026#34;myservice\u0026#34;, sloth_slo=\u0026#34;requests-availability\u0026#34;}[30d])labels:sloth_window:30drecord:slo:sli_error:ratio_rate30d- name:sloth-slo-meta-recordings-myservice-requests-availabilityrules:- expr:vector(0.9990000000000001)labels:cmd:examplesgen.showner:myteamrepo:myorg/myservicesloth_id:myservice-requests-availabilitysloth_service:myservicesloth_slo:requests-availabilitytier:\u0026#34;2\u0026#34;record:slo:objective:ratio- expr:vector(1-0.9990000000000001)labels:cmd:examplesgen.showner:myteamrepo:myorg/myservicesloth_id:myservice-requests-availabilitysloth_service:myservicesloth_slo:requests-availabilitytier:\u0026#34;2\u0026#34;record:slo:error_budget:ratio- expr:vector(30)labels:cmd:examplesgen.showner:myteamrepo:myorg/myservicesloth_id:myservice-requests-availabilitysloth_service:myservicesloth_slo:requests-availabilitytier:\u0026#34;2\u0026#34;record:slo:time_period:days- expr:|slo:sli_error:ratio_rate5m{sloth_id=\u0026#34;myservice-requests-availability\u0026#34;, sloth_service=\u0026#34;myservice\u0026#34;, sloth_slo=\u0026#34;requests-availability\u0026#34;} / on(sloth_id, sloth_slo, sloth_service) group_left slo:error_budget:ratio{sloth_id=\u0026#34;myservice-requests-availability\u0026#34;, sloth_service=\u0026#34;myservice\u0026#34;, sloth_slo=\u0026#34;requests-availability\u0026#34;}labels:cmd:examplesgen.showner:myteamrepo:myorg/myservicesloth_id:myservice-requests-availabilitysloth_service:myservicesloth_slo:requests-availabilitytier:\u0026#34;2\u0026#34;record:slo:current_burn_rate:ratio- expr:|slo:sli_error:ratio_rate30d{sloth_id=\u0026#34;myservice-requests-availability\u0026#34;, sloth_service=\u0026#34;myservice\u0026#34;, sloth_slo=\u0026#34;requests-availability\u0026#34;} / on(sloth_id, sloth_slo, sloth_service) group_left slo:error_budget:ratio{sloth_id=\u0026#34;myservice-requests-availability\u0026#34;, sloth_service=\u0026#34;myservice\u0026#34;, sloth_slo=\u0026#34;requests-availability\u0026#34;}labels:cmd:examplesgen.showner:myteamrepo:myorg/myservicesloth_id:myservice-requests-availabilitysloth_service:myservicesloth_slo:requests-availabilitytier:\u0026#34;2\u0026#34;record:slo:period_burn_rate:ratio- expr:1- slo:period_burn_rate:ratio{sloth_id=\u0026#34;myservice-requests-availability\u0026#34;,sloth_service=\u0026#34;myservice\u0026#34;, sloth_slo=\u0026#34;requests-availability\u0026#34;}labels:cmd:examplesgen.showner:myteamrepo:myorg/myservicesloth_id:myservice-requests-availabilitysloth_service:myservicesloth_slo:requests-availabilitytier:\u0026#34;2\u0026#34;record:slo:period_error_budget_remaining:ratio- expr:vector(1)labels:cmd:examplesgen.showner:myteamrepo:myorg/myservicesloth_id:myservice-requests-availabilitysloth_mode:cli-gen-k8ssloth_objective:\u0026#34;99.9\u0026#34;sloth_service:myservicesloth_slo:requests-availabilitysloth_spec:sloth.slok.dev/v1sloth_version:devtier:\u0026#34;2\u0026#34;record:sloth_slo_info- name:sloth-slo-alerts-myservice-requests-availabilityrules:- alert:MyServiceHighErrorRateannotations:summary:High error rate on \u0026#39;myservice\u0026#39; requests responsestitle:(page) {{$labels.sloth_service}} {{$labels.sloth_slo}} SLO error budgetburn rate is too fast.expr:|( (slo:sli_error:ratio_rate5m{sloth_id=\u0026#34;myservice-requests-availability\u0026#34;, sloth_service=\u0026#34;myservice\u0026#34;, sloth_slo=\u0026#34;requests-availability\u0026#34;} \u0026gt; (14.4 * 0.0009999999999999432)) and ignoring (sloth_window) (slo:sli_error:ratio_rate1h{sloth_id=\u0026#34;myservice-requests-availability\u0026#34;, sloth_service=\u0026#34;myservice\u0026#34;, sloth_slo=\u0026#34;requests-availability\u0026#34;} \u0026gt; (14.4 * 0.0009999999999999432)) ) or ignoring (sloth_window) ( (slo:sli_error:ratio_rate30m{sloth_id=\u0026#34;myservice-requests-availability\u0026#34;, sloth_service=\u0026#34;myservice\u0026#34;, sloth_slo=\u0026#34;requests-availability\u0026#34;} \u0026gt; (6 * 0.0009999999999999432)) and ignoring (sloth_window) (slo:sli_error:ratio_rate6h{sloth_id=\u0026#34;myservice-requests-availability\u0026#34;, sloth_service=\u0026#34;myservice\u0026#34;, sloth_slo=\u0026#34;requests-availability\u0026#34;} \u0026gt; (6 * 0.0009999999999999432)) )labels:category:availabilitysloth_severity:page- alert:MyServiceHighErrorRateannotations:summary:High error rate on \u0026#39;myservice\u0026#39; requests responsestitle:(ticket) {{$labels.sloth_service}} {{$labels.sloth_slo}} SLO errorbudget burn rate is too fast.expr:|( (slo:sli_error:ratio_rate2h{sloth_id=\u0026#34;myservice-requests-availability\u0026#34;, sloth_service=\u0026#34;myservice\u0026#34;, sloth_slo=\u0026#34;requests-availability\u0026#34;} \u0026gt; (3 * 0.0009999999999999432)) and ignoring (sloth_window) (slo:sli_error:ratio_rate1d{sloth_id=\u0026#34;myservice-requests-availability\u0026#34;, sloth_service=\u0026#34;myservice\u0026#34;, sloth_slo=\u0026#34;requests-availability\u0026#34;} \u0026gt; (3 * 0.0009999999999999432)) ) or ignoring (sloth_window) ( (slo:sli_error:ratio_rate6h{sloth_id=\u0026#34;myservice-requests-availability\u0026#34;, sloth_service=\u0026#34;myservice\u0026#34;, sloth_slo=\u0026#34;requests-availability\u0026#34;} \u0026gt; (1 * 0.0009999999999999432)) and ignoring (sloth_window) (slo:sli_error:ratio_rate3d{sloth_id=\u0026#34;myservice-requests-availability\u0026#34;, sloth_service=\u0026#34;myservice\u0026#34;, sloth_slo=\u0026#34;requests-availability\u0026#34;} \u0026gt; (1 * 0.0009999999999999432)) )labels:category:availabilitysloth_severity:ticket  Plugin  package availability import ( \u0026quot;bytes\u0026quot; \u0026quot;context\u0026quot; \u0026quot;fmt\u0026quot; \u0026quot;regexp\u0026quot; \u0026quot;strings\u0026quot; \u0026quot;text/template\u0026quot; )\nconst ( SLIPluginVersion = \u0026quot;prometheus/v1\u0026quot; SLIPluginID = \u0026quot;getting_started_availability\u0026quot; )\nvar queryTpl = template.Must(template.New(\u0026quot;\u0026quot;).Parse(\u0026lt;/span\u0026gt;\u0026lt;span class=\u0026quot;s\u0026quot;\u0026gt;sum(rate(http_request_duration_seconds_count{ \u0026lt;/span\u0026gt;\u0026lt;span class=\u0026quot;cp\u0026quot;\u0026gt;{{\u0026lt;/span\u0026gt;\u0026lt;span class=\u0026quot;na\u0026quot;\u0026gt;.filter\u0026lt;/span\u0026gt;\u0026lt;span class=\u0026quot;cp\u0026quot;\u0026gt;}}\u0026lt;/span\u0026gt;\u0026lt;span class=\u0026quot;s\u0026quot;\u0026gt;job=\u0026amp;#34;\u0026lt;/span\u0026gt;\u0026lt;span class=\u0026quot;cp\u0026quot;\u0026gt;{{\u0026lt;/span\u0026gt;\u0026lt;span class=\u0026quot;na\u0026quot;\u0026gt;.job\u0026lt;/span\u0026gt;\u0026lt;span class=\u0026quot;cp\u0026quot;\u0026gt;}}\u0026lt;/span\u0026gt;\u0026lt;span class=\u0026quot;s\u0026quot;\u0026gt;\u0026amp;#34;,code=~\u0026amp;#34;(5..|429)\u0026amp;#34; }[\u0026lt;/span\u0026gt;\u0026lt;span class=\u0026quot;cp\u0026quot;\u0026gt;{{\u0026lt;/span\u0026gt;\u0026lt;span class=\u0026quot;s\u0026quot;\u0026gt;\u0026amp;#34;{{.window}}\u0026amp;#34;\u0026lt;/span\u0026gt;\u0026lt;span class=\u0026quot;cp\u0026quot;\u0026gt;}}\u0026lt;/span\u0026gt;\u0026lt;span class=\u0026quot;s\u0026quot;\u0026gt;])) \u0026lt;/span\u0026gt;\u0026lt;span class=\u0026quot;s\u0026quot;\u0026gt;/ \u0026lt;/span\u0026gt;\u0026lt;span class=\u0026quot;s\u0026quot;\u0026gt;sum(rate(http_request_duration_seconds_count{ \u0026lt;/span\u0026gt;\u0026lt;span class=\u0026quot;cp\u0026quot;\u0026gt;{{\u0026lt;/span\u0026gt;\u0026lt;span class=\u0026quot;na\u0026quot;\u0026gt;.filter\u0026lt;/span\u0026gt;\u0026lt;span class=\u0026quot;cp\u0026quot;\u0026gt;}}\u0026lt;/span\u0026gt;\u0026lt;span class=\u0026quot;s\u0026quot;\u0026gt;job=\u0026amp;#34;\u0026lt;/span\u0026gt;\u0026lt;span class=\u0026quot;cp\u0026quot;\u0026gt;{{\u0026lt;/span\u0026gt;\u0026lt;span class=\u0026quot;na\u0026quot;\u0026gt;.job\u0026lt;/span\u0026gt;\u0026lt;span class=\u0026quot;cp\u0026quot;\u0026gt;}}\u0026lt;/span\u0026gt;\u0026lt;span class=\u0026quot;s\u0026quot;\u0026gt;\u0026amp;#34; }[\u0026lt;/span\u0026gt;\u0026lt;span class=\u0026quot;cp\u0026quot;\u0026gt;{{\u0026lt;/span\u0026gt;\u0026lt;span class=\u0026quot;s\u0026quot;\u0026gt;\u0026amp;#34;{{.window}}\u0026amp;#34;\u0026lt;/span\u0026gt;\u0026lt;span class=\u0026quot;cp\u0026quot;\u0026gt;}}\u0026lt;/span\u0026gt;\u0026lt;span class=\u0026quot;s\u0026quot;\u0026gt;]))))\nvar filterRegex = regexp.MustCompile(([^=]+=\u0026amp;#34;[^=,\u0026amp;#34;]+\u0026amp;#34;,)+)\n// SLIPlugin is the getting started plugin example. // // It will return an Sloth error ratio raw query that returns the error ratio of HTTP requests based // on the HTTP response status code, taking 5xx and 429 as error events. func SLIPlugin(ctx context.Context, meta, labels, options map[string]string) (string, error) { // Get job. \tjob, ok := options[\u0026quot;job\u0026quot;] if !ok { return \u0026quot;\u0026quot;, fmt.Errorf(\u0026quot;job options is required\u0026quot;) }\n\u0026lt;span class=\u0026quot;c1\u0026quot;\u0026gt;// Validate labels.  \terr := validateLabels(labels, \u0026quot;owner\u0026quot;, \u0026quot;tier\u0026quot;) if err != nil { return \u0026quot;\u0026quot;, fmt.Errorf(\u0026quot;invalid labels: %w\u0026quot;, err) }\n\u0026lt;span class=\u0026quot;c1\u0026quot;\u0026gt;// Sanitize filter.  \tfilter := options[\u0026quot;filter\u0026quot;] if filter != \u0026quot;\u0026quot; { filter = strings.Trim(filter, \u0026quot;{}\u0026quot;) filter = strings.Trim(filter, \u0026quot;,\u0026quot;) filter = filter + \u0026quot;,\u0026quot; match := filterRegex.MatchString(filter) if !match { return \u0026quot;\u0026quot;, fmt.Errorf(\u0026quot;invalid prometheus filter: %s\u0026quot;, filter) } }\n\u0026lt;span class=\u0026quot;c1\u0026quot;\u0026gt;// Create query.  \tvar b bytes.Buffer data := map[string]string{ \u0026quot;job\u0026quot;: job, \u0026quot;filter\u0026quot;: filter, } err = queryTpl.Execute(\u0026amp;b, data) if err != nil { return \u0026quot;\u0026quot;, fmt.Errorf(\u0026quot;could not execute template: %w\u0026quot;, err) }\n\u0026lt;span class=\u0026quot;k\u0026quot;\u0026gt;return\u0026lt;/span\u0026gt; \u0026lt;span class=\u0026quot;nx\u0026quot;\u0026gt;b\u0026lt;/span\u0026gt;\u0026lt;span class=\u0026quot;p\u0026quot;\u0026gt;.\u0026lt;/span\u0026gt;\u0026lt;span class=\u0026quot;nf\u0026quot;\u0026gt;String\u0026lt;/span\u0026gt;\u0026lt;span class=\u0026quot;p\u0026quot;\u0026gt;(),\u0026lt;/span\u0026gt; \u0026lt;span class=\u0026quot;kc\u0026quot;\u0026gt;nil\u0026lt;/span\u0026gt;  }\n// validateLabels will check the labels exist. func validateLabels(labels map[string]string, requiredKeys \u0026hellip;string) error { for _, k := range requiredKeys { v, ok := labels[k] if !ok || (ok \u0026amp;\u0026amp; v == \u0026quot;\u0026quot;) { return fmt.Errorf(\u0026quot;%q label is required\u0026quot;, k) } }\n\u0026lt;span class=\u0026quot;k\u0026quot;\u0026gt;return\u0026lt;/span\u0026gt; \u0026lt;span class=\u0026quot;kc\u0026quot;\u0026gt;nil\u0026lt;/span\u0026gt;  } \n  "},{"id":49,"href":"/tags/","title":"Tags","parent":"","content":""}]