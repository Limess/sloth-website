<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Introduction on Sloth</title><link>https://sloth.dev/introduction/</link><description>Recent content in Introduction on Sloth</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><atom:link href="https://sloth.dev/introduction/index.xml" rel="self" type="application/rss+xml"/><item><title>Getting started</title><link>https://sloth.dev/introduction/getting-started/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://sloth.dev/introduction/getting-started/</guid><description>Get sloth and execute with one of the examples:
sloth generate -i ./examples/getting-started.yml From the spec, you will obtain the rules for Prometheus with the generated SLO recording rules and alert rules.
SLO spec version: &amp;#34;prometheus/v1&amp;#34; service: &amp;#34;myservice&amp;#34; labels: owner: &amp;#34;myteam&amp;#34; repo: &amp;#34;myorg/myservice&amp;#34; tier: &amp;#34;2&amp;#34; slos: # We allow failing (5xx and 429) 1 request every 1000 requests (99.9%). - name: &amp;#34;requests-availability&amp;#34; objective: 99.9 description: &amp;#34;Common SLO based on availability for HTTP request responses.</description></item><item><title>Features</title><link>https://sloth.dev/introduction/features/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://sloth.dev/introduction/features/</guid><description>Simple, maintainable and understandable SLO spec. Reliable SLO metrics and alerts. Based on Google SLO implementation and [multi window multi burn][mwmb] alerts framework. Autogenerates Prometheus SLI recording rules in different time windows. Autogenerates Prometheus SLO metadata rules. Autogenerates Prometheus SLO [multi window multi burn][mwmb] alert rules (Page and warning). SLO spec validation (including validate command for Gitops and CI). Customization of labels, disabling different type of alerts&amp;hellip; A single way (uniform) of creating SLOs across all different services and teams.</description></item><item><title>Installing Sloth</title><link>https://sloth.dev/introduction/install/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://sloth.dev/introduction/install/</guid><description>Releases Get binary releases from https://github.com/slok/sloth/releases
Docker images Official multi arch docker images in dockerhub.
docker pull slok/sloth Building from source code Clone the repository and build:
git clone git@github.com:slok/sloth.git &amp;amp;&amp;amp; \ cd ./sloth &amp;amp;&amp;amp; \ make build &amp;amp;&amp;amp; \ ls -la ./bin Kubernetes Helm chart Raw Kubernetes manifests without common SLI plugins Raw Kubernetes manifests with common SLI plugins Kustomize</description></item></channel></rss>