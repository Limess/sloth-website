<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Sloth</title><link>https://sloth.dev/</link><description>Recent content on Sloth</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><atom:link href="https://sloth.dev/index.xml" rel="self" type="application/rss+xml"/><item><title>CLI</title><link>https://sloth.dev/usage/cli/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://sloth.dev/usage/cli/</guid><description>Something</description></item><item><title>Default</title><link>https://sloth.dev/specs/default/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://sloth.dev/specs/default/</guid><description>Something</description></item><item><title>Getting started</title><link>https://sloth.dev/introduction/getting-started/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://sloth.dev/introduction/getting-started/</guid><description>Get sloth and execute with one of the examples:
sloth generate -i ./examples/getting-started.yml From the spec, you will obtain the rules for Prometheus with the generated SLO recording rules and alert rules.
SLO spec version: &amp;#34;prometheus/v1&amp;#34; service: &amp;#34;myservice&amp;#34; labels: owner: &amp;#34;myteam&amp;#34; repo: &amp;#34;myorg/myservice&amp;#34; tier: &amp;#34;2&amp;#34; slos: # We allow failing (5xx and 429) 1 request every 1000 requests (99.9%). - name: &amp;#34;requests-availability&amp;#34; objective: 99.9 description: &amp;#34;Common SLO based on availability for HTTP request responses.</description></item><item><title>Features</title><link>https://sloth.dev/introduction/features/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://sloth.dev/introduction/features/</guid><description>Simple, maintainable and understandable SLO spec. Reliable SLO metrics and alerts. Based on Google SLO implementation and [multi window multi burn][mwmb] alerts framework. Autogenerates Prometheus SLI recording rules in different time windows. Autogenerates Prometheus SLO metadata rules. Autogenerates Prometheus SLO [multi window multi burn][mwmb] alert rules (Page and warning). SLO spec validation (including validate command for Gitops and CI). Customization of labels, disabling different type of alerts&amp;hellip; A single way (uniform) of creating SLOs across all different services and teams.</description></item><item><title>Kubernetes (CRD)</title><link>https://sloth.dev/specs/kubernetes/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://sloth.dev/specs/kubernetes/</guid><description>Something</description></item><item><title>Kubernetes controller</title><link>https://sloth.dev/usage/kubernetes/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://sloth.dev/usage/kubernetes/</guid><description>Something</description></item><item><title>SLI plugins</title><link>https://sloth.dev/usage/plugins/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://sloth.dev/usage/plugins/</guid><description>Something</description></item><item><title>Installing Sloth</title><link>https://sloth.dev/introduction/install/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://sloth.dev/introduction/install/</guid><description>Releases Get binary releases from https://github.com/slok/sloth/releases
Docker images Official multi arch docker images in dockerhub.
docker pull slok/sloth Building from source code Clone the repository and build:
git clone git@github.com:slok/sloth.git &amp;amp;&amp;amp; \ cd ./sloth &amp;amp;&amp;amp; \ make build &amp;amp;&amp;amp; \ ls -la ./bin Kubernetes Helm chart Raw Kubernetes manifests without common SLI plugins Raw Kubernetes manifests with common SLI plugins Kustomize</description></item><item><title>OpenSLO</title><link>https://sloth.dev/specs/openslo/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://sloth.dev/specs/openslo/</guid><description>Something</description></item><item><title>Metrics</title><link>https://sloth.dev/architecture/metrics/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://sloth.dev/architecture/metrics/</guid><description>Something</description></item><item><title>Alerts</title><link>https://sloth.dev/architecture/alerts/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://sloth.dev/architecture/alerts/</guid><description>Something</description></item><item><title/><link>https://sloth.dev/sli-plugins/group1/plugin0/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://sloth.dev/sli-plugins/group1/plugin0/</guid><description>Kubernetes apiserver availability Availability plugin for the Kubernetes apiserver.
Uses the API HTTP response status codes to measure the events as good or bad. It counts an error event when HTTP response status code is &amp;gt;=500 or 429.
In other words, it counts as good events the &amp;lt;500 and !429 HTTP response status codes.
Options filter: (Optional) A prometheus filter string using concatenated labels (e.</description></item><item><title/><link>https://sloth.dev/usage/slo-validation/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://sloth.dev/usage/slo-validation/</guid><description/></item><item><title>Plugin 1</title><link>https://sloth.dev/sli-plugins/group1/plugin1/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://sloth.dev/sli-plugins/group1/plugin1/</guid><description>Something</description></item><item><title>Plugin 2</title><link>https://sloth.dev/sli-plugins/group1/plugin2/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://sloth.dev/sli-plugins/group1/plugin2/</guid><description>Something</description></item><item><title>Plugin 3</title><link>https://sloth.dev/sli-plugins/group2/plugin3/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://sloth.dev/sli-plugins/group2/plugin3/</guid><description>Something</description></item><item><title>Plugin 4</title><link>https://sloth.dev/sli-plugins/group3/plugin4/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://sloth.dev/sli-plugins/group3/plugin4/</guid><description>Something</description></item><item><title>Plugin 5</title><link>https://sloth.dev/sli-plugins/group3/plugin5/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://sloth.dev/sli-plugins/group3/plugin5/</guid><description>Something</description></item></channel></rss>