<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>SLO API &amp; Specs on Sloth</title><link>https://sloth.dev/specs/</link><description>Recent content in SLO API &amp; Specs on Sloth</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><atom:link href="https://sloth.dev/specs/index.xml" rel="self" type="application/rss+xml"/><item><title>Default (prometheus/v1)</title><link>https://sloth.dev/specs/default/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://sloth.dev/specs/default/</guid><description>Only CLI, Not Kubernetes compatible
This spec can&amp;rsquo;t be used with Kubernetes CRDs, use Kubernetes spec instead. This is the default format for Sloth, doesn&amp;rsquo;t depend on Kubernetes CRDs or anything.
Normally this format is used when the integration you want is a vanilla Prometheus integration with raw Prometheus rules, so, this will generate the prometheus recording and alerting rules in Standard Prometheus YAML format.
Spec Examples CLI Example:</description></item><item><title>Kubernetes (CRD)</title><link>https://sloth.dev/specs/kubernetes/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://sloth.dev/specs/kubernetes/</guid><description>CLI compatible
This spec can be used in the same way the default spec is used with the CLI. Kubernetes compatible
This spec can be used as a Kubernetes resource using CR (needs CRD registered on Kubernetes APIserver). Kubernetes format means that the SLOs use a Kubernetes style spec. Is very similar to the default one, except that this format can be used in two ways, the regular CLI mode, and in Kubernetes controller mode using CRs.</description></item><item><title>OpenSLO</title><link>https://sloth.dev/specs/openslo/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://sloth.dev/specs/openslo/</guid><description>Only CLI, Not Kubernetes compatible
This spec can&amp;rsquo;t be used with Kubernetes CRDs, use Kubernetes spec instead. Sloth supports OpenSLO v1alpha spec, however we need to take into account that it has some restrictions:
OpenSLO time window restricted to 30 days. Only Objective ratio metrics are supported. Only Prometheus and PromQL query types are supported. Configuration fields not required by Sloth will be ignored. Regarding Sloth features, OpenSLO spec doesn&amp;rsquo;t support all of the sloth features:</description></item></channel></rss>